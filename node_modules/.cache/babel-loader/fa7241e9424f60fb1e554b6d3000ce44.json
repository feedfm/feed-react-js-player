{"ast":null,"code":"var _jsxFileName = \"/Users/jarow/Documents/feedtest/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const status = useScript(\"https://feed.fm/js/feed-media-audio-player.1.99.2.min.js\");\n  var player = new Feed.Player('demo', 'demo'); // Display all the events the player triggers\n\n  player.on('all', function (event) {\n    console.log('player triggered event \\'' + event + '\\' with arguments:', Array.prototype.splice.call(arguments, 1));\n  });\n  var playerView = new Feed.PlayerView('player-view-div', player);\n  player.tune();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"player-view-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-button\",\n      children: \"play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pause-button\",\n      children: \"pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"skip-button\",\n      children: \"skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"KnhrVUMAU9xeWQjRlzV8Su+Ts6Q=\", false, function () {\n  return [useScript];\n});\n\n_c = App;\n\nfunction useScript(src) {\n  _s2();\n\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? \"loading\" : \"idle\");\n  useEffect(() => {\n    // Allow falsy src value if waiting on other data needed for\n    // constructing the script URL passed to this hook.\n    if (!src) {\n      setStatus(\"idle\");\n      return;\n    } // Fetch existing script element by src\n    // It may have been added by another intance of this hook\n\n\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n\n    if (!script) {\n      // Create script\n      script = document.createElement(\"script\");\n      script.src = src;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\"); // Add script to document body\n\n      document.body.appendChild(script); // Store status in attribute on script\n      // This can be read by other instances of this hook\n\n      const setAttributeFromEvent = event => {\n        script.setAttribute(\"data-status\", event.type === \"load\" ? \"ready\" : \"error\");\n      };\n\n      script.addEventListener(\"load\", setAttributeFromEvent);\n      script.addEventListener(\"error\", setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.getAttribute(\"data-status\"));\n    } // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n\n\n    const setStateFromEvent = event => {\n      setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n    }; // Add event listeners\n\n\n    script.addEventListener(\"load\", setStateFromEvent);\n    script.addEventListener(\"error\", setStateFromEvent); // Remove event listeners on cleanup\n\n    return () => {\n      if (script) {\n        script.removeEventListener(\"load\", setStateFromEvent);\n        script.removeEventListener(\"error\", setStateFromEvent);\n      }\n    };\n  }, [src] // Only re-run effect if script src changes\n  );\n  return status;\n}\n\n_s2(useScript, \"+f9IL1HePzIreJ9B7ooGFgOjwwU=\");\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","status","useScript","player","Feed","Player","on","event","console","log","Array","prototype","splice","call","arguments","playerView","PlayerView","tune","src","setStatus","script","document","querySelector","createElement","async","setAttribute","body","appendChild","setAttributeFromEvent","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener"],"sources":["/Users/jarow/Documents/feedtest/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const status = useScript(\n    \"https://feed.fm/js/feed-media-audio-player.1.99.2.min.js\"\n  );\n  var player = new Feed.Player('demo', 'demo');\n    \n    // Display all the events the player triggers\n    player.on('all', function(event) {\n      console.log('player triggered event \\'' + event + '\\' with arguments:', Array.prototype.splice.call(arguments, 1));\n    });\n    \n    var playerView = new Feed.PlayerView('player-view-div', player);    \n    \n    player.tune();\n  return (\n      <div id=\"player-view-div\">\n        <div className='status'></div>\n        <button className=\"play-button\">play</button>\n        <button className=\"pause-button\">pause</button>\n        <button className=\"skip-button\">skip</button>\n      </div>\n  );\n}\nfunction useScript(src) {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? \"loading\" : \"idle\");\n  useEffect(\n    () => {\n      // Allow falsy src value if waiting on other data needed for\n      // constructing the script URL passed to this hook.\n      if (!src) {\n        setStatus(\"idle\");\n        return;\n      }\n      // Fetch existing script element by src\n      // It may have been added by another intance of this hook\n      let script = document.querySelector(`script[src=\"${src}\"]`);\n      if (!script) {\n        // Create script\n        script = document.createElement(\"script\");\n        script.src = src;\n        script.async = true;\n        script.setAttribute(\"data-status\", \"loading\");\n        // Add script to document body\n        document.body.appendChild(script);\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event) => {\n          script.setAttribute(\n            \"data-status\",\n            event.type === \"load\" ? \"ready\" : \"error\"\n          );\n        };\n        script.addEventListener(\"load\", setAttributeFromEvent);\n        script.addEventListener(\"error\", setAttributeFromEvent);\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute(\"data-status\"));\n      }\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event) => {\n        setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n      };\n      // Add event listeners\n      script.addEventListener(\"load\", setStateFromEvent);\n      script.addEventListener(\"error\", setStateFromEvent);\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener(\"load\", setStateFromEvent);\n          script.removeEventListener(\"error\", setStateFromEvent);\n        }\n      };\n    },\n    [src] // Only re-run effect if script src changes\n  );\n  return status;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}