{"ast":null,"code":"'use strict';\n\nvar tinyCookie = require('tiny-cookie');\n/* eslint-disable no-console */\n\n\nvar enabled = false;\n\nvar log = function log() {\n  var args = Array.prototype.slice.call(arguments);\n  args[0] = Date.now() + ' feed.fm: ' + args[0];\n\n  if (enabled) {\n    console.log.apply(console, args);\n  }\n\n  var historyEntry;\n\n  try {\n    historyEntry = JSON.stringify({\n      ts: new Date(),\n      message: args[0],\n      args: args.slice(1)\n    });\n  } catch (e) {\n    historyEntry = JSON.stringify({\n      ts: new Date(),\n      message: args[0],\n      args: 'truncated'\n    });\n  }\n\n  log.history.push(historyEntry);\n\n  if (history.length > 500) {\n    log.history.shift();\n  }\n};\n\nlog.history = [];\n\nlog.enable = function () {\n  enabled = true;\n};\n\nlog.reset = function () {\n  var oldHistory = log.history;\n  log.history = [];\n  return oldHistory;\n};\n\nfunction addProtocol(url, secure) {\n  // handle '//somewhere.com/' url's\n  if (url.slice(0, 2) === '//') {\n    if (secure === true) {\n      url = 'https:' + url;\n    } else if (secure === false) {\n      url = 'http:' + url;\n    } else if (window.location.protocol.substr(0, 4) === 'http') {\n      url = window.location.protocol + url;\n    } else {\n      url = 'http';\n    }\n  }\n\n  return url;\n}\n/**\n  * The below are adapted from the Underscore library:\n  *     Underscore.js 1.5.2\n  *     http://underscorejs.org\n  *   (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n  *   Underscore may be freely distributed under the MIT license.\n  */\n\n\nvar idCounter = 0;\n\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return prefix + id;\n}\n\nvar nativeIndexOf = Array.prototype.indexOf;\n\nfunction contains(obj, target) {\n  if (obj === null) return false;\n  if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n  return obj.some(function (value) {\n    return value === target;\n  });\n}\n\nfunction uniq(array, isSorted, iterator, context) {\n  if (typeof isSorted === 'function') {\n    context = iterator;\n    iterator = isSorted;\n    isSorted = false;\n  }\n\n  var initial = iterator ? array.map(iterator, context) : array;\n  var results = [];\n  var seen = [];\n  initial.forEach(function (value, index) {\n    if (isSorted ? !index || seen[seen.length - 1] !== value : !contains(seen, value)) {\n      seen.push(value);\n      results.push(array[index]);\n    }\n  });\n  return results;\n}\n\nfunction intersection(alpha, tests) {\n  var retests = tests.map(function (test) {\n    return new RegExp(test);\n  });\n  return uniq(alpha).filter(function (item) {\n    return retests.find(function (other) {\n      return other.test(item);\n    });\n  });\n}\n\nfunction once(func) {\n  var ran = false,\n      memo;\n  return function () {\n    if (ran) return memo;\n    ran = true;\n    memo = func.apply(this, arguments);\n    func = null;\n    return memo;\n  };\n}\n\nfunction repeatAfter(delay, max, cb) {\n  delay = delay ? 2 * delay : 200;\n\n  if (delay > max) {\n    delay = max;\n  }\n\n  setTimeout(function () {\n    cb(delay);\n  }, delay);\n}\n\nvar baseUrl = 'https://feed.fm';\n\nfunction getBaseUrl() {\n  return baseUrl;\n}\n\nfunction setBaseUrl(url) {\n  baseUrl = addProtocol(url);\n}\n\nvar cookieName = 'cid';\nvar clientPromise;\nvar noDocument = typeof document === 'undefined';\nvar noDocumentClientId = null;\n\nfunction _getStoredCid() {\n  if (noDocument) {\n    return noDocumentClientId;\n  } else {\n    return tinyCookie.getCookie(cookieName);\n  }\n}\n\nfunction _setStoredCid(value) {\n  if (noDocument) {\n    noDocumentClientId = value;\n  } else {\n    tinyCookie.setCookie(cookieName, value, {\n      expires: 3650,\n      path: '/'\n    });\n  }\n}\n\nfunction _deleteStoredCid() {\n  if (noDocument) {\n    noDocumentClientId = null;\n  } else {\n    tinyCookie.removeCookie(cookieName);\n  }\n} // hit the server up for a client id and return it to the callback\n\n\nfunction _requestClientId(onSuccess, delay) {\n  // see if we've got a cookie\n  var clientId = _getStoredCid();\n\n  if (clientId) {\n    return onSuccess(clientId);\n  } else {\n    fetch(getBaseUrl() + '/api/v2/client', {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (response.success) {\n        onSuccess(response.client_id);\n      } else {\n        repeatAfter(delay, 2000, function (newDelay) {\n          // retry until the end of time\n          _requestClientId(onSuccess, newDelay);\n        });\n      }\n    }).catch(function (response) {\n      if (response.status === 403) {\n        try {\n          var fullResponse = JSON.parse(response.responseText);\n          log('error trying to get client id:', fullResponse);\n        } catch (e) {\n          // some other response - fall through and try again\n          log('unknown response for client id request', e.message);\n        }\n      } else {\n        log('unknown client id response status', response.status);\n      }\n\n      repeatAfter(delay, 2000, function (newDelay) {\n        // retry until the end of time\n        _requestClientId(onSuccess, newDelay);\n      });\n    });\n  }\n}\n\nfunction getClientId() {\n  if (!clientPromise) {\n    var localClientPromise = clientPromise = new Promise(function (resolve) {\n      _requestClientId(function (clientId) {\n        if (clientPromise === localClientPromise) {\n          // success!\n          _setStoredCid(clientId);\n\n          resolve(clientId);\n        } else if (clientPromise) {\n          // end user updated the client id while we were waiting for a new one\n          clientPromise.then(function (clientId) {\n            resolve(clientId);\n          });\n        } else {\n          // end user deleted the client id while we were waiting for a new one\n          getClientId().then(function (clientId) {\n            resolve(clientId);\n          });\n        }\n      });\n    });\n  }\n\n  return clientPromise;\n}\n\nvar getStoredClientId = _getStoredCid;\nvar setStoredClientId = _setStoredCid;\n\nfunction deleteClientId() {\n  _deleteStoredCid();\n\n  clientPromise = null;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar slice = Array.prototype.slice;\nvar Events = {\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on: function on(name, callback, context) {\n    if (!eventsApi(this, 'on', name, [callback, context]) || !callback) {\n      return this;\n    }\n\n    if (!this._events) {\n      this._events = {};\n    }\n\n    var events = this._events[name] || (this._events[name] = []);\n    events.push({\n      callback: callback,\n      context: context,\n      ctx: context || this\n    });\n    return this;\n  },\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed.\n  once: function once$1(name, callback, context) {\n    if (!eventsApi(this, 'once', name, [callback, context]) || !callback) {\n      return this;\n    }\n\n    var self = this;\n    var once$1 = once(function () {\n      self.off(name, once$1);\n      callback.apply(this, arguments);\n    });\n    once$1._callback = callback;\n    return this.on(name, once$1, context);\n  },\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off: function off(name, callback, context) {\n    var retain, ev, events, names, i, l, j, k;\n\n    if (!this._events || !eventsApi(this, 'off', name, [callback, context])) {\n      return this;\n    }\n\n    if (!name && !callback && !context) {\n      this._events = {};\n      return this;\n    }\n\n    names = name ? [name] : Object.keys(this._events);\n\n    for (i = 0, l = names.length; i < l; i++) {\n      name = names[i];\n\n      if (events = this._events[name]) {\n        // eslint-disable-line no-cond-assign\n        this._events[name] = retain = [];\n\n        if (callback || context) {\n          for (j = 0, k = events.length; j < k; j++) {\n            ev = events[j];\n\n            if (callback && callback !== ev.callback && callback !== ev.callback._callback || context && context !== ev.context) {\n              retain.push(ev);\n            }\n          }\n        }\n\n        if (!retain.length) {\n          delete this._events[name];\n        }\n      }\n    }\n\n    return this;\n  },\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger: function trigger(name) {\n    if (!this._events) {\n      return this;\n    }\n\n    var args = slice.call(arguments, 1);\n\n    if (!eventsApi(this, 'trigger', name, args)) {\n      return this;\n    }\n\n    var events = this._events[name];\n    var allEvents = this._events.all;\n\n    if (events) {\n      triggerEvents(events, args);\n    }\n\n    if (allEvents) {\n      triggerEvents(allEvents, arguments);\n    }\n\n    return this;\n  },\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening: function stopListening(obj, name, callback) {\n    var listeners = this._listeners;\n\n    if (!listeners) {\n      return this;\n    }\n\n    var deleteListener = !name && !callback;\n\n    if (_typeof(name) === 'object') {\n      callback = this;\n    }\n\n    if (obj) {\n      (listeners = {})[obj._listenerId] = obj;\n    }\n    /*jshint forin:false */\n\n\n    for (var id in listeners) {\n      listeners[id].off(name, callback, this);\n\n      if (deleteListener) {\n        delete this._listeners[id];\n      }\n    }\n\n    return this;\n  }\n}; // Regular expression used to split event strings.\n\nvar eventSplitter = /\\s+/; // Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\n\nvar eventsApi = function eventsApi(obj, action, name, rest) {\n  if (!name) {\n    return true;\n  } // Handle event maps.\n\n\n  if (_typeof(name) === 'object') {\n    /*jshint forin:false */\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n\n    return false;\n  } // Handle space separated event names.\n\n\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n\n    return false;\n  }\n\n  return true;\n}; // A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\n\n\nvar triggerEvents = function triggerEvents(events, args) {\n  var ev,\n      i = -1,\n      l = events.length,\n      a1 = args[0],\n      a2 = args[1],\n      a3 = args[2];\n\n  switch (args.length) {\n    case 0:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx);\n      }\n\n      return;\n\n    case 1:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx, a1);\n      }\n\n      return;\n\n    case 2:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx, a1, a2);\n      }\n\n      return;\n\n    case 3:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n      }\n\n      return;\n\n    default:\n      while (++i < l) {\n        (ev = events[i]).callback.apply(ev.ctx, args);\n      }\n\n  }\n};\n\nvar listenMethods = {\n  listenTo: 'on',\n  listenToOnce: 'once'\n}; // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\n\nvar _loop = function _loop() {\n  var method = _Object$keys[_i];\n  var implementation = listenMethods[method];\n\n  Events[method] = function (obj, name, callback) {\n    var listeners = this._listeners || (this._listeners = {});\n    var id = obj._listenerId || (obj._listenerId = uniqueId('l'));\n    listeners[id] = obj;\n\n    if (_typeof(name) === 'object') {\n      callback = this;\n    }\n\n    obj[implementation](name, callback, this);\n    return this;\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(listenMethods); _i < _Object$keys.length; _i++) {\n  _loop();\n}\n/**\n * This class connects to a specific simulcast stream and\n * sends out events to indicate when new songs are starting\n * or when music has stopped playing. This listener has a\n * 'state' that is one of \n * \n *   'idle' - no music is playing\n *   'playing' - a song is actively playing\n *   'paused' - the current song is paused\n *   'music-unavailable' - no music is available for this client\n * \n * events:\n *    play-started - indicates a new song has begun playback, or we've\n *        dropped in on an already playing song\n *    music-unavailable - indicates the listener may not listen to music\n *    music-stopped - indicates that music has stopped streaming. This maps\n *        up to the end of a broadcast, and not a 'pause' in music.\n *    state-changed - indicates the state of the player changed\n * \n * demo: https://jsbin.com/biwogiyewu/edit?html,js,output\n */\n\n\nvar Listener = /*#__PURE__*/function () {\n  function Listener(uuid) {\n    _classCallCheck(this, Listener);\n\n    Object.assign(this, Events);\n    this._uuid = uuid;\n    this._state = 'idle'; //this._activePlay = null;\n  }\n\n  _createClass(Listener, [{\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n        delete this._timeout;\n      }\n\n      getClientId().then(function (clientId) {\n        _this.onTimeout(clientId);\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n        delete this._timeout;\n      }\n\n      var previousState = this._state;\n      this._state = 'idle';\n      delete this._activePlay;\n\n      if (previousState !== 'idle') {\n        try {\n          this.trigger('state-changed', this._state, previousState);\n        } catch (e) {\n          /* ignore */\n        }\n      }\n    }\n  }, {\n    key: \"onTimeout\",\n    value: function onTimeout(clientId) {\n      var _this2 = this;\n\n      fetch(getBaseUrl() + \"/api/v2/simulcast/\".concat(this._uuid, \"/listen\"), {\n        method: 'POST',\n        body: JSON.stringify({\n          client_id: clientId\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var delay = 5000;\n\n        if (response.success) {\n          var becameIdle = response.state === 'idle' && _this2._state !== 'idle';\n          var previousPlay = _this2._activePlay;\n          var previousState = _this2._state;\n          var state = _this2._state = response.state;\n\n          if (state === 'idle') {\n            delete _this2._activePlay;\n          } else {\n            _this2._activePlay = response.play;\n          }\n\n          if (previousState !== state) {\n            try {\n              _this2.trigger('state-changed', state, previousState);\n            } catch (e) {\n              /* ignore */\n            }\n          }\n\n          if (state === 'idle') {\n            if (becameIdle) {\n              try {\n                _this2.trigger('music-stopped');\n              } catch (e) {\n                /* ignore */\n              }\n            }\n          } else {\n            if (!previousPlay || previousPlay.id !== _this2._activePlay.id) {\n              try {\n                _this2.trigger('play-started', _this2._activePlay);\n              } catch (e) {\n                /* ignore */\n              }\n            }\n\n            if (response.seconds_since_start > 20 && response.play.duration_in_seconds - response.seconds_since_start > 20) {\n              delay = 15000;\n            }\n          }\n        } else {\n          if (response.error && response.error.code === 19) {\n            _this2._state = 'music-unavailable';\n\n            _this2.trigger('music-unavailable'); // don't schedule another update\n\n\n            return;\n          }\n        }\n\n        _this2._timeout = setTimeout(function () {\n          _this2.onTimeout(clientId);\n        }, delay);\n      }).catch(function (response) {\n        if (response.status === 403) {\n          try {\n            var fullResponse = JSON.parse(response.responseText);\n\n            if (fullResponse.error && fullResponse.error.code === 19) {\n              try {\n                _this2._state = 'music-unavailable';\n\n                _this2.trigger('music-unavailable');\n              } catch (e) {\n                /* ignore */\n              }\n\n              return;\n            }\n\n            console.log('unexpected error:', fullResponse);\n          } catch (e) {\n            // some other response - fall through and try again\n            console.log('bad response', e.message);\n          }\n        } else {\n          console.log('odd response', response);\n        }\n\n        _this2._timeout = setTimeout(function () {\n          _this2.onTimeout(clientId);\n        }, 15000);\n      });\n    }\n  }, {\n    key: \"getCurrentState\",\n    value: function getCurrentState() {\n      return this._state;\n    }\n  }, {\n    key: \"getCurrentPlay\",\n    value: function getCurrentPlay() {\n      return this._activePlay;\n    }\n  }]);\n\n  return Listener;\n}();\n\nvar FEED_STATE_KEY = 'feedfm:active';\nvar FEED_ELAPSED_TIME_KEY = 'feedfm:elapsed_time';\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction store(key, value) {\n  if (supports_html5_storage()) {\n    localStorage.setItem(key, value);\n  }\n}\n\nfunction remove(key) {\n  if (supports_html5_storage()) {\n    localStorage.removeItem(key);\n  }\n}\n\nfunction get(key) {\n  if (supports_html5_storage()) {\n    return localStorage.getItem(key);\n  } else {\n    return null;\n  }\n}\n\nfunction persistState(state) {\n  var timestamp = Date.now();\n  var asString = JSON.stringify({\n    state: state,\n    timestamp: timestamp\n  });\n  var stringTimestamp = Date.now(); // update timestamp and store in local storage\n\n  store(FEED_STATE_KEY, asString);\n  var stateTimestamp = Date.now();\n  store(FEED_ELAPSED_TIME_KEY, '0');\n  log('persisted state', {\n    timestamp: timestamp,\n    encodingTime: stringTimestamp - timestamp,\n    storageTime: stateTimestamp - stringTimestamp,\n    state: state\n  });\n}\n\nfunction persistElapsed(milliseconds) {\n  // save elapsed seconds in current song\n  store(FEED_ELAPSED_TIME_KEY, milliseconds.toString());\n}\n\nfunction retrieveStateAndElapsed(maxAge) {\n  // pull things out of state, if they're less than maxAge milliseconds old, or null\n  var encoded = get(FEED_STATE_KEY);\n\n  if (encoded) {\n    var persisted = JSON.parse(encoded);\n\n    if (persisted.timestamp + maxAge > Date.now()) {\n      var elapsed = parseFloat(get(FEED_ELAPSED_TIME_KEY), 10);\n      return [persisted.state, elapsed];\n    }\n  }\n\n  return [];\n}\n\nfunction clearPersistance() {\n  // nuke any stored state\n  remove(FEED_STATE_KEY);\n  remove(FEED_ELAPSED_TIME_KEY);\n}\n\nvar version = \"1.103.1\";\n/*\n *  Feed Media Session API\n *\n *  This manages all communication with the server and is the single point\n *  of truth for a client to manage what is actively being played. It\n *  should be created with:\n *\n *  var session = new Feed.Session(token, secret[, options]);\n *\n *  Then you attach event listeners to the session:\n *\n *  session.on('play-active', someHandler);\n *\n *  Then you can optionally set a station:\n *\n *  session.setStationId(stationId);\n *\n *  If any of the above calls are made while we're actively tuning (we've\n *  got an active song or a pending song), then any currently active song\n *  will be marked as 'completed' and a new song will be requested from\n *  the server.\n *\n *  Then you tell the session to start maintaining a queue of \n *  music to play:\n *\n *  session.tune();\n *\n *  The session will now emit the following events:\n *\n *  music-unavailable: if the current user may not listen to music\n *    This check is made every time we try to retrieve a song, and also\n *    on the 'tune()' call.  Once \n *    you get this event, you should assume nothing further will work.\n *  invalid-credentials: the token and secret passed to this function\n *    are not valid.\n *  placement: after we tune in to a placement or station,\n *    this passes on information about the placement we\n *    tuned in to.\n *  stations: after tuning to a specific placement, the server returns a\n *    list of available stations. This is that list.\n *  station-changed: emitted after a 'setStation' call, and passed the\n *    ID of the station and the station object\n *  play-active: when the session has a play ready for playback\n *  play-started: when the active play has started playback (as\n *    a result of a call to reportPlayStarted)\n *  play-completed: when the session has successfully told the server\n *    that the current play has completed, been skipped (after a \n *    call to reportPlayCompleted), or been invalidated\n *  skip-denied: when the session has been told by the server that the\n *    skip cannot be performed (after a call to requestSkip)\n *  plays-exhausted: when the server can find no more music in the\n *    current station that satisfies DMCA constraints (this will\n *    be either the first event after a 'tune' call, or after a\n *    play-completed event). The client must make another call to\n *    tune() to begin pulling in more music.\n *  prepare-sound: this holds a URL of a sound that might be played\n *    next. Clients can start loading the sound in preparation.\n *  forbidden: if an unsatisfiable request is made (such as to advance\n *   in a non-first play station)\n *\n *  Clients that use the session object should tell the session about\n *  the status of the current play as it progresses:\n *\n *  session.reportPlayStarted(): tell the server we have begun playback of the\n *    current song to the end user.\n *  session.reportPlayElapsed(seconds): tell the server how many elapsed seconds\n *    of the song have been played since it started.\n *  session.reportPlayCompleted(): tell the server that we have completed \n *    playing the current song. This will cause the session object\n *    to emit a 'play-completed' event followed by a 'play-active' when\n *    the next song is ready for playback\n *\n *  session.requestSkip(): ask the server if we can skip playback of the current\n *    song. If the skip is denied, a 'skip-denied' event will be triggered,\n *    otherwise a 'play-completed' will be triggered.\n *  session.requestInvalidate(): tell the server that we're unable to play the\n *    current song for some reason, and the server should stop playback\n *    of the song (if started) and give us a new song. The session will\n *    trigger a 'play-completed' event after this call.\n *\n *  Data held by the session can be retrieved with:\n *\n *  session.getActivePlay(): returns the currently active play, if any, or null\n *  session.isTuned(): true if the session has active plays available or is awaiting\n *    plays from the server\n *  session.hasActivePlayStarted(): returns true if the active play is playing now\n *  session.canSkip(): returns true if there is a song being played now and \n *    we believe we can skip it.\n *\n *  Other misc calls:\n *  \n *  session.likePlay(), session.unlikePlay(), session.dislikePlay(): like handling\n *  session.setFormats(formats): comma separated list of audio formats to \n *                               request, i.e.: 'mp3', 'aac', 'aac,mp3'. Defaults to\n *                               'mp3,aac'\n *\n *  The optional 'options' argument passed to the constructor can have the following\n *  attributes:\n *    baseUrl: defines the base host that responds to API calls - defaults\n *       to '//feed.fm'. Really only used with local testing.\n *    simulcast: id of simulcast to broad\n */\n\nvar Session = function Session(token, secret, options) {\n  Object.assign(this, Events); // No token/secret implies we're restoring from a saved state. It would\n  // be best if this class could suspend/restore itself, but things are \n  // so poorly encapsulated now that it isn't worth putting the suspend/restore\n  // in multiple places.\n\n  if (!token || !secret) {\n    return;\n  }\n\n  options = options || {};\n\n  if (options.baseUrl) {\n    setBaseUrl(options.baseUrl);\n  }\n\n  this.config = {\n    remoteLogging: !!options.remoteLogging,\n    // token\n    // secret\n    // placementId\n    // placement\n    // stationId\n    // stations\n    // station\n    formats: 'mp3,aac',\n    maxBitrate: 128,\n    timeOffset: 0,\n    // Represent the active 'play' or null if there is no active play. This should\n    // only be null before the first tune() call or after the server tells us there\n    // is no more music available.\n    current: null,\n\n    /* {\n         play:  play object we're currently playing\n         started: defaults to false\n         canSkip: defaults to false\n         retryCount: number of times we've tried to tell server we started this\n        }, */\n    // Details of any 'POST /play' request we're awaiting a response for. If this\n    // is null, then we're not waiting for the server to give us a play\n    pendingRequest: null,\n\n    /* {\n         url:        url being posted to\n         ajax:       form data we sent to request a play, copied\n                     here so we can retry it if it fails\n         retryCount: number of times we've retried \n       }, */\n    // Once a play has been created and then started, the server will let us\n    // create a new play. This holds a reference to the next play that will\n    // be active on completion of the current play\n    pendingPlay: null // play object we'll start upon completion of current\n    //   sound \n\n  };\n\n  if (token && secret) {\n    this.setCredentials(token, secret);\n  }\n\n  if (options.remoteLogging) {\n    log('remote logging enabled', this.config);\n\n    this._submitLogHistory();\n  }\n};\n\nSession.prototype.setCredentials = function (token, secret) {\n  this.config.token = token;\n  this.config.secret = secret;\n};\n\nSession.prototype.setStationId = function (stationId, advance, secondsOfCrossfade) {\n  // if we haven't received stations, we can't select one\n  if (!this.config.stations) {\n    return;\n  }\n\n  var stringStationId = '' + stationId;\n  var changed = '' + this.config.stationId !== stringStationId;\n\n  if (changed || advance) {\n    var station = this.config.stations.find(function (station) {\n      return '' + station.id === stringStationId;\n    });\n\n    if (station) {\n      this.config.stationId = stationId;\n      this.config.station = station;\n\n      if (changed) {\n        this.trigger('station-changed', stationId, station);\n      } // abort any pending requests or plays\n\n\n      this.config.pendingRequest = null;\n      this.config.pendingPlay = null; // stop playback of any current song, and set\n      // the status to waiting\n\n      this._assignCurrentPlay(null, true); // request the next play\n\n\n      this._requestNextPlay(0, advance, secondsOfCrossfade);\n    }\n  }\n};\n\nSession.prototype.setFormats = function (formats) {\n  this.config.formats = formats; // re-retrieve the next song, since we changed formats\n\n  if (this.isTuned()) {\n    this.tune();\n  }\n};\n\nSession.prototype.setMaxBitrate = function (maxBitrate) {\n  this.config.maxBitrate = maxBitrate;\n}; // tune\n\n\nSession.prototype.tune = function () {\n  if (!this.config.token) {\n    throw new Error('no token set with setCredentials()');\n  }\n\n  if (!this.config.secret) {\n    throw new Error('no secret set with setCredentials()');\n  } // abort any pending requests or plays\n\n\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null; // stop playback of any current song, and set\n  // the status to waiting\n\n  this._assignCurrentPlay(null, true); // pull information in about the placement, followed by\n  // a request for the next play\n\n\n  this._getDefaultPlacementInformation();\n}; // _getDefaultPlacementInformation\n\n\nSession.prototype._getDefaultPlacementInformation = function (delay) {\n  var self = this;\n\n  if (this.config.placementId && this.config.placement && this.config.placement.id === this.config.placementId) {\n    // already have placement info, so kick off request for next play\n    this._requestNextPlay();\n\n    return;\n  } // request placement info from server\n\n\n  log('requesting default placement information from server');\n\n  self._signedAjax(getBaseUrl() + '/api/v2/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      client_id: getStoredClientId()\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.session && response.session.client_id) {\n      setStoredClientId(response.session.client_id);\n    } // client id creation now tied to session, so this next call is superfluous,\n    // and only exists for testing\n\n\n    return self._getClientId().then(function () {\n      return response;\n    });\n  }).then(self._receiveDefaultPlacementInformation.bind(self)).catch(self._failedDefaultPlacementInformation.bind(self, delay));\n};\n\nSession.prototype._receiveDefaultPlacementInformation = function (placementInformation) {\n  if (placementInformation && placementInformation.success && placementInformation.placement) {\n    this.config.placement = placementInformation.placement;\n    this.config.stations = placementInformation.stations;\n    this.config.placementId = placementInformation.placement.id;\n    this.trigger('placement', this.config.placement);\n\n    if (this.config.stations.length > 0) {\n      this.config.stationId = this.config.stations[0].id;\n      this.config.station = this.config.stations[0];\n      this.trigger('station-changed', this.config.stationId, this.config.station);\n    }\n\n    this.trigger('stations', this.config.stations); // kick off request for next play\n\n    this._requestNextPlay();\n  } else {\n    // music is not available to this user for some reason.\n    this.trigger('music-unavailable');\n  }\n};\n\nSession.prototype._failedDefaultPlacementInformation = function (delay, response) {\n  var _this = this;\n\n  if (response.status === 401) {\n    try {\n      var fullResponse = JSON.parse(response.responseText);\n\n      if (fullResponse.error && fullResponse.error.code === 5) {\n        this.trigger('invalid-credentials');\n        return;\n      }\n    } catch (e) {// ignore\n    }\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('error from placement request', response);\n  } // otherwise, try again in a bit\n\n\n  delay = delay ? delay * 2 : 500;\n  setTimeout(function () {\n    _this._getDefaultPlacementInformation(delay);\n  }, delay);\n};\n\nSession.prototype.getActivePlacement = function () {\n  if (this.config.placement) {\n    return this.config.placement;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.getActivePlay = function () {\n  if (this.config.current) {\n    return this.config.current.play;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.isTuned = function () {\n  return this.config.current || this.config.pendingRequest;\n};\n\nSession.prototype.hasActivePlayStarted = function () {\n  return this.config.current && this.config.current.started;\n};\n\nSession.prototype.reportPlayStarted = function () {\n  if (!this.config.current) {\n    throw new Error('attempt to report a play started, but there is no active play');\n  }\n\n  this._startPlay(this.config.current.play);\n};\n\nSession.prototype.reportPlayElapsed = function (seconds) {\n  if (!this.config.current) {\n    throw new Error('attempt to report elapsed play time, but the play hasn\\'t started');\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/elapse', {\n    method: 'POST',\n    body: JSON.stringify({\n      seconds: seconds\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(function (e) {\n    return log('server returned error on elapse call. ignoring', e);\n  });\n};\n\nSession.prototype.reportPlayCompleted = function () {\n  var self = this;\n\n  if (this.config.current && this.config.current.started) {\n    this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/complete', {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      log('play completed returned error - ignoring', err);\n    }).finally(self._receivePlayCompleted.bind(self));\n  } else {\n    log('finish on non-active or playing song');\n    throw new Error('no active or playing song');\n  }\n};\n\nSession.prototype._receivePlayCompleted = function () {\n  if (!this.config.pendingRequest) {\n    log('song finished, and no outstanding request, so playing pendingPlay'); // if we're not waiting for an incoming request, then we must\n    // have the next play queued up, so play it:\n\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n  } else {\n    log('song finished, but we\\'re still waiting for next one to return'); // we're waiting for a request to come in, so kill the current\n    // song and announce that we're waiting\n\n    this._assignCurrentPlay(null, true);\n  }\n};\n\nSession.prototype.reportPlayStopped = function (seconds) {\n  if (this.config.current && this.config.current.started) {\n    this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/elapse', {\n      method: 'POST',\n      body: JSON.stringify({\n        seconds: seconds\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (e) {\n      return log('server returned error on elapse call. ignoring', e);\n    });\n  } // dump any future plays queued up\n\n\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null; // we're not playing anything now, baby!\n\n  this._assignCurrentPlay(null, true);\n};\n\nSession.prototype.requestSkip = function () {\n  var _this2 = this;\n\n  if (!this.hasActivePlayStarted()) {\n    throw new Error('No song playing or started');\n  }\n\n  if (!this.config.current.canSkip) {\n    setTimeout(function () {\n      _this2.trigger('skip-denied');\n    }, 1);\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/skip', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).then(this._receiveSkip.bind(this, this.config.current.play)).catch(this._failSkip.bind(this, this.config.current.play));\n};\n\nSession.prototype.requestInvalidate = function (url) {\n  if (!url) {\n    if (!this.config.current) {\n      throw new Error('No active song to invalidate!');\n    }\n\n    this._sendInvalidate(this.config.current.play);\n  } else if (this.config.current && this.config.current.play.audio_file.url === url) {\n    this._sendInvalidate(this.config.current.play);\n  } else if (this.config.pendingPlay && this.config.pendingPlay.audio_file.url === url) {\n    this._sendInvalidate(this.config.pendingPlay);\n  }\n};\n\nSession.prototype._sendInvalidate = function (play, delay) {\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + play.id + '/invalidate', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).then(this._receiveInvalidate.bind(this, play)).catch(this._failInvalidate.bind(this, delay, play));\n};\n\nSession.prototype._failInvalidate = function (delay, play, response) {\n  var self = this;\n  delay = delay ? delay * 2 : 200;\n\n  if (delay < 3000) {\n    setTimeout(function () {\n      self._sendInvalidate(play);\n    }, delay);\n  } else {\n    log('gave up trying to invalidate play', response);\n  }\n};\n\nSession.prototype._receiveInvalidate = function (play, response) {\n  var self = this;\n  log('invalidate response');\n\n  this._submitLogHistory();\n\n  setTimeout(function () {\n    log('5 second follow up after invalidate');\n\n    self._submitLogHistory();\n  }, 5000);\n\n  if (!response.success) {\n    log('failed invalidate! - technically this is impossible');\n    return;\n  }\n\n  if (!this.config.current || this.config.current.play !== play) {\n    if (play === this.config.pendingPlay) {\n      log('invalidated pending play, queueing up new pending play');\n      this.config.pendingPlay = null;\n\n      this._requestNextPlay();\n    }\n\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('invalidating to song already queued up'); // skip to play already queued up\n\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n  } else {\n    log('invalidating current song');\n\n    this._assignCurrentPlay(null, true);\n\n    if (!this.config.pendingRequest) {\n      log('queueing up new song');\n\n      this._requestNextPlay();\n    }\n  }\n};\n\nSession.prototype._failSkip = function (play) {\n  if (!this.config.current || this.config.current.play !== play) {\n    // not playing this song any more - just ignore it\n    return;\n  } // technically the skip wasn't denied - we just couldn't confirm wether\n  // it was ok, but this is the best we can return at the moment\n\n\n  this.trigger('skip-denied');\n};\n\nSession.prototype._receiveSkip = function (play, response) {\n  if (!this.config.current || this.config.current.play !== play) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed skip!');\n    this.trigger('skip-denied');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('skipping to song already queued up'); // skip to play already queued up\n\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n  } else if (this.config.pendingRequest) {\n    log('skipping to what is queued up'); // we're waiting for a request - so just wait for that to show up\n\n    this._assignCurrentPlay(null, true);\n  } else {\n    log('skipping to what is queued up'); // nothing queued up and nothing being requested - we're outta music!\n\n    this._assignCurrentPlay(null);\n  }\n};\n\nSession.prototype._startPlay = function (play) {\n  if (this.config.current.retryCount > 2) {\n    // fuck it - let the user hear the song\n    this._receiveStartPlay(play, {\n      success: true,\n      can_skip: true\n    });\n  } else {\n    log('telling server we\\'re starting the play', play); // tell the server that we're going to start this song\n\n    this._signedAjax(getBaseUrl() + '/api/v2/play/' + play.id + '/start', {\n      method: 'POST' // TODO: add timeout!\n\n    }).then(function (response) {\n      return response.json();\n    }).then(this._receiveStartPlay.bind(this, play)).catch(this._failStartPlay.bind(this, play));\n  }\n};\n\nSession.prototype._receiveStartPlay = function (play, response) {\n  if (response.success) {\n    if (this.config.current && this.config.current.play === play) {\n      this.config.current.canSkip = response.can_skip;\n      this.config.current.started = true; // since we're ok to start this song, we can start looking for the\n      // next song\n\n      this._requestNextPlay();\n\n      this.trigger('play-started', play);\n    } else {\n      log('received start play, but not waiting any more');\n    }\n  } else {\n    log('received failed start success');\n  }\n};\n\nSession.prototype._failStartPlay = function (play, response) {\n  var _this3 = this;\n\n  var self = this;\n  log('start failed', response);\n\n  this._submitLogHistory();\n\n  setTimeout(function () {\n    log('5 second follow up after start failure');\n\n    self._submitLogHistory();\n  }, 5000); // only process if we're still actually waiting for this\n\n  if (this.config.current && this.config.current.play === play) {\n    if (response && response.status === 403) {\n      try {\n        var fullResponse = JSON.parse(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 20) {\n          // we seem to have missed the response to the original start, so\n          // let's assume the start was good and the song is skippable\n          return this._receiveStartPlay(play, {\n            success: true,\n            can_skip: true\n          });\n        }\n      } catch (e) {\n        // ignore\n        log('unable to parse start play response', e.message);\n      }\n    }\n\n    log('request failed - trying again in 1 second', response);\n    this.config.current.retryCount++; // wait a second and try again\n\n    setTimeout(function () {\n      _this3._startPlay(play);\n    });\n  } else {\n    log('startPlay failed, but we don\\'t care any more');\n  }\n}; // start playing the given song\n\n\nSession.prototype._assignCurrentPlay = function (play, waitingIfEmpty) {\n  // remove any existing play\n  if (this.config.current) {\n    var currentPlay = this.config.current.play;\n    this.config.current = null;\n    this.trigger('play-completed', currentPlay);\n  }\n\n  if (play === null) {\n    // nothing to play right now\n    if (waitingIfEmpty) {\n      //this.config.status = 'waiting';\n      log('nothing to play... waiting');\n    } else {\n      //this.config.status = 'idle';\n      log('nothing to play from the current station');\n      this.trigger('plays-exhausted');\n    }\n  } else {\n    // we're starting this song, so note that\n    this.config.current = {\n      play: play,\n      canSkip: false,\n      started: false,\n      retryCount: 0\n    }; //this.config.status = 'active';\n\n    log('activated new song');\n    this.trigger('play-active', play);\n  }\n};\n\nSession.prototype._requestNextPlay = function (delay, advance, secondsOfCrossfade) {\n  var self = this;\n\n  self._getClientId().then(function (clientId) {\n    if (self.config.pendingRequest) {\n      if (!delay) {\n        log('already waiting for a request to finish');\n        return;\n      } else if (delay > 60000) {\n        log('giving up on retrieving next play'); // we already retried this - let's give up\n\n        self.config.pendingRequest = null;\n\n        if (self.config.current === null) {\n          // we're not playing anything, so we're waiting. \n          // set assign play to null again to trigger empty/idle\n          self._assignCurrentPlay(null);\n        }\n\n        return;\n      } else {\n        log('retrying pending request'); // retry the request\n\n        self.config.pendingRequest.retryCount++;\n        var _ajax = self.config.pendingRequest.ajax;\n\n        self._signedAjax(self.config.pendingRequest.url, _ajax).then(function (response) {\n          return response.json();\n        }).then(self._receiveNextPlay.bind(self, _ajax)).catch(self._failedNextPlay.bind(self, delay, _ajax));\n\n        return;\n      }\n    } else {\n      // create a new request\n      var data = {\n        formats: self.config.formats,\n        client_id: clientId,\n        max_bitrate: self.config.maxBitrate,\n        secure: true\n      };\n\n      if (self.config.placementId) {\n        data.placement_id = self.config.placementId;\n      }\n\n      if (self.config.stationId) {\n        data.station_id = self.config.stationId;\n      }\n\n      if (advance) {\n        data.at = advance;\n\n        if (secondsOfCrossfade) {\n          data.crossfade = secondsOfCrossfade;\n        }\n      }\n\n      var ajax = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      self.config.pendingRequest = {\n        url: getBaseUrl() + '/api/v2/play',\n        ajax: ajax,\n        retryCount: 0\n      }; // request new play from server\n\n      log('requesting new play from server', ajax);\n\n      self._signedAjax(getBaseUrl() + '/api/v2/play', ajax).then(function (response) {\n        return response.json();\n      }).then(self._receiveNextPlay.bind(self, ajax)).catch(self._failedNextPlay.bind(self, delay, ajax));\n    }\n  });\n}; // we received a song to play from the server\n\n\nSession.prototype._receiveNextPlay = function (ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && this.config.pendingRequest.ajax === ajax) {\n    // this isn't pending any more\n    this.config.pendingRequest = null;\n\n    if (response.success) {\n      this.trigger('prepare-sound', response.play.audio_file.url, response.play.start_at, response.play.id);\n\n      if (this.config.current) {\n        log('received play, but we\\'re already playing, so queueing up', response.play); // play this when the current song is complete\n\n        this.config.pendingPlay = response.play;\n      } else {\n        log('received play and no current song, making active now', response.play); // start playing this right now, since nothing else is playing\n\n        this._assignCurrentPlay(response.play);\n      }\n    } else if (response.error && response.error.code === 9) {\n      if (this.config.current) {\n        log('ran out of music to play, but we\\'re already playing');\n        this.config.pendingPlay = null;\n      } else {\n        log('ran out of music, and nothing playing now');\n        this.trigger('plays-exhausted');\n      }\n    } else if (response.error && response.error.code === 6) {\n      this.trigger('forbidden', response.error.message);\n    } else {\n      log('unsuccessful response', response);\n    }\n  } else {\n    log('nextPlay succeeded, but we don\\'t care');\n  }\n}; // server returned an error when we requested the next song\n\n\nSession.prototype._failedNextPlay = function (delay, ajax, response) {\n  var _this4 = this;\n\n  log('next play failed', response);\n\n  this._submitLogHistory();\n\n  setTimeout(function () {\n    log('5 second follow up after next play failure');\n\n    _this4._submitLogHistory();\n  }, 5000); // only process if we're still actually waiting for this\n\n  if (this.config.pendingRequest && this.config.pendingRequest.ajax === ajax) {\n    if (response && response.status === 403) {\n      try {\n        var fullResponse = JSON.parse(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 19) {\n          // user isn't in the US any more, so let the call fail\n          this.trigger('music-unavailable', fullResponse.error.message); // legacy:\n\n          this.trigger('not-in-us', fullResponse.error.message);\n          return;\n        }\n      } catch (e) {\n        // some other response - fall through and try again\n        log('problem parsing 403 response', e.message);\n      }\n    }\n\n    delay = Math.min(delay ? delay * 2 : 500, 2000);\n    log('request failed - trying again after ' + delay + 'ms');\n    setTimeout(function () {\n      _this4._requestNextPlay(delay);\n    }, delay);\n  } else {\n    log('nextPlay failed, but we don\\'t care');\n  }\n};\n\nSession.prototype.canSkipInStation = function () {\n  return !(this.config.station && this.config.station.can_skip === false);\n};\n/**\n * @returns {boolean} true if the user can skip the current song\n */\n\n\nSession.prototype.maybeCanSkip = function () {\n  return this.canSkip();\n};\n/**\n * @returns {boolean} true if the user can skip the current song\n */\n\n\nSession.prototype.canSkip = function () {\n  // you can probably skip unless we've explicitly disallowed it at the station or current song level\n  var can = this.canSkipInStation() && this.config.current && this.config.current.started && this.config.current.canSkip;\n  return !!can;\n};\n/**\n * @returns {boolean} true if the user can like the current song\n */\n\n\nSession.prototype.canLike = function () {\n  var response = !(this.config.station && this.config.station.can_like === false);\n  return response;\n};\n\nSession.prototype.likePlay = function (playId) {\n  if (!this.canLike()) {\n    // technically, this play could be from a different station, but we're not tracking\n    // that right now... so let's just assume it is in the current station.\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + playId + '/like', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return log('server returned error on like call. ignoring', e);\n  });\n\n  if (this.config.current && this.config.current.play.id === playId) {\n    this.config.current.play.liked = true;\n  }\n};\n\nSession.prototype.unlikePlay = function (playId) {\n  if (!this.canLike()) {\n    // technically, this play could be from a different station, but we're not tracking\n    // that right now... so let's just assume it is in the current station.\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + playId + '/like', {\n    method: 'DELETE'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return log('server returned error on unlike call. ignoring', e);\n  });\n\n  if (this.config.current && this.config.current.play.id === playId) {\n    delete this.config.current.play['liked'];\n  }\n};\n\nSession.prototype.dislikePlay = function (playId) {\n  if (!this.canLike()) {\n    // technically, this play could be from a different station, but we're not tracking\n    // that right now... so let's just assume it is in the current station.\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + playId + '/dislike', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return log('server returned error on invalidate call. ignoring', e);\n  });\n\n  if (this.config.current && this.config.current.play.id === playId) {\n    this.config.current.play.liked = false;\n  }\n};\n\nvar cookieName$1 = 'cid';\n\nSession.prototype._getStoredCid = function () {\n  return tinyCookie.getCookie(cookieName$1);\n};\n\nSession.prototype._setStoredCid = function (value) {\n  tinyCookie.setCookie(cookieName$1, value, {\n    expires: 3650,\n    path: '/'\n  });\n};\n\nSession.prototype._deleteStoredCid = function () {\n  tinyCookie.removeCookie(cookieName$1);\n};\n\nSession.prototype._sign = function (request) {\n  var authorization;\n\n  if (!request) {\n    request = {};\n  } // use Basic auth for HTTPS\n\n\n  authorization = 'Basic ' + btoa(this.config.token + ':' + this.config.secret);\n\n  if (request.headers) {\n    request.headers['Authorization'] = authorization;\n  } else {\n    request.headers = {\n      Authorization: authorization\n    };\n  }\n\n  request.headers['X-Feed-SDK'] = version + ' js';\n\n  if (this.extraHeaders) {\n    for (var header in this.extraHeaders) {\n      // eslint-disable-next-line\n      if (this.extraHeaders.hasOwnProperty(header)) {\n        request.headers[header] = this.extraHeaders[header];\n      }\n    }\n  }\n\n  return request;\n};\n\nSession.prototype._signedAjax = function (url, request) {\n  var self = this;\n  return self._ajax(url, self._sign(request)).then(function (response) {\n    if (!response.ok) {\n      throw new Error('server returned error ' + response.status + ': ' + response.statusText);\n    }\n\n    return response;\n  });\n};\n\nSession.prototype._ajax = function (url, request) {\n  return fetch(url, request);\n};\n\nSession.prototype._submitLogHistory = function () {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var session = this;\n  var history = log.history;\n  log.history = [];\n\n  if (!this.config.remoteLogging) {\n    return;\n  }\n\n  return this._signedAjax(getBaseUrl() + '/api/v2/session/event', {\n    method: 'POST',\n    body: JSON.stringify({\n      event: 'playerHistory',\n      parameters: history\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function () {\n    if (count < 2) {\n      setTimeout(function () {\n        log.history = history.concat(['failed log report attempt, try #' + count], log.history);\n\n        session._submitLogHistory(count + 1);\n      }, 5000);\n    }\n  });\n};\n\nSession.prototype._submitLogHistory = function () {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var session = this;\n  var history = log.history;\n  log.history = [];\n\n  if (!this.config.remoteLogging) {\n    return;\n  }\n\n  return this._signedAjax(getBaseUrl() + '/api/v2/session/event', {\n    method: 'POST',\n    body: JSON.stringify({\n      event: 'playerHistory',\n      parameters: history\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(function () {\n    if (count < 2) {\n      setTimeout(function () {\n        log.history = history.concat(['failed log report attempt, try #' + count], log.history);\n\n        session._submitLogHistory(count + 1);\n      }, 5000);\n    }\n  });\n};\n\nSession.prototype._submitEvent = function (name, parameters) {\n  var _this5 = this;\n\n  var count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var session = this;\n  return this._getClientId().then(function (clientId) {\n    return _this5._signedAjax(getBaseUrl() + '/api/v2/session/event', {\n      method: 'POST',\n      body: JSON.stringify({\n        event: name,\n        client_id: clientId,\n        parameters: JSON.stringify(parameters)\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }).catch(function () {\n    if (count < 2) {\n      setTimeout(function () {\n        log.history = history.concat(['failed event submission, try #' + count], log.history);\n\n        session._submitLogHistory(count + 1);\n      }, 5000);\n    }\n  });\n};\n\nSession.prototype._getClientId = function () {\n  return getClientId();\n};\n/**\n * Test to see if browser supports blob URLs\n * \n * adapted from https://github.com/ssorallen/blob-feature-check/blob/master/blob-feature-check.js\n **/\n\n\nvar blobSupport = false;\n\nfunction fixBinary(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nvar binary = fixBinary(atob('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAAAAAA6fptVAAAACklEQVR4nGP6DwABBQECz6AuzQAAAABJRU5ErkJggg=='));\nvar png = new Blob([binary], {\n  type: 'image/png'\n});\n\ntry {\n  if (URL && URL.createObjectURL) {\n    var objectUrl = URL.createObjectURL(png);\n\n    if (/^blob:/.exec(objectUrl) !== null) {\n      var img = new Image();\n\n      img.onload = function () {\n        blobSupport = true;\n        URL.revokeObjectURL(objectUrl);\n      };\n\n      img.onerror = function () {\n        blobSupport = false;\n      };\n\n      img.src = objectUrl;\n    }\n  }\n} catch (e) {\n  /* ignore - no blob support */\n}\n\nvar hasBlobSupport = function () {\n  return blobSupport;\n};\n\nvar DEFAULT_VOLUME = 1.0;\nvar IOS = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection\n|| navigator.userAgent.includes('Mac') && 'ontouchend' in document;\nvar brokenWebkit = IOS && /OS 13_[543210]/i.test(navigator.userAgent);\nvar SILENCE = IOS ? 'https://u9e9h7z5.map2.ssl.hwcdn.net/feedfm-audio/250-milliseconds-of-silence.mp3' : 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA'; //const SILENCE = 'https://dgase5ckewowv.cloudfront.net/feedfm-audio/1573592316-88123.m4a';\n\nvar Sound = function Sound(speaker, options, id, url) {\n  var obj = Object.assign(this, Events);\n  obj.id = id; //url = url.replace('u9e9h7z5.map2.ssl.hwcdn.net', 's3.amazonaws.com');\n\n  obj.url = url;\n  obj.speaker = speaker;\n  obj.loaded = false;\n\n  if (options) {\n    this.startPosition = +options.startPosition;\n    this.endPosition = +options.endPosition;\n    this.fadeInSeconds = +options.fadeInSeconds;\n\n    if (this.fadeInSeconds) {\n      this.fadeInStart = this.startPosition ? this.startPosition / 1000 : 0;\n      this.fadeInEnd = this.fadeInStart + this.fadeInSeconds;\n    } else {\n      this.fadeInStart = 0;\n      this.fadeInEnd = 0;\n    }\n\n    this.fadeOutSeconds = +options.fadeOutSeconds;\n\n    if (this.fadeOutSeconds) {\n      if (this.endPosition) {\n        this.fadeOutStart = this.endPosition / 1000 - this.fadeOutSeconds;\n        this.fadeOutEnd = this.endPosition / 1000;\n      } else {\n        this.fadeOutStart = 0;\n        this.fadeOutEnd = 0;\n      }\n    }\n\n    for (var _i = 0, _arr = ['play', 'pause', 'finish', 'elapse']; _i < _arr.length; _i++) {\n      var ev = _arr[_i];\n\n      if (ev in options) {\n        obj.on(ev, options[ev]);\n      }\n    }\n\n    this.gain = options.gain || 0;\n  } else {\n    this.gain = 0;\n  }\n\n  return obj;\n};\n\nfunction d(audio) {\n  return ' src = ' + audio.src + ', time = ' + audio.currentTime + ', paused = ' + audio.paused + ', duration = ' + audio.duration + ', readyState = ' + audio.readyState;\n}\n\nSound.prototype = {\n  play: function play() {\n    log('sound ' + this.id + ' play');\n    return this.speaker._playSound(this);\n  },\n  // pause playback of the current sound clip\n  pause: function pause() {\n    log('sound ' + this.id + ' pause');\n    return this.speaker._pauseSound(this);\n  },\n  // resume playback of the current sound clip\n  resume: function resume() {\n    log('sound ' + this.id + ' resume');\n    return this.speaker._playSound(this);\n  },\n  // elapsed number of milliseconds played\n  position: function position() {\n    //log(this.id + ' sound position');\n    return this.speaker._position(this);\n  },\n  // duration in milliseconds of the song\n  // (this may change until the song is full loaded)\n  duration: function duration() {\n    //log(this.id + ' sound duration');\n    return this.speaker._duration(this);\n  },\n  // stop playing the given sound clip, unload it, and disable events\n  // note that no further events will be sent from this sound\n  // (so no 'finish' event, in particular)\n  destroy: function destroy(fadeOut) {\n    log('sound ' + this.id + ' destroy' + (fadeOut ? ' (with fade)' : ''));\n\n    this.speaker._destroySound(this, fadeOut);\n  },\n  gainAdjustedVolume: function gainAdjustedVolume(volume) {\n    if (!this.gain) {\n      return volume / 100;\n    }\n\n    var adjusted = Math.max(Math.min(volume / 100 * (50 * Math.pow(10, this.gain / 20)), 100), 0) / 100; //log('gain adjustment is ' + this.gain + ', and final adjusted volume is ' + adjusted);\n\n    return adjusted;\n  }\n};\n/**\n * Create new speaker object. Add event handling to it.\n * \n * @returns Speaker\n */\n\nvar Speaker = function Speaker(options) {\n  if (options && options.maxRetries) {\n    this.maxRetries = options.maxRetries;\n  }\n\n  return Object.assign(this, Events);\n}; // exports with this version of Javacript isn't working, so...\n\n\nSpeaker.IOS = IOS;\nSpeaker.brokenWebkit = brokenWebkit;\n\nfunction createAudioContext() {\n  var AudioCtor = window.AudioContext || window.webkitAudioContext;\n  var desiredSampleRate = 44100;\n  var context = new AudioCtor(); // Check if hack is necessary. Only occurs in iOS6+ devices\n  // and only when you first boot the iPhone, or play a audio/video\n  // with a different sample rate\n\n  if (context.sampleRate !== desiredSampleRate) {\n    var buffer = context.createBuffer(1, 1, desiredSampleRate);\n    var dummy = context.createBufferSource();\n    dummy.buffer = buffer;\n    dummy.connect(context.destination);\n    dummy.start(0);\n    dummy.disconnect();\n    context.close(); // dispose old context\n\n    context = new AudioCtor();\n  } //  despite being in the moz docs, this doesn't work:\n  //  if (context.state !== 'running') {\n  //    throw new Error('Initial playback was not started in response to a user interaction!', context.state);\n  //  }\n\n\n  return context;\n}\n\nSpeaker.prototype = {\n  vol: 100,\n  // 0..100\n  outstandingSounds: {},\n  // Sound instances that have not yet been destroyed\n  audioContext: null,\n  // for mobile safari volume adjustment\n  active: null,\n  // active audio element, sound, and gain node\n  fading: null,\n  // fading audio element, sound, and gain node\n  preparing: null,\n  // preparing audio element, sound, and gain node\n  responses: null,\n  // array of response headers from preloading\n  maxRetries: 10,\n  // max number of times to retry preloading a song\n  // each of the above look like:\n  // {\n  //   audio: an HTML Audio element (created during initializeAudio() and reused)\n  //   sound: refers to Sound object whose URL has been assigned to 'audio.src' and\n  //          audio.play() has successfully returned.\n  //   gain: AudioGainNode for apple\n  //   volume: relative volume of this sound (0..1),\n  //   canplaythrough: boolean indicating if the 'canplaythrough' event has been\n  //         triggered for this URL\n  // }\n  //\n  // note that when audio.src is not SILENCE, and sound is null, we're waiting for\n  // a return from audio.play(). If the audio.src is changed, or audio.pause() is called\n  // before audio.play() returns, chrome will throw an error!\n  //\n  // When a sound is started, it is thrown into preparing.audio.src, then 'preparing' and\n  // 'active' are swapped, then active.audio.play() is called.\n  //\n  // When a sound has completed playback or been destroyed, the sound property is set\n  // to null, the audio is paused, and audio.src is set to SILENCE.\n  // If the browser supports URL.objectToURL(), we try to load audio with fetch and\n  // then pass the blob URL to the audio element.\n  preloaded: null,\n\n  /*\n  { \n    url,             // url we are trying to load manually (will not be null)\n    blobUrl: null  // blob url for URL above, or null if not loaded yet\n  },\n  */\n  // Fallback for preloading if the browser does not support URL.objectToURL()\n  prepareWhenReady: null,\n  // { url, start }\n  initializeAudio: function initializeAudio() {\n    // On mobile devices, we need to kick off playback of a sound in\n    // response to a user event. This does that.\n    if (this.active === null) {\n      log('initializing for mobile');\n\n      try {\n        throw new Error('initialize check');\n      } catch (e) {\n        log('initialize audio called from', e);\n      }\n\n      this.audioContext = createAudioContext();\n      this.active = this._createAudio(SILENCE);\n      this.fading = this._createAudio(SILENCE);\n      var pwr = this.prepareWhenReady;\n\n      if (pwr) {\n        this.preparing = this._createAudio(pwr.url);\n\n        this._prepare(pwr.url, pwr.startPosition);\n      } else {\n        this.preparing = this._createAudio(SILENCE);\n      }\n    } else {\n      log('mobile already initialized');\n    }\n  },\n  getSupportedFormats: function getSupportedFormats() {\n    if (document.createElement('audio').canPlayType('audio/aac')) {\n      return 'mp3,aac';\n    } else {\n      return 'mp3';\n    }\n  },\n  _createAudioGainNode: function _createAudioGainNode(audio) {\n    var source = this.audioContext.createMediaElementSource(audio);\n    var gainNode = this.audioContext.createGain();\n    gainNode.gain.value = DEFAULT_VOLUME;\n    source.connect(gainNode);\n    gainNode.connect(this.audioContext.destination);\n    return gainNode.gain;\n  },\n  _createAudio: function _createAudio(url) {\n    var DEFAULT_VOLUME = 1.0;\n    var audio = new Audio(url);\n    audio.crossOrigin = 'anonymous';\n    audio.loop = false;\n    audio.preload = 'auto';\n    audio.volume = DEFAULT_VOLUME;\n\n    this._addEventListeners(audio); // apple volume adjustment\n\n\n    var gain = null;\n\n    if (Speaker.IOS && !brokenWebkit) {\n      gain = this._createAudioGainNode(audio);\n    }\n\n    return {\n      audio: audio,\n      sound: null,\n      gain: gain,\n      volume: DEFAULT_VOLUME,\n      canplaythrough: false\n    };\n  },\n  _addEventListeners: function _addEventListeners(audio) {\n    audio.addEventListener('pause', this._onAudioPauseEvent.bind(this));\n    audio.addEventListener('ended', this._onAudioEndedEvent.bind(this));\n    audio.addEventListener('error', this._onAudioErroredEvent.bind(this));\n    audio.addEventListener('timeupdate', this._onAudioTimeUpdateEvent.bind(this));\n    audio.addEventListener('canplaythrough', this._onAudioCanPlay.bind(this));\n    audio.addEventListener('canplay', function (event) {\n      log('can play!', event.currentTarget.src);\n    }); //this._debugAudioObject(audio);\n  },\n  _onAudioCanPlay: function _onAudioCanPlay(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    log('can play through!', audio.src);\n\n    if (audio === this.preparing.audio) {\n      log('preparing file can play through', audio.src);\n      this.preparing.canplaythrough = true;\n      this.trigger('prepared', audio.src, true);\n    }\n  },\n  _onAudioPauseEvent: function _onAudioPauseEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio !== this.active.audio || audio.currentTime === audio.duration) {\n      return;\n    }\n\n    if (!this.active.sound) {\n      log('active audio pause, but no matching sound');\n      return;\n    }\n\n    this.active.sound.trigger('pause');\n  },\n  _onAudioEndedEvent: function _onAudioEndedEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fading.audio) {\n      revoke(audio);\n      audio.src = SILENCE;\n      this.fading.sound = null;\n      return;\n    }\n\n    if (audio !== this.active.audio) {\n      return;\n    }\n\n    if (!this.active.sound) {\n      log('active audio ended, but no matching sound', audio.src);\n      return;\n    }\n\n    log('active audio ended');\n    var sound = this.active.sound;\n    this.active.sound = null;\n    sound.trigger('finish');\n  },\n  _onAudioErroredEvent: function _onAudioErroredEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fading.audio) {\n      revoke(audio);\n      audio.src = SILENCE;\n      this.fading.sound = null;\n      return;\n    }\n\n    if (audio !== this.active.audio) {\n      return;\n    }\n\n    if (!this.active.sound) {\n      log('active audio errored, but no matching sound', audio.src);\n      return;\n    }\n\n    log('active audio errored', event.error);\n    var sound = this.active.sound;\n    this.active.sound = null;\n    sound.trigger('finish', event.error);\n  },\n  _onAudioTimeUpdateEvent: function _onAudioTimeUpdateEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fading.audio && this.fading.sound) {\n      if (this.fading.sound.endPosition && audio.currentTime >= this.fading.sound.endPosition / 1000) {\n        this.fading.sound = null;\n        revoke(this.fading.audio);\n        this.fading.audio.src = SILENCE;\n      } else {\n        this._setVolume(this.fading);\n      }\n\n      return;\n    }\n\n    if (audio !== this.active.audio) {\n      return;\n    }\n\n    if (!this.active.sound || this.active.sound.awaitingPlayResponse) {\n      // got an elapse event before the play() succeeded\n      return;\n    }\n\n    if (this.active.sound.endPosition && this.active.sound.endPosition / 1000 <= audio.currentTime) {\n      // song reached end of play\n      var sound = this.active.sound;\n      this.active.sound = null;\n      revoke(this.active.audio);\n      this.active.audio.src = SILENCE;\n      sound.trigger('finish');\n    } else if (this.active.sound.fadeOutEnd && audio.currentTime >= this.active.sound.fadeOutStart) {\n      // song hit start of fade out\n      this._setVolume(this.active); // active becomes fading, and fading becomes active\n\n\n      var fading = this.fading;\n      this.fading = this.active;\n      this.active = fading;\n      this.active.sound = null; // not used any more\n      // pretend the song finished\n\n      this.fading.sound.trigger('finish');\n    } else {\n      this._setVolume(this.active);\n\n      this.active.sound.trigger('elapse');\n    }\n\n    if (this.prepareWhenReady) {\n      // we've got something we want to load. check if we've loaded \n      // enough of the current song that we can start loading next song.\n      this.prepare(this.prepareWhenReady.url, this.prepareWhenReady.startPosition);\n    }\n  },\n  _setVolume: function _setVolume(audioGroup, sound) {\n    if (!sound) {\n      sound = audioGroup.sound;\n    }\n\n    var currentTime = audioGroup.audio.currentTime;\n    var currentVolume = audioGroup.volume;\n    var calculatedVolume = sound.gainAdjustedVolume(this.vol);\n\n    if (sound.fadeInStart !== sound.fadeInEnd && currentTime < sound.fadeInStart) {\n      calculatedVolume = 0;\n      log('pre-fade-in volume is 0');\n    } else if (sound.fadeInStart !== sound.fadeInEnd && currentTime >= sound.fadeInStart && currentTime <= sound.fadeInEnd) {\n      // ramp up from 0 - 100%\n      calculatedVolume = (currentTime - sound.fadeInStart) / (sound.fadeInEnd - sound.fadeInStart) * calculatedVolume;\n      log('ramping ▲ volume', {\n        currentTime: currentTime,\n        currentVolume: currentVolume,\n        calculatedVolume: calculatedVolume,\n        sound: sound\n      });\n    } else if (sound.fadeOutStart !== sound.fadeOutEnd && currentTime > sound.fadeOutEnd) {\n      calculatedVolume = 0;\n      log('post-fade-out volume is 0');\n    } else if (sound.fadeOutStart !== sound.fadeOutEnd && currentTime >= sound.fadeOutStart && currentTime <= sound.fadeOutEnd) {\n      // ramp down from 100% to 0\n      calculatedVolume = (1 - (currentTime - sound.fadeOutStart) / (sound.fadeOutEnd - sound.fadeOutStart)) * calculatedVolume;\n      log('ramping ▼ volume', {\n        currentTime: currentTime,\n        currentVolume: currentVolume,\n        calculatedVolume: calculatedVolume,\n        sound: sound\n      });\n    }\n\n    if (currentVolume !== calculatedVolume) {\n      if (Speaker.IOS) {\n        if (!brokenWebkit) {\n          audioGroup.gain.value = calculatedVolume;\n        }\n      } else {\n        audioGroup.audio.volume = calculatedVolume;\n      }\n\n      audioGroup.volume = calculatedVolume;\n    }\n  },\n  _debugAudioObject: function _debugAudioObject(object) {\n    var events = ['abort', 'load', 'loadend', 'loadstart', 'loadeddata', 'loadedmetadata', 'canplay', 'canplaythrough', 'seeked', 'seeking', 'stalled', 'timeupdate', 'volumechange', 'waiting', 'durationchange', 'progress', 'emptied', 'ended', 'play', 'pause', 'error'];\n    var speaker = this;\n\n    for (var i = 0; i < events.length; i++) {\n      object.addEventListener(events[i], function (event) {\n        var audio = event.currentTarget;\n        var name = audio === speaker.active.audio ? 'active' : audio === speaker.preparing.audio ? 'preparing' : 'fading';\n        log(name + ': ' + event.type);\n        log('    active: ' + d(speaker.active.audio));\n        log('    preparing: ' + d(speaker.preparing.audio));\n        log('    fading: ' + d(speaker.fading.audio));\n\n        if (audio.src === SILENCE) {\n          return;\n        }\n      });\n    }\n  },\n  // Create and return new sound object. This throws the song into\n  // the preparing audio instance.\n  create: function create(url, optionsAndCallbacks) {\n    var id = uniqueId('feed-play-');\n    var sound = new Sound(this, optionsAndCallbacks, id, url);\n    log('created play ' + id + ' (' + url + ')', optionsAndCallbacks);\n    this.outstandingSounds[sound.id] = sound; // start loading sound, if we can\n    //this.prepare(url, optionsAndCallbacks.startPosition);\n\n    return sound;\n  },\n\n  /**\n   * This function checks to see if we can prepare the given audio. \n   * If it believes we can, it calls _prepare to put the audio in the\n   * prepared audio element and actually prepare it. If it doesn't \n   * believe we can, it makes a note of what we want prepared.\n   * \n   * @param {string} url \n   * @param {number} startPosition?\n   * @returns true if the song is already loaded up and ready to play\n   */\n  prepare: function prepare(url) {\n    var startPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!this.active || !this.active.audio) {\n      if (hasBlobSupport()) {\n        log('pre-loading audio', {\n          url: url\n        });\n        return this._preload(url);\n      } else {\n        log('saving url to prepare when audio is initialized', {\n          url: url,\n          startPosition: startPosition\n        });\n        this.prepareWhenReady = {\n          url: url,\n          startPosition: startPosition\n        };\n        return false;\n      }\n    }\n\n    var ranges = this.active.audio.buffered;\n    var range = ranges.length > 0 && ranges.end(ranges.length - 1);\n\n    if (range >= this.active.audio.duration) {\n      log('active song has loaded enough, so preparing', url);\n\n      if (hasBlobSupport()) {\n        return this._preload(url);\n      } else {\n        return this._prepare(url, startPosition);\n      }\n    } else if (this.active.audio.src === SILENCE) {\n      log('preparing over silence');\n\n      if (hasBlobSupport()) {\n        return this._preload(url);\n      } else {\n        return this._prepare(url, startPosition);\n      }\n    } // still loading primary audio - so hold off for now\n\n\n    log('still loading primary, so waiting to do active prepare', {\n      activeUrl: this.active.audio.src,\n      range: range\n    });\n    this.prepareWhenReady = {\n      url: url,\n      startPosition: startPosition\n    };\n    return false;\n  },\n\n  /* eslint-disable no-console */\n  logState: function logState(label) {\n    // local testing:\n    console.group('speaker: ' + (label || ''));\n\n    if (!this.active) {\n      console.group('active');\n      console.log('uninitialized');\n      console.groupEnd();\n      console.group('preparing');\n      console.log('uninitialized');\n      console.groupEnd();\n      console.group('fading');\n      console.log('uninitialized');\n      console.groupEnd();\n    } else {\n      console.group('active');\n      console.log(\"audio.src: \".concat(this.active.audio.src));\n      console.log(\"audio.paused: \".concat(this.active.audio.paused));\n      console.log(\"sound: \".concat(this.active.sound ? this.active.sound.id : 'NULL'));\n      console.log(\"volume: \".concat(this.active.volume));\n      console.groupEnd();\n      console.group('preparing');\n      console.log(\"audio.src: \".concat(this.preparing.audio.src));\n      console.log(\"audio.paused: \".concat(this.preparing.audio.paused));\n      console.log(\"sound: \".concat(this.preparing.sound ? this.preparing.sound.id : 'NULL'));\n      console.log(\"volume: \".concat(this.preparing.volume));\n      console.groupEnd();\n      console.group('fading');\n      console.log(\"audio.src: \".concat(this.fading.audio.src));\n      console.log(\"audio.paused: \".concat(this.fading.audio.paused));\n      console.log(\"sound: \".concat(this.fading.sound ? this.fading.sound.id : 'NULL'));\n      console.log(\"volume: \".concat(this.fading.volume));\n      console.groupEnd();\n    }\n\n    console.group('outstanding sounds');\n\n    for (var id in this.outstandingSounds) {\n      var play = this.outstandingSounds[id];\n      console.log(play.id + ': ' + play.url);\n    }\n\n    console.groupEnd();\n    console.groupEnd();\n  },\n\n  /** \n   * This function tries to fetch the given URL and convert it\n   * into a blob url. If the URL is already loaded up, this\n   * returns true.\n   * \n   * @param {string} url url to load into memory\n   * @returns true if the url is already loaded up\n   **/\n  _preload: function _preload(url) {\n    log('preloading!');\n    this.prepareWhenReady = null;\n\n    if (this.preloaded) {\n      if (this.preloaded.url === url) {\n        // true when already loaded up\n        var preloaded = !!this.preloaded.blobUrl;\n        log('preloading', {\n          url: url,\n          preloaded: preloaded\n        });\n        return preloaded;\n      }\n\n      if (this.preloaded.blobUrl) {\n        log('revoking previously loaded url', {\n          url: this.preloaded.url\n        }); // unload previous blob\n\n        URL.revokeObjectURL(this.preloaded.blobUrl);\n        this.preloaded = null;\n      }\n    }\n\n    this.preloaded = {\n      url: url,\n      blobUrl: null,\n      responses: []\n    };\n\n    this._fetch(url, this.preloaded.responses);\n\n    return false;\n  },\n  _fetch: function _fetch(url, responses) {\n    var _this = this;\n\n    var attempt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    log(\"preload attempt #\".concat(attempt), {\n      url: url\n    });\n    var response = {\n      start: new Date().toString()\n    };\n    responses.push(response);\n\n    var retry = function retry() {\n      if (!_this.preloaded || _this.preloaded.url !== url) {\n        log('preload abandoning retry because we have moved on', {\n          url: url\n        });\n        return;\n      }\n\n      if (attempt > _this.maxRetries) {\n        log('preload failed to fetch', {\n          url: url,\n          responses: responses\n        });\n        _this.preloaded = null;\n\n        _this.trigger('prepared', url, false, responses);\n\n        return;\n      }\n\n      setTimeout(function () {\n        return _this._fetch(url, responses, attempt + 1);\n      }, Math.min(Math.pow(10, attempt), 10000));\n    };\n\n    log('preloading', {\n      url: url,\n      responses: responses\n    }); // stress test:\n    // const extra = (Math.random() < 0.7) ? '-extrajunkj' : '';\n\n    fetch(url\n    /* + extra */\n    ).then(function (res) {\n      log('preload got response');\n      response.end = new Date().toString();\n      response.status = res.status;\n      response.text = res.statusText;\n      response.headers = _toConsumableArray(res.headers.entries()); // if res.type == 'opaque', could cause problems\n\n      if (res.type === 'opaque') {\n        log('preload opaque response, so retrying');\n        response.name = 'OpaqueResponse';\n        response.message = 'Browser returned oaque response';\n        retry();\n        return;\n      }\n\n      if (!res.ok) {\n        log('preload fetch error - retrying');\n        retry();\n        return;\n      }\n\n      res.blob().then(function (blob) {\n        log('preload got blob');\n\n        if (_this.preloaded && _this.preloaded.url === url) {\n          log('preloaded', {\n            url: url\n          });\n          var properMimeTypeBlob = new Blob([blob], {\n            type: 'audio/mpeg'\n          });\n          _this.preloaded.blobUrl = URL.createObjectURL(properMimeTypeBlob);\n\n          _this.trigger('prepared', url, true, responses);\n        } else {\n          // finished retrieving file, but nobody cares any more\n          log('preload retrieved url, but nobody cares any more');\n        }\n      }).catch(function (err) {\n        log('preload error blobbing', err, err.name, err.message);\n        response.name = err.name;\n        response.message = err.message;\n        retry();\n      });\n    }).catch(function (err) {\n      log('preload error', err, err.name, err.message); // connectivity error \n\n      response.end = new Date().toString();\n      response.name = err.name;\n      response.message = err.message;\n      retry();\n    });\n  },\n\n  /**\n  * This function puts the given URL into the prepared audio element and tells\n  * the browser to advance to the given start position.\n  * \n  * @param {*} url \n  * @param {*} startPosition \n  * @returns true if the song is already loaded up and ready to play\n  */\n  _prepare: function _prepare(url, startPosition) {\n    // empty out any pending request\n    this.prepareWhenReady = null;\n\n    if (!url) {\n      return false;\n    }\n\n    if (this.preparing && this.preparing.audio.src === url && this.preparing.canplaythrough) {\n      log('play already prepared!'); // song is already prepared!\n\n      return true;\n    }\n\n    if (this.preparing.audio.src !== url) {\n      log('preparing', url);\n\n      if (this.preparing.audio.playing) {\n        this.preparing.audio.pause();\n      }\n\n      this.preparing.canplaythrough = false;\n      revoke(this.preparing.audio);\n      this.preparing.audio.src = url;\n    }\n\n    if (startPosition && this.preparing.audio.currentTime !== startPosition) {\n      log('advancing preparing audio to', startPosition / 1000);\n      this.preparing.audio.currentTime = startPosition / 1000;\n    }\n\n    return false;\n  },\n\n  /*\n   * Kick off playback of the requested sound.\n   */\n  _playSound: function _playSound(sound) {\n    var _this2 = this;\n\n    var speaker = this;\n\n    if (!this.active || !this.active.audio) {\n      // eslint-disable-next-line\n      console.error('**** player.initializeAudio() *** not called before playback!');\n      return;\n    }\n\n    if (this.active.sound === sound) {\n      if (this.active.audio.paused) {\n        log(sound.id + ' was paused, so resuming'); // resume playback\n\n        this.active.audio.play().then(function () {\n          log('resumed playback');\n          sound.trigger('play');\n        }).catch(function (e) {\n          log('error resuming playback', e.name, e.message, e.stack, sound.id);\n          speaker.active.sound = null;\n          sound.trigger('finish');\n        });\n\n        if (this.fading.sound) {\n          this.fading.audio.play().then(function () {\n            log('resumed fading playback');\n          }).catch(function (e) {\n            log('error resuming fading playback', e.name, e.message, e.stack, sound.id);\n            speaker.fading.sound = null;\n            revoke(speaker.fading.audio);\n            speaker.fading.audio.src = SILENCE;\n          });\n        }\n      } else {\n        log(sound.id + ' is already playing');\n      }\n\n      return;\n    }\n\n    if (this.preloaded && this.preloaded.url === sound.url && this.preloaded.blobUrl) {\n      log(sound.id + ' using preloaded audio', this.preloaded);\n\n      if (this.preparing.audio.playing) {\n        this.preparing.audio.pause();\n      }\n\n      sound.responses = this.preloaded.responses;\n      revoke(this.preparing.audio);\n      this.preparing.audio.src = this.preloaded.blobUrl;\n      this.preparing.canplaythrough = true;\n      this.preloaded = null;\n    } else if (this.preparing.audio.src !== sound.url) {\n      // hopefully, by this time, any sound that was destroyed before its\n      // play() call completed has actually completed its play call. Otherwise\n      // this will trigger an exception in the play preparation.\n      this._prepare(sound.url, sound.startPosition);\n    } // swap prepared -> active\n\n\n    var active = this.active;\n    this.active = this.preparing;\n    this.preparing = active;\n    this.preparing.canplaythrough = false;\n    revoke(this.preparing.audio);\n    this.preparing.audio.src = SILENCE; // don't throw sound object in active until playback starts (below)\n\n    this.active.sound = null;\n\n    this._setVolume(this.active, sound); // notify clients that whatever was previously playing has finished\n\n\n    if (this.preparing.sound) {\n      var finishedSound = this.preparing.sound;\n      this.preparing.sound = null;\n      finishedSound.trigger('finish');\n    }\n\n    sound.awaitingPlayResponse = true;\n    this.active.sound = sound;\n    var me = this.active;\n    var attempt = 1;\n\n    var play = function play() {\n      log(sound.id + ' initiating play()', {\n        attempt: attempt\n      });\n\n      _this2.active.audio.play().then(function () {\n        delete sound.awaitingPlayResponse;\n\n        if (!speaker.outstandingSounds[sound.id]) {\n          log(sound.id + ' play() succeeded, but sound has been destroyed'); // this sound was killed before playback began - make sure to stop it\n\n          if (me.audio && me.audio.src === sound.url) {\n            log(sound.id + ' being paused and unloaded');\n            me.audio.pause();\n            revoke(me.audio);\n            me.audio.src = SILENCE;\n          }\n\n          return;\n        }\n\n        log(sound.id + ' play() succeeded'); // configure fade-out now that metadata is loaded\n\n        if (sound.fadeOutSeconds && sound.fadeOutEnd === 0) {\n          sound.fadeOutStart = me.audio.duration - sound.fadeOutSeconds;\n          sound.fadeOutEnd = me.audio.duration;\n        }\n\n        if (sound.startPosition) {\n          log('updating start position');\n          me.audio.currentTime = sound.startPosition / 1000;\n          log('updated');\n        }\n\n        var paused = me.audio.paused;\n        sound.trigger('play');\n\n        if (me.pauseAfterPlay) {\n          me.audio.pause();\n        } else if (paused) {\n          sound.trigger('pause');\n        }\n      }).catch(function (error) {\n        log('error starting playback with sound ' + sound.id, {\n          name: error.name,\n          message: error.message,\n          attempt: attempt\n        });\n\n        if (attempt < 4) {\n          attempt++;\n          setTimeout(play, 10);\n        } else {\n          sound.trigger('finish', error);\n        }\n      });\n    };\n\n    play();\n  },\n  _destroySound: function _destroySound(sound) {\n    var fadeOut = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    sound.off();\n\n    if (this.active && this.active.sound === sound) {\n      if (!fadeOut || !sound.fadeOutSeconds) {\n        log('destroy triggered for current sound (no fadeout)', sound.id);\n        this.active.audio.pause();\n        revoke(this.active.audio);\n        this.active.audio.src = SILENCE;\n      } else {\n        log('destroy triggered for current sound (with fadeout)', sound.id);\n        var audio = this.active.audio;\n        sound.fadeOutStart = audio.currentTime;\n\n        if (sound.endPosition) {\n          sound.fadeOutEnd = Math.min(audio.currentTime + sound.fadeOutSeconds, sound.endPosition / 1000);\n          sound.endPosition = Math.min(sound.fadeOutEnd * 1000, sound.endPosition);\n        } else {\n          sound.fadeOutEnd = audio.currentTime + sound.fadeOutSeconds;\n          sound.endPosition = sound.fadeOutEnd * 1000;\n        } // song hit start of fade out\n\n\n        this._setVolume(this.active); // active becomes fading, and fading becomes active\n\n\n        var fading = this.fading;\n        this.fading = this.active;\n        this.active = fading;\n        this.active.sound = null; // not used any more \n      }\n    } else {\n      log('destroy triggered for inactive sound', sound.id); // if (this.active && (this.active.audio.sound === sound)) {\n      //   We're destroying the active sound, but it hasn't completed its play()\n      //   yet (indicated by this.active.sound === sound), so we can't pause it\n      //   here. When the play does complete, it will notice it isn't in the \n      //   outstandingSounds map and it will pause itself\n      // }\n    }\n\n    delete this.outstandingSounds[sound.id];\n  },\n  flush: function flush() {\n    // destroy all outstanding sound objects\n    for (var id in this.outstandingSounds) {\n      this.outstandingSounds[id].destroy();\n    }\n  },\n  _pauseSound: function _pauseSound(sound) {\n    if (this.active && sound === this.active.sound) {\n      if (sound.awaitingPlayResponse) {\n        // wait for the play() call to complete before pausing, otherwise\n        // we'll get an exception\n        this.active.pauseAfterPlay = true;\n      } else {\n        this.active.audio.pause();\n      }\n    }\n\n    if (this.fading && this.fading.audio) {\n      this.fading.audio.pause();\n    }\n  },\n  _position: function _position(sound) {\n    if (this.active && sound === this.active.sound) {\n      return Math.floor(this.active.audio.currentTime * 1000);\n    } else {\n      return 0;\n    }\n  },\n  _duration: function _duration(sound) {\n    if (sound === this.active.sound) {\n      var durationRounded = isNaN(this.active.audio.duration) ? 0 : Math.round(this.active.audio.duration);\n      return durationRounded * 1000;\n    } else {\n      return 0;\n    }\n  },\n  // set the volume (0-100)\n  setVolume: function setVolume(value) {\n    if (typeof value !== 'undefined') {\n      this.vol = value;\n\n      if (this.active && this.active.sound) {\n        this._setVolume(this.active);\n      }\n\n      this.trigger('volume', value);\n    }\n\n    return this.vol;\n  },\n  getVolume: function getVolume() {\n    return this.vol;\n  }\n};\n\nfunction revoke(audio) {\n  if (audio.src.slice(0, 4) === 'blob') {\n    log('revoking', {\n      url: audio.src\n    });\n    URL.revokeObjectURL(audio.src);\n  }\n} // add events to speaker class\n\n\nObject.assign(Speaker.prototype, Events);\n/*\n *  Feed Media Player\n *\n *  This class requests and plays audio files from the feed servers. It\n *  makes use of the Session class to communicate with the server. There\n *  should technically only ever be one instance of this class in a page.\n *  This class does no UI - that should be handled by Feed.PlayerView \n *  or similar.\n *\n *  Create this with:\n *    player = new Feed.Player(token, secret[, options])\n *\n *  options can be:\n *    debug: false,         // when true, display console logging statements\n *    remoteLogging: false  // when true, failed play starts or errors will cause the\n *                          // last 500 log entries from the player to be sent to\n *                          // feed.fm to assist with debugging.\n *    trimming: true,       // when true, song start/end trims will be honored\n *    crossfadeIn: false,   // when true, songs do not fade in - they start at full volume\n *    normalizeVolume: true, // automatically adjust volume of songs in station to be at same approx loudness\n *    secondsOfCrossfade: 0 // number of seconds to crossfade songs during song transitions (note: this might be\n *                          // overidden by the server)\n *    simulcast: 'uuid'     // id to announce music playback on, for simulcast listeners\n *    maxRetries: 6         // max number of times to retry retrieving a song before giving up\n *    resumable: true       // when true, playback can be resumed after a page refresh with Feed.resumable();\n *\n *  In response to a user-interaction event, and before you begin any\n *  music playback, be sure to call:\n *\n *    player.initializeAudio();\n *\n *  That will ensure the library has permission from the browser to play\n *  audio.\n * \n *  To retrieve a list of available stations, register for the 'stations' event,\n *  and then call `player.tune()`:\n * \n *    player.on('stations', function(stations) {\n *       console.log('available stations', stations);\n *    });\n *    player.tune();\n * \n *  or use the promise returned from `player.tune()`:\n *\n *    let stations = await player.tune();\n *\n *  Then control playback with:\n *\n *    play() - start playing the current placement/station or resume the current song\n *    pause() - pause playback of the current song, if any\n *    like() - tell the server we like this song\n *    unlike() - tell the server to remove the 'like' for this song\n *    dislike() - tell the server we dislike this song, and skip to the next one\n *    skip() - request to skip the current song\n *    setStationId(id [, fade]) - switch to a different station. Optionally set 'fade' to true to\n *         crossfade playback to the new station. This has a side effect of triggering\n *         a 'station-changed' event.\n *    setStationId(id, advanceTo) - switch to station with id `id`, and begin playback of that\n *         station at `advanceTo` seconds from the start of the station. This only works for first play\n *         or single play stations, and will trigger an error for other stations.\n *    setVolume(xxx) - adjust music volume (0-100)\n *    getVolume() - retrieve music volume (0-100)\n *\n *  player has a current state that can be queried with 'getCurrentState()':\n *    uninitialized - player is still trying to initialize\n *    unavailable - no music is available\n *    idle - ready for playback, not playing anything\n *    playing - if session.hasActivePlayStarted() and we're not paused\n *    paused -  if session.hasActivePlayStarted() and we're paused\n * \n *  events emitted by the player:\n *    station-changed - the current station from which music is pulled has changed.\n *                      this is triggered in response to a \n *    stations - this is triggered after a call to `tune()`, and passes the event handler an\n *               array of all stations available for playback. Alterntively, the\n *               `getStations()` method returns a promise that resolves to the same\n *               value.\n *    music-unavailable - user isn't located in the US and can't play music\n *    play-started - this play has begun playback. The event handler is passed a \n *                   'play' object with song metadata. If the event was triggered\n *                   via a `Feed.resumable().tune()` call, then a second argument\n *                   of `true` will be passed to the event handler.\n *    play-paused - the currently playing song has been paused. The event handler\n *                    is passed a 'play' object with song metadata. if the event\n *                   was triggered via a `Feed.resumable().tune()` call, then a\n *                   second argument of `true` will be passed to the event handler.\n *    play-stopped - player.stop() has been called\n *    skip-denied - the given song could not be skipped due to DMCA rules\n *    skip-failed - the request to skip a song was denied\n *    forbidden - an unsatisfiable request for music was made (currently only\n *       triggered when trying to start playback in the middle of a non-first\n *       play station with the `advanceTo` argument to `setStationId`)\n *\n *  Some misc methods:\n *\n *    setMuted(muted)\n *    canLike() - returns true if the current song may be liked/unliked/disliked\n *    canSkip() - returns true if the current song may be skipped (some stations have\n *        skip frequency limits or disable skipping entirely)\n *\n */\n\nfunction supports_html5_storage$1() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null && (window.localStorage['feed-test'] = true);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Player = function Player(token, secret, options) {\n  var _this = this;\n\n  if (!secret) {\n    // restore from saved state\n    this._restore(token);\n  } else {\n    options = options || {};\n    options.maxRetries = options.maxRetries || 10;\n    this.options = options;\n    this.state = {\n      paused: true,\n      // activePlay\n      simulcast: options.simulcast\n    };\n\n    if (options.debug) {\n      log.enable();\n    } // this._station = current station\n    // this._stations = list of available stations\n    // this._placement = current placement\n\n\n    this.trimming = options.trimming === false ? false : true;\n    this.normalizeVolume = 'normalizeVolume' in options ? options.normalizeVolume : true;\n    this.resumable = 'resumable' in options ? options.resumable : true;\n    this.secondsOfCrossfade = options.secondsOfCrossfade || 0;\n    this.crossfadeIn = !!options.crossfadeIn;\n    this.serverAssignedCrossfade = false;\n    this._stationsPromise = new Promise(function (resolve, reject) {\n      _this._stationsResolve = resolve;\n      _this._stationsReject = reject;\n    });\n    var speaker = this.speaker = new Speaker({\n      maxRetries: options.maxRetries\n    });\n    var session = this.session = new Session(token, secret, options);\n\n    if (options.brokenWebkitFormats && Speaker.brokenWebkit) {\n      var reqFormatList = options.brokenWebkitFormats.split(','),\n          suppFormatList = speaker.getSupportedFormats().split(','),\n          reqAndSuppFormatList = intersection(reqFormatList, suppFormatList),\n          reqAndSuppFormats = reqAndSuppFormatList.join(',');\n      log('input format list is', reqFormatList, suppFormatList);\n      log('final support list is', reqAndSuppFormats);\n\n      if (reqAndSuppFormatList.length === 0) {\n        reqAndSuppFormats = speaker.getSupportedFormats();\n      }\n\n      session.setFormats(reqAndSuppFormats);\n    } else if (options.formats) {\n      var _reqFormatList = options.formats.split(','),\n          _suppFormatList = speaker.getSupportedFormats().split(','),\n          _reqAndSuppFormatList = intersection(_reqFormatList, _suppFormatList),\n          _reqAndSuppFormats = _reqAndSuppFormatList.join(',');\n\n      if (_reqAndSuppFormatList.length === 0) {\n        _reqAndSuppFormats = speaker.getSupportedFormats();\n      }\n\n      log('input format list is', _reqFormatList, _suppFormatList);\n      log('final support list is', _reqAndSuppFormats);\n      session.setFormats(_reqAndSuppFormats);\n    } else {\n      session.setFormats(speaker.getSupportedFormats());\n    }\n  }\n\n  Object.assign(this, Events);\n  this.session.on('play-active', this._onPlayActive, this);\n  this.session.on('play-started', this._onPlayStarted, this);\n  this.session.on('play-completed', this._onPlayCompleted, this);\n  this.session.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.session.on('prepare-sound', this._onPrepareSound, this);\n  this.session.on('placement', this._onPlacement, this);\n  this.session.on('stations', this._onStations, this);\n  this.session.on('station-changed', this._onStationChanged, this);\n  var player = this;\n\n  var _loop = function _loop() {\n    var event = _arr[_i];\n\n    _this.session.on(event, function () {\n      player.trigger.apply(player, [event].concat(Array.prototype.slice.call(arguments, 0)));\n    });\n  };\n\n  for (var _i = 0, _arr = ['music-unavailable', 'not-in-us', 'invalid-credentials', 'skip-denied', 'play-active', 'forbidden']; _i < _arr.length; _i++) {\n    _loop();\n  }\n\n  this.setMuted(this.isMuted());\n};\n\nPlayer.prototype._persist = function () {\n  var playerState = shallowCopy(this.state);\n\n  if (playerState.activePlay) {\n    // remove the 'sound' object\n    playerState.activePlay = shallowCopy(playerState.activePlay);\n    delete playerState.activePlay.sound;\n  }\n\n  var persisted = {\n    state: playerState,\n    options: this.options,\n    trimming: this.trimming,\n    normalizeVolume: this.normalizeVolume,\n    secondsOfCrossfade: this.secondsOfCrossfade,\n    serverAssignedCrossfade: this.serverAssignedCrossfade,\n    crossfadeIn: this.crossfadeIn,\n    sessionConfig: this.session.config\n  };\n  return persisted;\n};\n\nPlayer.prototype._restore = function (_ref) {\n  var _this2 = this;\n\n  var persisted = _ref.persisted,\n      elapsed = _ref.elapsed;\n\n  if (persisted.options.debug) {\n    log.enable();\n  }\n\n  log('restoring!'); // session will be initialized with no current play\n\n  var sessionConfig = persisted.sessionConfig;\n  var sessionCurrent = sessionConfig.current;\n  sessionConfig.current = null;\n  sessionConfig.pendingRequest = null;\n  sessionConfig.pendingPlay = null;\n  this.session = new Session();\n  this.session.config = sessionConfig;\n  this.options = persisted.options;\n  this.speaker = new Speaker({\n    maxRetries: this.options.maxRetries\n  }); // start off in paused state\n\n  this.state = {\n    paused: true,\n    simulcast: this.options.simulcast\n  };\n  this.trimming = persisted.trimming;\n  this.normalizeVolume = persisted.normalizeVolume;\n  this.resumable = true;\n  this.secondsOfCrossfade = persisted.secondsOfCrossfade;\n  this.serverAssignedCrossfade = persisted.serverAssignedCrossfade;\n  this.crossfadeIn = persisted.crossfadeIn;\n  this._stationsPromise = new Promise(function (resolve, reject) {\n    _this2._stationsResolve = resolve;\n    _this2._stationsReject = reject;\n  }); // at this point, we're in a state similar to a newly initialized player,\n  // but the session object has placement/station info\n  // swap out the default tune\n\n  this.tune = function () {\n    var _this3 = this; // on the next tick, throw out events to simulate a normal tune() call\n\n\n    return Promise.resolve(true).then(function () {\n      _this3._station = persisted.sessionConfig.station;\n      _this3._stations = persisted.sessionConfig.stations;\n      _this3._placement = persisted.sessionConfig.placement;\n\n      _this3._stationsResolve(persisted._stations);\n\n      _this3.trigger('placement', _this3._placement);\n\n      _this3.trigger('station-changed', _this3._station);\n\n      _this3.trigger('stations', _this3._stations); // stick the previously active song into the session\n\n\n      _this3.session.config.current = sessionCurrent;\n      _this3.session.config.current.started = false;\n      var play = _this3.session.config.current.play; // get the player to create a sound object with the audio advanced to the\n      // old elapsed position\n\n      play.start_at = elapsed / 1000;\n\n      _this3.session.trigger('play-active', play);\n\n      _this3.session.config.current.started = true; // pretend the song was started\n\n      _this3.state.paused = false;\n\n      _this3.session.trigger('play-started', play, true); // announce that the song is paused\n\n\n      _this3.state.paused = true;\n\n      _this3.trigger('play-paused', play, true); // now we're in the same spot we'd be if we played and paused.\n\n    }).then(function () {\n      return _this3._stationsPromise;\n    });\n  };\n};\n\nPlayer.prototype.initializeAudio = function () {\n  log('INTIALIZE AUDIO');\n  this.speaker.initializeAudio();\n};\n\nPlayer.prototype._onPlacement = function (placement) {\n  this._placement = placement;\n\n  if (placement.options && placement.options.crossfade_seconds) {\n    this.secondsOfCrossfade = placement.options.crossfade_seconds;\n    this.serverAssignedCrossfade = true;\n  }\n\n  this.trigger('placement', placement);\n};\n\nPlayer.prototype._onStations = function (stations) {\n  this._stations = stations;\n\n  this._stationsResolve(stations);\n\n  this.trigger('stations', stations);\n};\n\nPlayer.prototype._onStationChanged = function (stationId, station) {\n  this._station = station;\n\n  if (this.serverAssignedCrossfade && station.options && 'crossfade_seconds' in station.options) {\n    // apply station level crossfade, if available\n    this.secondsOfCrossfade = station.options.crossfade_seconds;\n  } else if (this.serverAssignedCrossfade && this._placement.options && 'crossfade_seconds' in this._placement.options) {\n    // revert to placement level crossfade, if available\n    this.secondsOfCrossfade = this._placement.options.crossfade_seconds;\n  }\n\n  this.trigger('station-changed', stationId, station);\n};\n\nPlayer.prototype.setStationId = function (stationId, fadeOutOrAdvance) {\n  var advance;\n  var fadeOut = false;\n\n  if (fadeOutOrAdvance === true) {\n    fadeOut = fadeOutOrAdvance;\n    log('SET STATION ID (WITH FADE)', stationId);\n  } else if (fadeOutOrAdvance) {\n    advance = fadeOutOrAdvance;\n    log('SET STATION ID (WITH ADVANCE)', stationId, advance);\n  } else {\n    log('SET STATION ID', stationId);\n  }\n\n  if (fadeOut && this.state.activePlay) {\n    // when we destroy the sound, have it fade out\n    this.state.activePlay.fadeOnDestroy = true;\n  }\n\n  this.session.setStationId(stationId, advance, this.crossfadeIn);\n};\n\nPlayer.prototype._onPlayActive = function (play) {\n  // create a new sound object\n  var options = {\n    play: this._onSoundPlay.bind(this, play.id),\n    pause: this._onSoundPause.bind(this, play.id),\n    finish: this._onSoundFinish.bind(this, play.id),\n    elapse: this._onSoundElapse.bind(this, play.id)\n  };\n\n  if (this.normalizeVolume) {\n    options.gain = (play.audio_file.replaygain_track_gain || 0) + (play.station.pre_gain || 0);\n  }\n\n  if (play.start_at) {\n    // when offsetting into a station, ignore the trim and honor the start_at\n    options.startPosition = play.start_at * 1000;\n  } else {\n    if (this.trimming && play.audio_file.extra && play.audio_file.extra.trim_start) {\n      options.startPosition = play.audio_file.extra.trim_start * 1000;\n    }\n  }\n\n  if (this.trimming && play.audio_file.extra && play.audio_file.extra.trim_end && play.audio_file.duration_in_seconds) {\n    options.endPosition = (play.audio_file.duration_in_seconds - play.audio_file.extra.trim_end) * 1000;\n  }\n\n  if (this.secondsOfCrossfade) {\n    if (this.crossfadeIn) {\n      options.fadeInSeconds = this.secondsOfCrossfade;\n    }\n\n    options.fadeOutSeconds = this.secondsOfCrossfade;\n  }\n\n  var sound = this.speaker.create(play.audio_file.url, options);\n  this.state.activePlay = {\n    id: play.id,\n    sound: sound,\n    startReportedToServer: false,\n    // whether we got a 'play-started' event from session\n    soundCompleted: false,\n    // whether the sound object told us it finished playback\n    playStarted: false,\n    // whether playback started on the sound object yet\n    fadeOnDestroy: false,\n    // when true, apply a fade out when destroying the sound\n    previousPosition: 0 // last time we got an 'elapse' callback\n\n  }; // if we're not paused, then start it\n\n  if (!this.state.paused) {\n    var s = this.state.activePlay.sound;\n    s.play();\n  }\n};\n\nPlayer.prototype._onSoundPlay = function (playId) {\n  // sound started playing\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound play, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.paused = false;\n  var playerWasResumed = this.state.activePlay.playStarted;\n  this.state.activePlay.playStarted = true; // on the first play, tell the server we're good to go\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // save the state so we can restore\n    if (this.resumable) {\n      persistState(this._persist());\n    }\n\n    return this.session.reportPlayStarted();\n  } else if (playerWasResumed) {\n    // subsequent plays are considered 'resumed' events\n    this.trigger('play-resumed', this.session.getActivePlay());\n  }\n};\n\nPlayer.prototype.getActivePlay = function () {\n  return this.session.getActivePlay();\n};\n\nPlayer.prototype.hasActivePlayStarted = function () {\n  return this.session.hasActivePlayStarted();\n};\n\nPlayer.prototype.getActivePlacement = function () {\n  return this.session.getActivePlacement();\n};\n\nPlayer.prototype._onSoundPause = function (playId) {\n  // sound paused playback\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound pause, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.paused = true;\n  this.trigger('play-paused', this.session.getActivePlay());\n};\n\nPlayer.prototype._onSoundFinish = function (playId, withError) {\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound finish, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound;\n  this.state.activePlay.soundCompleted = true;\n\n  if (withError) {\n    this.session._submitEvent('playback-error', {\n      url: sound.url,\n      responses: sound.responses,\n      error: withError,\n      play_id: playId\n    });\n\n    this.state.activePlay.soundCompletedWithError = true;\n\n    if (withError.name === 'NotAllowedError') {\n      // eslint-disable-next-line no-console\n      console.error('Feed.fm: first call to \"initializeAudio()\" or \"play()\" must be made in user-initiated event handler');\n      this.stop();\n      return;\n    }\n  }\n\n  if (!this.state.activePlay.playStarted) {\n    // never reported this as started...  mark it as invalidated so\n    // we can advance.\n    this.trigger('invalidated', playId);\n    this.session.requestInvalidate();\n    return;\n  }\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // if the song failed before we recieved start response, wait\n    // until word from the server that we started before we say\n    // that we completed the song\n    return;\n  }\n\n  if (withError) {\n    log('song completed with error - marking as invalid', withError);\n    this.trigger('invalidated', playId);\n    this.session.requestInvalidate();\n  } else {\n    this.session.reportPlayCompleted();\n  }\n};\n\nPlayer.prototype._onSoundElapse = function (playId) {\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound elapse, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound,\n      position = sound.position(),\n      interval = 30 * 1000,\n      // ping server every 30 seconds\n  previousCount = Math.floor(this.state.activePlay.previousPosition / interval),\n      currentCount = Math.floor(position / interval);\n\n  if (this.resumable) {\n    persistElapsed(position);\n  }\n\n  this.state.activePlay.previousPosition = position;\n\n  if (currentCount !== previousCount) {\n    this.session.reportPlayElapsed(Math.floor(position / 1000));\n  }\n};\n\nPlayer.prototype._onPlayStarted = function (play) {\n  var _this4 = this;\n\n  var session = this.session;\n\n  if (!this.state.activePlay || this.state.activePlay.id !== play.id) {\n    log('received play started, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.startReportedToServer = true;\n\n  if (this.state.activePlay.soundCompleted) {\n    // the audio completed playback before the session announced the play started\n    log('sound completed before we finished reporting start', this.state.activePlay); // In the normal case we'd just quit here, but since the audio completed playback\n    // already, we've got to make sure a 'session.reportPlayCompleted()' gets kicked\n    // off to record the completion of this song.\n    // Defer the reporting so other 'play-started' handlers can complete as normal\n    // before a 'play-completed' gets triggered\n\n    if (this.state.activePlay.soundCompletedWithError) {\n      setTimeout(function () {\n        _this4.trigger('invalidated', play.id);\n\n        session.requestInvalidate();\n      }, 1);\n    } else {\n      setTimeout(function () {\n        return session.reportPlayCompleted();\n      }, 1);\n    }\n  }\n\n  this.updateSimulcast();\n  this.trigger('play-started', play);\n};\n\nPlayer.prototype._onPlayCompleted = function (play) {\n  if (!this.state.activePlay || this.state.activePlay.id !== play.id) {\n    log('received play completed, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.sound.destroy(this.state.activePlay.fadeOnDestroy);\n  var started = this.state.activePlay.playStarted;\n  delete this.state.activePlay;\n\n  if (started) {\n    this.trigger('play-completed', play);\n  } // skip to complete the current song.\n  //this.state.paused = false;\n\n};\n\nPlayer.prototype._onPlaysExhausted = function () {\n  if (this.state.paused) {\n    return;\n  }\n\n  this.state.paused = false;\n  this.updateSimulcast();\n  this.trigger('plays-exhausted');\n};\n\nPlayer.prototype._onPrepareSound = function (url, startPosition, playId) {\n  var _this5 = this;\n\n  log('preparing sound', url, startPosition);\n  this.speaker.prepare(url, startPosition * 1000);\n  this.speaker.once('prepared', function (preparedUrl, success, headers) {\n    if (url !== preparedUrl) {\n      return;\n    }\n\n    if (headers && headers.length > 1) {\n      _this5.session._submitEvent('preload-error', {\n        url: url,\n        play_id: playId,\n        responses: headers\n      });\n    }\n\n    var activePlay = _this5.session.getActivePlay();\n\n    if (!success && (!activePlay || activePlay.id !== playId)) {\n      _this5.session.requestInvalidate(url);\n    }\n  });\n};\n\nPlayer.prototype.isPaused = function () {\n  return this.session.isTuned() && this.state.paused;\n};\n\nPlayer.prototype.tune = function () {\n  log('TUNE');\n\n  if (!this.session.isTuned()) {\n    this.session.tune();\n  }\n\n  return this._stationsPromise;\n};\n/**\n * This call triggers the SDK to load the next song into memory and\n * returns a promise that resolves when the next song is fully loaded\n * and ready for immediate playback via play().\n * \n * Additionally, this method triggers a 'prepared' event on the player\n * object when the next song is fully loaded and ready for immediate\n * playback.\n * \n * Note: a song cannot be fully loaded into memory until initializeAudio()\n * has been called. The promise returned by this method will not resolve\n * unless initializeAudio() is successfully called before or after this\n * method.\n * \n * @returns Promise that resolves when a song is in memory and ready for immediate playback\n */\n\n\nPlayer.prototype.prepare = function () {\n  log('PREPARE');\n  this.speaker.initializeAudio();\n  return this._prepare();\n};\n\nPlayer.prototype._prepare = function () {\n  var _this6 = this;\n\n  var ap = this.state.activePlay;\n\n  if (ap) {\n    var url = ap.sound.url;\n    var prepared = this.speaker.prepare(url, ap.sound.startPosition);\n\n    if (prepared) {\n      return Promise.resolve(true).then(function () {\n        log('already prepared');\n\n        _this6.trigger('prepared');\n      });\n    } else {\n      return new Promise(function (resolve) {\n        log('waiting for un/prepared event');\n\n        _this6.speaker.once('prepared', function (preparedUrl, success, headers) {\n          if (headers && headers.length > 1) {\n            _this6.session._submitEvent('preload-error', {\n              url: preparedUrl,\n              play_id: ap.id,\n              responses: headers\n            });\n          }\n\n          if (preparedUrl !== url) {\n            return;\n          }\n\n          if (success) {\n            _this6.trigger('prepared');\n\n            resolve(true);\n          } else {\n            // invalidate the play, and request a new one\n            _this6.session.requestInvalidate();\n\n            _this6.session.once('play-active', function () {\n              _this6._prepare().then(function (val) {\n                return resolve(val);\n              });\n            });\n          }\n        });\n      });\n    }\n  } else {\n    return new Promise(function (resolve) {\n      _this6.session.once('play-active', function ()\n      /* play */\n      {\n        _this6._prepare().then(function (val) {\n          return resolve(val);\n        });\n      });\n\n      if (!_this6.session.isTuned()) {\n        log('tuning');\n\n        _this6.session.tune();\n      }\n    });\n  }\n};\n\nPlayer.prototype.play = function () {\n  log('PLAY');\n  var session = this.session;\n  var state = this.state;\n  this.speaker.initializeAudio();\n\n  if (!session.isTuned()) {\n    // not currently playing music\n    state.paused = false;\n    return session.tune();\n  }\n\n  if (session.getActivePlay() && state.activePlay && state.paused) {\n    // resume playback of song\n    if (state.activePlay.playStarted) {\n      state.activePlay.sound.resume();\n    } else {\n      state.activePlay.sound.play();\n    }\n  } // 'start' event from sound will definitely be asynchronous, so prevent repeated calls\n\n\n  state.paused = false;\n  this.updateSimulcast();\n};\n\nPlayer.prototype.pause = function () {\n  log('PAUSE');\n\n  if (!this.session.hasActivePlayStarted() || !this.state.activePlay || this.state.paused) {\n    return;\n  } // pause current song\n\n\n  this.state.activePlay.sound.pause(); // 'pause' event from sound might be asynchronous, so prevent repeated calls\n\n  this.state.paused = true;\n  this.updateSimulcast();\n};\n/**\n * Some regions disallow 'like'ing of songs (e.g. Canada). Check this after\n * changing the active station or when a new song starts to know if the current\n * song may be liked/disliked/unliked.\n * \n * @returns {boolean} true if we can 'like' songs in the currently active station\n */\n\n\nPlayer.prototype.canLike = function () {\n  return this.session.canLike();\n};\n\nPlayer.prototype.like = function () {\n  log('LIKE');\n\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  if (!this.session.canLike()) {\n    return;\n  }\n\n  this.session.likePlay(this.state.activePlay.id);\n  this.trigger('play-liked');\n};\n\nPlayer.prototype.unlike = function () {\n  log('UNLIKE');\n\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  if (!this.session.canLike()) {\n    return;\n  }\n\n  this.session.unlikePlay(this.state.activePlay.id);\n  this.trigger('play-unliked');\n};\n\nPlayer.prototype.dislike = function () {\n  log('DISLIKE');\n\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  if (!this.session.canLike()) {\n    return;\n  }\n\n  this.session.dislikePlay(this.state.activePlay.id);\n  this.trigger('play-disliked'); // start playback if we're paused and try to advance to next song\n\n  this.state.paused = false;\n  this.skip();\n};\n\nPlayer.prototype.skip = function () {\n  log('SKIP');\n\n  if (!this.session.hasActivePlayStarted()) {\n    // can't skip non-playing song\n    return;\n  } // cannot skip in station with skipping disabled\n\n\n  if (!this.session.canSkipInStation()) {\n    return;\n  }\n\n  this.state.paused = false;\n  this.session.requestSkip();\n};\n\nPlayer.prototype.stop = function () {\n  log('STOP');\n  clearPersistance();\n  this.state.paused = true;\n  var activePlay = this.state.activePlay;\n\n  if (activePlay && activePlay.sound) {\n    log('stopping active play', activePlay);\n\n    if (activePlay.startReportedToServer) {\n      // report where we played to\n      var position = activePlay.sound.position();\n      this.session.reportPlayStopped(Math.floor(position / 1000));\n    } // stop any playback\n\n\n    activePlay.sound.pause();\n    activePlay.sound.destroy();\n  } else {\n    log('no active play');\n  }\n\n  delete this.state.activePlay; // flush out any prepared sounds\n\n  this.speaker.flush();\n  this.trigger('play-stopped');\n  this.updateSimulcast();\n};\n\nPlayer.prototype.destroy = function () {\n  this.session = null;\n\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    this.state.activePlay.sound.destroy();\n  }\n};\n\nPlayer.prototype.getCurrentState = function () {\n  if (!this.session.hasActivePlayStarted()) {\n    // nothing started, so we're idle\n    return 'idle';\n  } else {\n    if (this.state.paused) {\n      return 'paused';\n    } else {\n      return 'playing';\n    }\n  }\n};\n\nPlayer.prototype.getPosition = function () {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.position();\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.getDuration = function () {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.duration();\n  } else {\n    return 0;\n  }\n};\n/**\n * Return true if the user may skip the current song.\n * \n * @returns {boolean}\n */\n\n\nPlayer.prototype.canSkip = function () {\n  return this.session.canSkip();\n};\n/**\n * Technically, you might not be able to skip a song at the time it starts, but\n * eventually enough time might pass that you can skip the song. Hence, we\n * had 'maybeCanSkip'. However, nobody is repeatedly checking for skippability\n * while playing a song, so this method is deprecated.\n */\n\n\nPlayer.prototype.maybeCanSkip = function () {\n  return this.canSkip();\n};\n\nvar mutedKey = 'muted';\n\nPlayer.prototype.isMuted = function () {\n  if (supports_html5_storage$1()) {\n    if (mutedKey in localStorage) {\n      return localStorage[mutedKey] === 'true';\n    }\n  }\n\n  return false;\n};\n\nPlayer.prototype.setMuted = function (isMuted) {\n  if (isMuted) {\n    this.speaker.setVolume(0);\n\n    if (supports_html5_storage$1()) {\n      localStorage[mutedKey] = true;\n    }\n\n    this.trigger('muted');\n  } else {\n    this.speaker.setVolume(100);\n\n    if (supports_html5_storage$1()) {\n      localStorage[mutedKey] = false;\n    }\n\n    this.trigger('unmuted');\n  }\n};\n\nPlayer.prototype.getVolume = function () {\n  return this.speaker.getVolume();\n};\n\nPlayer.prototype.setVolume = function (vol) {\n  this.speaker.setVolume(vol);\n};\n\nPlayer.prototype.getStations = function () {\n  return this._stationsPromise;\n};\n\nPlayer.prototype.updateSimulcast = function () {\n  var _this7 = this;\n\n  if (!this.state.simulcast) {\n    return;\n  }\n\n  var state = this.getCurrentState();\n  getClientId().then(function (clientId) {\n    _this7.session._signedAjax(getBaseUrl() + \"/api/v2/simulcast/\".concat(_this7.state.simulcast, \"/in-progress\"), {\n      method: 'POST',\n      body: JSON.stringify({\n        state: state,\n        client_id: clientId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  });\n};\n\nfunction shallowCopy(obj) {\n  if (obj === null) {\n    return null;\n  }\n\n  return Object.assign({}, obj);\n}\n\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function (callback, thisArg) {\n    thisArg = thisArg || window;\n\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\nvar PlayerView = function PlayerView(id, player) {\n  var _this = this;\n\n  this.alertId = null;\n  this.durationId = null;\n  this.startedPlayback = false;\n  this.$el = id instanceof Element ? id : document.getElementById(id);\n  this.player = player;\n  this.player.on('placement', this._onPlacement, this);\n  this.player.on('play-started', this._onPlayStarted, this);\n  this.player.on('play-paused', this._onPlayPaused, this);\n  this.player.on('play-resumed', this._onPlayResumed, this);\n  this.player.on('play-completed', this._onPlayCompleted, this);\n  this.player.on('play-stopped', this._onPlayStopped, this);\n  this.player.on('play-liked', this._onPlayLiked, this);\n  this.player.on('play-unliked', this._onPlayUnliked, this);\n  this.player.on('play-disliked', this._onPlayDisliked, this);\n  this.player.on('station-changed', this._onStationChanged, this);\n  this.player.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.player.on('skip-denied', this._onSkipDenied, this);\n  this.player.on('suspend', this._onSuspend, this);\n\n  this._enableButtonsBasedOnState();\n\n  this.displayText = this.originalDisplayText = this.$el.querySelector('.status').innerHTML;\n  this.renderStatus();\n  this.$el.querySelectorAll('.status').forEach(function (status) {\n    status.addEventListener('click', _this._onStatusClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.play-button, .start-button, .resume-button').forEach(function (button) {\n    button.addEventListener('click', _this._onPlayButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.pause-button').forEach(function (pause) {\n    pause.addEventListener('click', _this._onPauseButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.skip-button').forEach(function (skip) {\n    skip.addEventListener('click', _this._onSkipButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.like-button').forEach(function (like) {\n    like.addEventListener('click', _this._onLikeButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.dislike-button').forEach(function (dislike) {\n    dislike.addEventListener('click', _this._onDislikeButtonClick.bind(_this));\n  });\n};\n\nPlayerView.prototype._onStatusClick = function () {\n  var state = this.player.getCurrentState();\n\n  if (state === 'playing') {\n    this._onPauseButtonClick();\n  } else {\n    this._onPlayButtonClick();\n  }\n};\n\nPlayerView.prototype._onPlayButtonClick = function () {\n  this.player.initializeAudio();\n  this.player.play();\n};\n\nPlayerView.prototype._onPauseButtonClick = function () {\n  this.player.pause();\n};\n\nPlayerView.prototype._onSkipButtonClick = function () {\n  this.player.skip();\n};\n\nPlayerView.prototype._onLikeButtonClick = function (event) {\n  log('like button clicked!', event.target, this);\n\n  if (event.target.classList.contains('liked')) {\n    this.player.unlike();\n  } else {\n    this.player.like();\n  }\n};\n\nPlayerView.prototype._onDislikeButtonClick = function () {\n  this.player.dislike();\n};\n\nPlayerView.prototype.$ = function (arg) {\n  return this.$el.find(arg);\n};\n\nPlayerView.prototype._onPlacement = function (placement) {\n  if (!this.originalDisplayText) {\n    this.originalDisplayText = this.formatPlacement(placement);\n    this.renderStatus(this.originalDisplayText);\n  }\n};\n\nPlayerView.prototype.formatPlacement = function () {\n  return 'Tune in!';\n};\n\nPlayerView.prototype._onPlayStarted = function (play) {\n  this.startedPlayback = true;\n  this.renderStatus(this.formatPlay(play));\n\n  this._enableButtonsBasedOnState();\n\n  this._setLikeStatus(play.liked);\n\n  this._enablePositionTracker();\n};\n\nPlayerView.prototype._onStationChanged = function () {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enablePositionTracker = function () {\n  var playerView = this;\n\n  if (!this.durationId) {\n    this.durationId = window.setInterval(function () {\n      playerView.renderPosition(playerView.player.getPosition(), playerView.player.getDuration());\n    }, 500);\n  }\n};\n\nPlayerView.prototype._setLikeStatus = function (liked) {\n  var likes = this.$el.querySelectorAll('.like-button');\n  var dislikes = this.$el.querySelectorAll('.dislike-button');\n\n  if (liked === true) {\n    // highlight the like button\n    likes.forEach(function (element) {\n      element.classList.add('liked');\n    });\n    dislikes.forEach(function (element) {\n      element.classList.remove('disliked');\n    });\n  } else if (liked === false) {\n    // highlight the dislike button\n    likes.forEach(function (element) {\n      element.classList.remove('liked');\n    });\n    dislikes.forEach(function (element) {\n      element.classList.add('disliked');\n    });\n  } else {\n    // nobody gets highlighted\n    likes.forEach(function (element) {\n      element.classList.remove('liked');\n    });\n    dislikes.forEach(function (element) {\n      element.classList.remove('disliked');\n    });\n  }\n};\n\nPlayerView.prototype._disablePositionTracker = function () {\n  if (this.durationId) {\n    window.clearInterval(this.durationId);\n    this.durationId = null;\n  }\n};\n\nPlayerView.prototype._onPlayResumed = function () {\n  this._enablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayPaused = function () {\n  this._disablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayCompleted = function () {\n  this.renderPosition(0, 0);\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayStopped = function () {\n  this.renderStatus(this.originalDisplayText);\n  this.renderPosition(0, 0);\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlaysExhausted = function () {\n  this.renderStatus(this.originalDisplayText);\n  this.renderAlert('There is no more music to play in this station!');\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayLiked = function () {\n  this._setLikeStatus(true);\n};\n\nPlayerView.prototype._onPlayDisliked = function () {\n  this._setLikeStatus(false);\n};\n\nPlayerView.prototype._onPlayUnliked = function () {\n  this._setLikeStatus();\n};\n\nPlayerView.prototype._onSkipDenied = function () {\n  this.renderAlert('Sorry you\\'ve temporarily run out of skips!');\n};\n\nPlayerView.prototype.formatPlay = function (play) {\n  return '<span class=\\'track\\'>' + play.audio_file.track.title + '</span> by <span class=\\'artist\\'>' + play.audio_file.artist.name + '</span> on <span class=\\'release\\'>' + play.audio_file.release.title + '</span>';\n};\n\nPlayerView.prototype.renderStatus = function (displayText) {\n  var _this2 = this;\n\n  if (displayText !== undefined) {\n    this.displayText = displayText;\n  }\n\n  if (!this.alertId) {\n    this.$el.querySelectorAll('.status').forEach(function (status) {\n      status.innerHTML = _this2.displayText;\n      status.classList.remove('alert');\n    });\n  }\n};\n\nPlayerView.prototype.renderPosition = function (position, duration) {\n  this.$el.querySelectorAll('.elapsed').forEach(function (elapsed) {\n    elapsed.innerHTML = formatTime(position);\n  });\n  this.$el.querySelectorAll('.duration').forEach(function (dur) {\n    dur.innerHTML = formatTime(duration);\n  });\n\n  if (duration === 0) {\n    this.$el.querySelectorAll('.progress').forEach(function (progress) {\n      progress.style.width = '0';\n    });\n  } else {\n    var elapsed = Math.round((position + 1000) / duration * 100);\n    elapsed = elapsed > 100 ? 100 : elapsed;\n    this.$el.querySelectorAll('.progress').forEach(function (progress) {\n      progress.style.width = elapsed + '%';\n    });\n  }\n};\n\nfunction formatTime(millis) {\n  var asSeconds = Math.floor(millis / 1000),\n      secondsPart = asSeconds % 60,\n      minutesPart = Math.floor(asSeconds / 60);\n\n  if (secondsPart < 10) {\n    secondsPart = '0' + secondsPart;\n  }\n\n  return minutesPart + ':' + secondsPart;\n}\n\nPlayerView.prototype.renderAlert = function (alertText) {\n  if (this.alertId) {\n    window.clearTimeout(this.alertId);\n  }\n\n  this.$el.querySelectorAll('.status').forEach(function (status) {\n    status.innerHTML = alertText;\n    status.classList.add('alert');\n  });\n  var playerView = this;\n  this.alertId = window.setTimeout(function () {\n    playerView.alertId = null;\n    playerView.renderStatus();\n  }, 3000);\n};\n\nPlayerView.prototype._onSuspend = function () {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enableButtonsBasedOnState = function () {\n  var state = this.player.getCurrentState(),\n      toEnable,\n      toDisable;\n\n  switch (state) {\n    case 'playing':\n      toEnable = ['.pause-button'];\n      toDisable = ['.play-button', '.start-button', '.resume-button'];\n\n      if (this.player.canLike()) {\n        toEnable.push('.dislike-button', '.like-button');\n      } else {\n        toDisable.push('.dislike-button', '.like-button');\n      }\n\n      if (this.player.canSkip()) {\n        toEnable.push('.skip-button');\n      } else {\n        toDisable.push('.skip-button');\n      }\n\n      break;\n\n    case 'paused':\n      toEnable = ['.play-button', '.resume-button'];\n      toDisable = ['.pause-button', '.start-button'];\n\n      if (this.player.canLike()) {\n        toEnable.push('.dislike-button', '.like-button');\n      } else {\n        toDisable.push('.dislike-button', '.like-button');\n      }\n\n      if (this.player.canSkip()) {\n        toEnable.push('.skip-button');\n      } else {\n        toDisable.push('.skip-button');\n      }\n\n      break;\n\n    /* case 'idle': */\n\n    default:\n      toEnable = ['.play-button', '.start-button'];\n      toDisable = ['.resume-button', '.pause-button', '.like-button', '.dislike-button', '.skip-button'];\n      break;\n  }\n\n  var _iterator = _createForOfIteratorHelper(toDisable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      this.$el.querySelectorAll(item).forEach(function (element) {\n        element.classList.remove('button-enabled');\n        element.classList.add('button-disabled');\n        element.disabled = true;\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(toEnable),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _item = _step2.value;\n      this.$el.querySelectorAll(_item).forEach(function (element) {\n        element.classList.remove('button-disabled');\n        element.classList.add('button-enabled');\n        element.disabled = false;\n      });\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var classes = this.$el.classList;\n  classes.remove('state-playing');\n  classes.remove('state-paused');\n  classes.remove('state-idle');\n  classes.add('state-' + state);\n};\n\nvar METADATA_TIMEOUT = 10000;\nvar ADVANCE_TIMEOUT = 8000;\n/**\n * This class connects to a specific simulcast stream and\n * sends out events to indicate when new songs are starting\n * or when music has stopped playing. This class exposes \n * 'connect' and 'disconnect' methods to turn on the audio or stop\n * the audio.\n * \n *   initializeAudio\n *   connect\n *   disconnect\n *   getVolume\n *   setVolume\n * \n * The player has a state, returned from getCurrentState():\n * \n *   'idle'       - class hasn't attempted to connect to the stream, or we've\n *                  disconnected from a stream.\n *   'connecting' - we're conneting to the stream (this is set when a\n *                  call to 'connect()' is made)\n *   'connected'  - we have connected to the stream and are playing music (or silence)\n *   'music-unavailable' - no music is available for this client for this stream\n * \n * The audio volume can be adjusted with setVolume() and retrieved with\n * getVolume().\n * \n * The player triggers the following events:\n *    play-started - indicates a new song has begun playback, or we've\n *        dropped in on an already playing song. The 'play' that represents\n *        the song is passed as an argument. The 'play' value may be null, \n *        which indicates silence is playing right now.\n *    music-unavailable - indicates the listener may not listen to music\n *    state-changed - indicates the state of the player changed\n * \n * Upon a call to 'connect', the client can expect either a 'play-started'\n * event or a 'music-unavailable' event.\n */\n\nvar SimulcastPlayer = /*#__PURE__*/function () {\n  // var _uuid;     // uuid of stream\n  // var _speaker;  // Speaker instance\n  // var _streamUrl; // stream we're connecting to\n  // var _activePlay; // currently playing song, or null\n  // var _activeSound; // if we're playing, this holds the sound\n  // var _metadataTimeout; // timeout for retrieving updated metadata\n  // var _tryingToPlay = false; // true if we want to play/hear music\n  // var _retries; // number of times we've retried playing music\n  function SimulcastPlayer(uuid) {\n    _classCallCheck(this, SimulcastPlayer);\n\n    Object.assign(this, Events);\n    this._speaker = new Speaker();\n    this._uuid = uuid;\n    this._state = 'idle';\n    this._activePlay = null;\n    this._activeSound = null;\n    this._metadataTimeout = null;\n    this._tryingToPlay = false;\n    this._retries = 0;\n  }\n\n  _createClass(SimulcastPlayer, [{\n    key: \"initializeAudio\",\n    value: function initializeAudio() {\n      log('INTIALIZE AUDIO');\n\n      this._speaker.initializeAudio();\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      log(\"CONNECT to \".concat(this._uuid));\n\n      if (this._tryingToPlay) {\n        log(\"ignoring pointless connect to \".concat(this._uuid));\n        return;\n      }\n\n      if (this._state !== 'idle') {\n        log('ignoring connect() since we\\'re already connected');\n        return;\n      }\n\n      this._tryingToPlay = true; // initialize speaker,\n\n      this._speaker.initializeAudio();\n\n      this._setState('connecting'); // this should ask the API server for a URL, really\n\n\n      var baseApiUrl = new URL(getBaseUrl());\n      this._streamUrl = 'https://cast.' + baseApiUrl.hostname + '/' + this._uuid;\n\n      this._requestStream();\n    }\n  }, {\n    key: \"_onSoundPlay\",\n    value: function _onSoundPlay() {\n      var _this = this; // we've just connected to the stream.\n\n\n      log('sound play!'); // reset retry count\n\n      this._retries = 0; // starting point to watch for stalls\n\n      this._lastElapsedAt = Date.now();\n\n      if (this._state === 'connecting') {\n        this._setState('connected'); // get details about the play\n\n\n        fetch(this._streamUrl + '/play?elapsed=' + this._elapsed).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            _this._activePlay = res.play;\n\n            _this.trigger('play-started', _this._activePlay);\n\n            _this._scheduleMetadataTimeout();\n          } else {\n            // try again in 3 seconds\n            _this._scheduleMetadataTimeout(3000);\n          }\n        }).catch(function () {\n          // try again in 2 seconds\n          _this._scheduleMetadataTimeout(2000);\n        });\n      } else if (!this._metadataTimeout) {\n        this._scheduleMetadataTimeout();\n      }\n    }\n  }, {\n    key: \"_scheduleMetadataTimeout\",\n    value: function _scheduleMetadataTimeout() {\n      var _this2 = this;\n\n      var ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : METADATA_TIMEOUT;\n\n      this._cancelMetadataTimeout();\n\n      this._metadataTimeout = setTimeout(function () {\n        _this2._onMetadataTimeout();\n      }, ms);\n    }\n  }, {\n    key: \"_cancelMetadataTimeout\",\n    value: function _cancelMetadataTimeout() {\n      if (this._metadataTimeout) {\n        clearTimeout(this._metadataTimeout);\n      }\n\n      this._metadataTimeout = null;\n    }\n  }, {\n    key: \"_onSoundElapse\",\n    value: function _onSoundElapse() {\n      if (this._activeSound) {\n        var oldElapsed = this._elapsed;\n\n        var newlyElapsed = this._elapsed = this._activeSound.position();\n\n        if (newlyElapsed - oldElapsed > 0) {\n          this._lastElapsedAt = Date.now();\n        }\n      }\n    }\n  }, {\n    key: \"_requestStream\",\n    value: function _requestStream() {\n      log('requesting stream');\n\n      if (!this._tryingToPlay) {\n        return;\n      }\n\n      if (this._activeSound) {\n        this._activeSound.destroy();\n\n        this._activeSound = null;\n      } // don't query for metadata while we are trying to stream again\n\n\n      this._cancelMetadataTimeout();\n\n      this._activePlay = null; // keep retrying until we reconnect (but increase space between retries)\n\n      this._activeSound = this._speaker.create(this._streamUrl, {\n        play: this._onSoundPlay.bind(this),\n        finish: this._onSoundFinish.bind(this),\n        elapse: this._onSoundElapse.bind(this)\n      });\n\n      this._activeSound.play();\n\n      this._elapsed = 0;\n      this._lastElapsedAt = Date.now();\n    }\n  }, {\n    key: \"_onMetadataTimeout\",\n    value: function _onMetadataTimeout() {\n      var _this3 = this;\n\n      this._cancelMetadataTimeout(); // check for update of current song\n\n\n      fetch(this._streamUrl + '/play?elapsed=' + this._elapsed).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          if (res.play === null && _this3._activePlay !== null || res.play !== null && _this3._activePlay === null || res.play !== null && _this3._activePlay !== null && res.play.audio_file.id !== _this3._activePlay.audio_file.id) {\n            _this3._activePlay = res.play;\n            log('current play updated', _this3._activePlay);\n\n            _this3.trigger('play-started', _this3._activePlay);\n          }\n        }\n\n        _this3._scheduleMetadataTimeout();\n\n        var elapsed = Date.now() - _this3._lastElapsedAt;\n\n        if (elapsed > ADVANCE_TIMEOUT) {\n          log(\"stream has not advanced for \".concat(elapsed, \" ms, so reconnecting\"), _this3.toObject()); // reconnect if we've been down for a while\n\n          _this3._requestStream();\n        }\n      }).catch(function () {\n        var elapsed = Date.now() - _this3._lastElapsedAt;\n\n        if (elapsed > ADVANCE_TIMEOUT) {\n          log(\"stream has not advanced for \".concat(elapsed, \" ms, so reconnecting\"), _this3.toObject()); // reconnect if we've been down for a while\n\n          _this3._requestStream();\n        } else {\n          _this3._scheduleMetadataTimeout();\n        }\n      });\n    }\n  }, {\n    key: \"_onSoundFinish\",\n    value: function _onSoundFinish(error) {\n      var _this4 = this;\n\n      log('sound finished', this.toObject());\n\n      if (this._state === 'connecting' && error) {\n        // we weren't granted access to stream\n        this._tryingToPlay = false;\n\n        this._setState('music-unavailable');\n\n        this.trigger('music-unavailable');\n      } else {\n        log('reconnecting after stream ended', error); // we must have lost the stream during playback. try\n        // reconnecting. \n\n        if (this._activeSound) {\n          this._activeSound.destroy();\n\n          this._activeSound = null;\n        } // don't query for metadata while we are trying to stream again\n\n\n        this._cancelMetadataTimeout();\n\n        this._activePlay = null; // keep retrying until we reconnect (but increase space between retries)\n\n        this._retries += 1;\n        setTimeout(function () {\n          if (_this4._tryingToPlay) {\n            log('retrying connection after stream ended');\n\n            _this4._requestStream();\n          }\n        }, Math.pow(2, this._retries));\n      } // help us narrow down streaming issues\n\n\n      this._logEvents();\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      log('DISCONNECT', this.toObject());\n\n      if (!this._tryingToPlay) {\n        return;\n      }\n\n      this._tryingToPlay = false;\n      this._activePlay = null;\n      this._elapsed = 0;\n\n      this._cancelMetadataTimeout(); // stop and destroy our sound object\n\n\n      if (this._activeSound) {\n        this._activeSound.destroy();\n\n        this._activeSound = null;\n      }\n\n      this._setState('idle');\n\n      this._logEvents();\n    }\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this._speaker.getVolume();\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(vol) {\n      this._speaker.setVolume(vol);\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(newState) {\n      if (this._state !== newState) {\n        log(\"state transition \".concat(this._state, \" -> \").concat(newState));\n        this._state = newState;\n        this.trigger('state-changed', this._state);\n      }\n    }\n  }, {\n    key: \"getCurrentState\",\n    value: function getCurrentState() {\n      return this._state;\n    }\n  }, {\n    key: \"getCurrentPlay\",\n    value: function getCurrentPlay() {\n      return this._activePlay;\n    }\n  }, {\n    key: \"_logEvents\",\n    value: function _logEvents() {\n      var history = log.reset();\n      return fetch(getBaseUrl() + '/api/v2/session/event', {\n        method: 'POST',\n        body: JSON.stringify({\n          event: 'playerHistory',\n          parameters: history\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Feed-SDK': version + ' js'\n        }\n      });\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      return {\n        state: this._state,\n        activePlay: this._activePlay,\n        uuid: this._uuid,\n        metadataTimeoutIsNull: this._metadataTimeout === null,\n        tryingToPlay: this._tryingToPlay,\n        elapsed: this._elapsed,\n        retries: this._retries\n      };\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toString());\n    }\n  }]);\n\n  return SimulcastPlayer;\n}();\n/**\n * This method checks local storage to see if a Player instance was playing\n * music within the given number of milliseconds. If not, null is returned.\n * If so, a new Player instance is created and returned, but the `tune()`\n * method is swapped out so that, after calling `tune()` the player will \n * transition into a `paused` state. When `play()` is called, the player\n * will begin playback from the last position of the song the player\n * was previously playing.\n **/\n\n\nfunction resumable() {\n  var maxMilliseconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;\n  var state = retrieveStateAndElapsed(maxMilliseconds);\n\n  if (state.length === 2) {\n    var _state = _slicedToArray(state, 2),\n        persisted = _state[0],\n        elapsed = _state[1];\n\n    var player = new Player({\n      persisted: persisted,\n      elapsed: elapsed\n    });\n    return player;\n  }\n\n  return null;\n}\n\nvar index = {\n  Speaker: Speaker,\n  Session: Session,\n  Player: Player,\n  Listener: Listener,\n  PlayerView: PlayerView,\n  SimulcastPlayer: SimulcastPlayer,\n  log: log,\n  version: version,\n  resetClientId: deleteClientId,\n  getClientId: getClientId,\n  setBaseUrl: setBaseUrl,\n  resumable: resumable\n};\nmodule.exports = index;","map":{"version":3,"names":["tinyCookie","require","enabled","log","args","Array","prototype","slice","call","arguments","Date","now","console","apply","historyEntry","JSON","stringify","ts","message","e","history","push","length","shift","enable","reset","oldHistory","addProtocol","url","secure","window","location","protocol","substr","idCounter","uniqueId","prefix","id","nativeIndexOf","indexOf","contains","obj","target","some","value","uniq","array","isSorted","iterator","context","initial","map","results","seen","forEach","index","intersection","alpha","tests","retests","test","RegExp","filter","item","find","other","once","func","ran","memo","repeatAfter","delay","max","cb","setTimeout","baseUrl","getBaseUrl","setBaseUrl","cookieName","clientPromise","noDocument","document","noDocumentClientId","_getStoredCid","getCookie","_setStoredCid","setCookie","expires","path","_deleteStoredCid","removeCookie","_requestClientId","onSuccess","clientId","fetch","method","then","response","json","success","client_id","newDelay","catch","status","fullResponse","parse","responseText","getClientId","localClientPromise","Promise","resolve","getStoredClientId","setStoredClientId","deleteClientId","_typeof","Symbol","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","isArray","_arrayLikeToArray","iter","from","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","o","minLen","n","toString","name","len","arr2","_createForOfIteratorHelper","F","s","f","it","normalCompletion","didErr","step","return","Events","on","callback","eventsApi","_events","events","ctx","once$1","self","off","_callback","retain","ev","names","l","j","k","keys","trigger","allEvents","all","triggerEvents","stopListening","listeners","_listeners","deleteListener","_listenerId","eventSplitter","action","rest","concat","split","a1","a2","a3","listenMethods","listenTo","listenToOnce","_loop","_Object$keys","implementation","Listener","uuid","assign","_uuid","_state","listen","_this","_timeout","clearTimeout","onTimeout","stop","previousState","_activePlay","_this2","body","headers","becameIdle","state","previousPlay","play","seconds_since_start","duration_in_seconds","error","code","getCurrentState","getCurrentPlay","FEED_STATE_KEY","FEED_ELAPSED_TIME_KEY","supports_html5_storage","store","localStorage","setItem","remove","removeItem","get","getItem","persistState","timestamp","asString","stringTimestamp","stateTimestamp","encodingTime","storageTime","persistElapsed","milliseconds","retrieveStateAndElapsed","maxAge","encoded","persisted","elapsed","parseFloat","clearPersistance","version","Session","token","secret","options","config","remoteLogging","formats","maxBitrate","timeOffset","current","pendingRequest","pendingPlay","setCredentials","_submitLogHistory","setStationId","stationId","advance","secondsOfCrossfade","stations","stringStationId","changed","station","_assignCurrentPlay","_requestNextPlay","setFormats","isTuned","tune","setMaxBitrate","Error","_getDefaultPlacementInformation","placementId","placement","_signedAjax","session","_getClientId","_receiveDefaultPlacementInformation","bind","_failedDefaultPlacementInformation","placementInformation","warn","getActivePlacement","getActivePlay","hasActivePlayStarted","started","reportPlayStarted","_startPlay","reportPlayElapsed","seconds","reportPlayCompleted","finally","_receivePlayCompleted","reportPlayStopped","requestSkip","canSkip","_receiveSkip","_failSkip","requestInvalidate","_sendInvalidate","audio_file","_receiveInvalidate","_failInvalidate","retryCount","_receiveStartPlay","can_skip","_failStartPlay","_this3","waitingIfEmpty","currentPlay","_ajax","ajax","_receiveNextPlay","_failedNextPlay","data","max_bitrate","placement_id","station_id","at","crossfade","start_at","_this4","Math","min","canSkipInStation","maybeCanSkip","can","canLike","can_like","likePlay","playId","liked","unlikePlay","dislikePlay","cookieName$1","_sign","request","authorization","btoa","Authorization","extraHeaders","header","hasOwnProperty","ok","statusText","count","event","parameters","_submitEvent","_this5","blobSupport","fixBinary","bin","buf","ArrayBuffer","Uint8Array","charCodeAt","binary","atob","png","Blob","type","URL","createObjectURL","objectUrl","exec","img","Image","onload","revokeObjectURL","onerror","src","hasBlobSupport","DEFAULT_VOLUME","IOS","includes","navigator","platform","userAgent","brokenWebkit","SILENCE","Sound","speaker","loaded","startPosition","endPosition","fadeInSeconds","fadeInStart","fadeInEnd","fadeOutSeconds","fadeOutStart","fadeOutEnd","gain","d","audio","currentTime","paused","duration","readyState","_playSound","pause","_pauseSound","resume","position","_position","_duration","destroy","fadeOut","_destroySound","gainAdjustedVolume","volume","adjusted","pow","Speaker","maxRetries","createAudioContext","AudioCtor","AudioContext","webkitAudioContext","desiredSampleRate","sampleRate","buffer","createBuffer","dummy","createBufferSource","connect","destination","start","disconnect","close","vol","outstandingSounds","audioContext","active","fading","preparing","responses","preloaded","prepareWhenReady","initializeAudio","_createAudio","pwr","_prepare","getSupportedFormats","createElement","canPlayType","_createAudioGainNode","source","createMediaElementSource","gainNode","createGain","Audio","crossOrigin","loop","preload","_addEventListeners","sound","canplaythrough","addEventListener","_onAudioPauseEvent","_onAudioEndedEvent","_onAudioErroredEvent","_onAudioTimeUpdateEvent","_onAudioCanPlay","currentTarget","revoke","_setVolume","awaitingPlayResponse","prepare","audioGroup","currentVolume","calculatedVolume","_debugAudioObject","object","create","optionsAndCallbacks","_preload","ranges","buffered","range","end","activeUrl","logState","label","group","groupEnd","blobUrl","_fetch","attempt","retry","res","text","entries","blob","properMimeTypeBlob","playing","stack","finishedSound","me","pauseAfterPlay","flush","floor","durationRounded","isNaN","round","setVolume","getVolume","supports_html5_storage$1","Player","_restore","simulcast","debug","trimming","normalizeVolume","resumable","crossfadeIn","serverAssignedCrossfade","_stationsPromise","reject","_stationsResolve","_stationsReject","brokenWebkitFormats","reqFormatList","suppFormatList","reqAndSuppFormatList","reqAndSuppFormats","join","_reqFormatList","_suppFormatList","_reqAndSuppFormatList","_reqAndSuppFormats","_onPlayActive","_onPlayStarted","_onPlayCompleted","_onPlaysExhausted","_onPrepareSound","_onPlacement","_onStations","_onStationChanged","player","setMuted","isMuted","_persist","playerState","shallowCopy","activePlay","sessionConfig","_ref","sessionCurrent","_station","_stations","_placement","crossfade_seconds","fadeOutOrAdvance","fadeOnDestroy","_onSoundPlay","_onSoundPause","finish","_onSoundFinish","elapse","_onSoundElapse","replaygain_track_gain","pre_gain","extra","trim_start","trim_end","startReportedToServer","soundCompleted","playStarted","previousPosition","playerWasResumed","withError","play_id","soundCompletedWithError","interval","previousCount","currentCount","updateSimulcast","preparedUrl","isPaused","_this6","ap","prepared","val","like","unlike","dislike","skip","getPosition","getDuration","mutedKey","getStations","_this7","NodeList","thisArg","PlayerView","alertId","durationId","startedPlayback","$el","Element","getElementById","_onPlayPaused","_onPlayResumed","_onPlayStopped","_onPlayLiked","_onPlayUnliked","_onPlayDisliked","_onSkipDenied","_onSuspend","_enableButtonsBasedOnState","displayText","originalDisplayText","querySelector","innerHTML","renderStatus","querySelectorAll","_onStatusClick","button","_onPlayButtonClick","_onPauseButtonClick","_onSkipButtonClick","_onLikeButtonClick","_onDislikeButtonClick","classList","$","arg","formatPlacement","formatPlay","_setLikeStatus","_enablePositionTracker","playerView","setInterval","renderPosition","likes","dislikes","element","add","_disablePositionTracker","clearInterval","renderAlert","track","title","artist","release","formatTime","dur","progress","style","width","millis","asSeconds","secondsPart","minutesPart","alertText","toEnable","toDisable","_iterator","_step","disabled","_iterator2","_step2","_item","classes","METADATA_TIMEOUT","ADVANCE_TIMEOUT","SimulcastPlayer","_speaker","_activeSound","_metadataTimeout","_tryingToPlay","_retries","_setState","baseApiUrl","_streamUrl","hostname","_requestStream","_lastElapsedAt","_elapsed","_scheduleMetadataTimeout","ms","_cancelMetadataTimeout","_onMetadataTimeout","oldElapsed","newlyElapsed","toObject","_logEvents","newState","metadataTimeoutIsNull","tryingToPlay","retries","maxMilliseconds","resetClientId","module","exports"],"sources":["/Users/jarow/Documents/feed-react-js-player/node_modules/feed-media-audio-player/lib/index.js"],"sourcesContent":["'use strict';\n\nvar tinyCookie = require('tiny-cookie');\n\n/* eslint-disable no-console */\nvar enabled = false;\n\nvar log = function log() {\n  var args = Array.prototype.slice.call(arguments);\n  args[0] = Date.now() + ' feed.fm: ' + args[0];\n\n  if (enabled) {\n    console.log.apply(console, args);\n  }\n\n  var historyEntry;\n\n  try {\n    historyEntry = JSON.stringify({\n      ts: new Date(),\n      message: args[0],\n      args: args.slice(1)\n    });\n  } catch (e) {\n    historyEntry = JSON.stringify({\n      ts: new Date(),\n      message: args[0],\n      args: 'truncated'\n    });\n  }\n\n  log.history.push(historyEntry);\n\n  if (history.length > 500) {\n    log.history.shift();\n  }\n};\n\nlog.history = [];\n\nlog.enable = function () {\n  enabled = true;\n};\n\nlog.reset = function () {\n  var oldHistory = log.history;\n  log.history = [];\n  return oldHistory;\n};\n\nfunction addProtocol(url, secure) {\n  // handle '//somewhere.com/' url's\n  if (url.slice(0, 2) === '//') {\n    if (secure === true) {\n      url = 'https:' + url;\n    } else if (secure === false) {\n      url = 'http:' + url;\n    } else if (window.location.protocol.substr(0, 4) === 'http') {\n      url = window.location.protocol + url;\n    } else {\n      url = 'http';\n    }\n  }\n\n  return url;\n}\n/**\n  * The below are adapted from the Underscore library:\n  *     Underscore.js 1.5.2\n  *     http://underscorejs.org\n  *   (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n  *   Underscore may be freely distributed under the MIT license.\n  */\n\nvar idCounter = 0;\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return prefix + id;\n}\nvar nativeIndexOf = Array.prototype.indexOf;\n\nfunction contains(obj, target) {\n  if (obj === null) return false;\n  if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n  return obj.some(function (value) {\n    return value === target;\n  });\n}\n\nfunction uniq(array, isSorted, iterator, context) {\n  if (typeof isSorted === 'function') {\n    context = iterator;\n    iterator = isSorted;\n    isSorted = false;\n  }\n\n  var initial = iterator ? array.map(iterator, context) : array;\n  var results = [];\n  var seen = [];\n  initial.forEach(function (value, index) {\n    if (isSorted ? !index || seen[seen.length - 1] !== value : !contains(seen, value)) {\n      seen.push(value);\n      results.push(array[index]);\n    }\n  });\n  return results;\n}\n\nfunction intersection(alpha, tests) {\n  var retests = tests.map(function (test) {\n    return new RegExp(test);\n  });\n  return uniq(alpha).filter(function (item) {\n    return retests.find(function (other) {\n      return other.test(item);\n    });\n  });\n}\nfunction once(func) {\n  var ran = false,\n      memo;\n  return function () {\n    if (ran) return memo;\n    ran = true;\n    memo = func.apply(this, arguments);\n    func = null;\n    return memo;\n  };\n}\nfunction repeatAfter(delay, max, cb) {\n  delay = delay ? 2 * delay : 200;\n\n  if (delay > max) {\n    delay = max;\n  }\n\n  setTimeout(function () {\n    cb(delay);\n  }, delay);\n}\n\nvar baseUrl = 'https://feed.fm';\nfunction getBaseUrl() {\n  return baseUrl;\n}\nfunction setBaseUrl(url) {\n  baseUrl = addProtocol(url);\n}\n\nvar cookieName = 'cid';\nvar clientPromise;\nvar noDocument = typeof document === 'undefined';\nvar noDocumentClientId = null;\n\nfunction _getStoredCid() {\n  if (noDocument) {\n    return noDocumentClientId;\n  } else {\n    return tinyCookie.getCookie(cookieName);\n  }\n}\n\nfunction _setStoredCid(value) {\n  if (noDocument) {\n    noDocumentClientId = value;\n  } else {\n    tinyCookie.setCookie(cookieName, value, {\n      expires: 3650,\n      path: '/'\n    });\n  }\n}\n\nfunction _deleteStoredCid() {\n  if (noDocument) {\n    noDocumentClientId = null;\n  } else {\n    tinyCookie.removeCookie(cookieName);\n  }\n} // hit the server up for a client id and return it to the callback\n\n\nfunction _requestClientId(onSuccess, delay) {\n  // see if we've got a cookie\n  var clientId = _getStoredCid();\n\n  if (clientId) {\n    return onSuccess(clientId);\n  } else {\n    fetch(getBaseUrl() + '/api/v2/client', {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (response.success) {\n        onSuccess(response.client_id);\n      } else {\n        repeatAfter(delay, 2000, function (newDelay) {\n          // retry until the end of time\n          _requestClientId(onSuccess, newDelay);\n        });\n      }\n    }).catch(function (response) {\n      if (response.status === 403) {\n        try {\n          var fullResponse = JSON.parse(response.responseText);\n          log('error trying to get client id:', fullResponse);\n        } catch (e) {\n          // some other response - fall through and try again\n          log('unknown response for client id request', e.message);\n        }\n      } else {\n        log('unknown client id response status', response.status);\n      }\n\n      repeatAfter(delay, 2000, function (newDelay) {\n        // retry until the end of time\n        _requestClientId(onSuccess, newDelay);\n      });\n    });\n  }\n}\n\nfunction getClientId() {\n  if (!clientPromise) {\n    var localClientPromise = clientPromise = new Promise(function (resolve) {\n      _requestClientId(function (clientId) {\n        if (clientPromise === localClientPromise) {\n          // success!\n          _setStoredCid(clientId);\n\n          resolve(clientId);\n        } else if (clientPromise) {\n          // end user updated the client id while we were waiting for a new one\n          clientPromise.then(function (clientId) {\n            resolve(clientId);\n          });\n        } else {\n          // end user deleted the client id while we were waiting for a new one\n          getClientId().then(function (clientId) {\n            resolve(clientId);\n          });\n        }\n      });\n    });\n  }\n\n  return clientPromise;\n}\nvar getStoredClientId = _getStoredCid;\nvar setStoredClientId = _setStoredCid;\nfunction deleteClientId() {\n  _deleteStoredCid();\n\n  clientPromise = null;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar slice = Array.prototype.slice;\nvar Events = {\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on: function on(name, callback, context) {\n    if (!eventsApi(this, 'on', name, [callback, context]) || !callback) {\n      return this;\n    }\n\n    if (!this._events) {\n      this._events = {};\n    }\n\n    var events = this._events[name] || (this._events[name] = []);\n    events.push({\n      callback: callback,\n      context: context,\n      ctx: context || this\n    });\n    return this;\n  },\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed.\n  once: function once$1(name, callback, context) {\n    if (!eventsApi(this, 'once', name, [callback, context]) || !callback) {\n      return this;\n    }\n\n    var self = this;\n    var once$1 = once(function () {\n      self.off(name, once$1);\n      callback.apply(this, arguments);\n    });\n    once$1._callback = callback;\n    return this.on(name, once$1, context);\n  },\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off: function off(name, callback, context) {\n    var retain, ev, events, names, i, l, j, k;\n\n    if (!this._events || !eventsApi(this, 'off', name, [callback, context])) {\n      return this;\n    }\n\n    if (!name && !callback && !context) {\n      this._events = {};\n      return this;\n    }\n\n    names = name ? [name] : Object.keys(this._events);\n\n    for (i = 0, l = names.length; i < l; i++) {\n      name = names[i];\n\n      if (events = this._events[name]) {\n        // eslint-disable-line no-cond-assign\n        this._events[name] = retain = [];\n\n        if (callback || context) {\n          for (j = 0, k = events.length; j < k; j++) {\n            ev = events[j];\n\n            if (callback && callback !== ev.callback && callback !== ev.callback._callback || context && context !== ev.context) {\n              retain.push(ev);\n            }\n          }\n        }\n\n        if (!retain.length) {\n          delete this._events[name];\n        }\n      }\n    }\n\n    return this;\n  },\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger: function trigger(name) {\n    if (!this._events) {\n      return this;\n    }\n\n    var args = slice.call(arguments, 1);\n\n    if (!eventsApi(this, 'trigger', name, args)) {\n      return this;\n    }\n\n    var events = this._events[name];\n    var allEvents = this._events.all;\n\n    if (events) {\n      triggerEvents(events, args);\n    }\n\n    if (allEvents) {\n      triggerEvents(allEvents, arguments);\n    }\n\n    return this;\n  },\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening: function stopListening(obj, name, callback) {\n    var listeners = this._listeners;\n\n    if (!listeners) {\n      return this;\n    }\n\n    var deleteListener = !name && !callback;\n\n    if (_typeof(name) === 'object') {\n      callback = this;\n    }\n\n    if (obj) {\n      (listeners = {})[obj._listenerId] = obj;\n    }\n    /*jshint forin:false */\n\n\n    for (var id in listeners) {\n      listeners[id].off(name, callback, this);\n\n      if (deleteListener) {\n        delete this._listeners[id];\n      }\n    }\n\n    return this;\n  }\n}; // Regular expression used to split event strings.\n\nvar eventSplitter = /\\s+/; // Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\n\nvar eventsApi = function eventsApi(obj, action, name, rest) {\n  if (!name) {\n    return true;\n  } // Handle event maps.\n\n\n  if (_typeof(name) === 'object') {\n    /*jshint forin:false */\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n\n    return false;\n  } // Handle space separated event names.\n\n\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n\n    return false;\n  }\n\n  return true;\n}; // A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\n\n\nvar triggerEvents = function triggerEvents(events, args) {\n  var ev,\n      i = -1,\n      l = events.length,\n      a1 = args[0],\n      a2 = args[1],\n      a3 = args[2];\n\n  switch (args.length) {\n    case 0:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx);\n      }\n\n      return;\n\n    case 1:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx, a1);\n      }\n\n      return;\n\n    case 2:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx, a1, a2);\n      }\n\n      return;\n\n    case 3:\n      while (++i < l) {\n        (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n      }\n\n      return;\n\n    default:\n      while (++i < l) {\n        (ev = events[i]).callback.apply(ev.ctx, args);\n      }\n\n  }\n};\n\nvar listenMethods = {\n  listenTo: 'on',\n  listenToOnce: 'once'\n}; // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\n\nvar _loop = function _loop() {\n  var method = _Object$keys[_i];\n  var implementation = listenMethods[method];\n\n  Events[method] = function (obj, name, callback) {\n    var listeners = this._listeners || (this._listeners = {});\n    var id = obj._listenerId || (obj._listenerId = uniqueId('l'));\n    listeners[id] = obj;\n\n    if (_typeof(name) === 'object') {\n      callback = this;\n    }\n\n    obj[implementation](name, callback, this);\n    return this;\n  };\n};\n\nfor (var _i = 0, _Object$keys = Object.keys(listenMethods); _i < _Object$keys.length; _i++) {\n  _loop();\n}\n\n/**\n * This class connects to a specific simulcast stream and\n * sends out events to indicate when new songs are starting\n * or when music has stopped playing. This listener has a\n * 'state' that is one of \n * \n *   'idle' - no music is playing\n *   'playing' - a song is actively playing\n *   'paused' - the current song is paused\n *   'music-unavailable' - no music is available for this client\n * \n * events:\n *    play-started - indicates a new song has begun playback, or we've\n *        dropped in on an already playing song\n *    music-unavailable - indicates the listener may not listen to music\n *    music-stopped - indicates that music has stopped streaming. This maps\n *        up to the end of a broadcast, and not a 'pause' in music.\n *    state-changed - indicates the state of the player changed\n * \n * demo: https://jsbin.com/biwogiyewu/edit?html,js,output\n */\n\nvar Listener = /*#__PURE__*/function () {\n  function Listener(uuid) {\n    _classCallCheck(this, Listener);\n\n    Object.assign(this, Events);\n    this._uuid = uuid;\n    this._state = 'idle'; //this._activePlay = null;\n  }\n\n  _createClass(Listener, [{\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n        delete this._timeout;\n      }\n\n      getClientId().then(function (clientId) {\n        _this.onTimeout(clientId);\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n        delete this._timeout;\n      }\n\n      var previousState = this._state;\n      this._state = 'idle';\n      delete this._activePlay;\n\n      if (previousState !== 'idle') {\n        try {\n          this.trigger('state-changed', this._state, previousState);\n        } catch (e) {\n          /* ignore */\n        }\n      }\n    }\n  }, {\n    key: \"onTimeout\",\n    value: function onTimeout(clientId) {\n      var _this2 = this;\n\n      fetch(getBaseUrl() + \"/api/v2/simulcast/\".concat(this._uuid, \"/listen\"), {\n        method: 'POST',\n        body: JSON.stringify({\n          client_id: clientId\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var delay = 5000;\n\n        if (response.success) {\n          var becameIdle = response.state === 'idle' && _this2._state !== 'idle';\n          var previousPlay = _this2._activePlay;\n          var previousState = _this2._state;\n          var state = _this2._state = response.state;\n\n          if (state === 'idle') {\n            delete _this2._activePlay;\n          } else {\n            _this2._activePlay = response.play;\n          }\n\n          if (previousState !== state) {\n            try {\n              _this2.trigger('state-changed', state, previousState);\n            } catch (e) {\n              /* ignore */\n            }\n          }\n\n          if (state === 'idle') {\n            if (becameIdle) {\n              try {\n                _this2.trigger('music-stopped');\n              } catch (e) {\n                /* ignore */\n              }\n            }\n          } else {\n            if (!previousPlay || previousPlay.id !== _this2._activePlay.id) {\n              try {\n                _this2.trigger('play-started', _this2._activePlay);\n              } catch (e) {\n                /* ignore */\n              }\n            }\n\n            if (response.seconds_since_start > 20 && response.play.duration_in_seconds - response.seconds_since_start > 20) {\n              delay = 15000;\n            }\n          }\n        } else {\n          if (response.error && response.error.code === 19) {\n            _this2._state = 'music-unavailable';\n\n            _this2.trigger('music-unavailable'); // don't schedule another update\n\n\n            return;\n          }\n        }\n\n        _this2._timeout = setTimeout(function () {\n          _this2.onTimeout(clientId);\n        }, delay);\n      }).catch(function (response) {\n        if (response.status === 403) {\n          try {\n            var fullResponse = JSON.parse(response.responseText);\n\n            if (fullResponse.error && fullResponse.error.code === 19) {\n              try {\n                _this2._state = 'music-unavailable';\n\n                _this2.trigger('music-unavailable');\n              } catch (e) {\n                /* ignore */\n              }\n\n              return;\n            }\n\n            console.log('unexpected error:', fullResponse);\n          } catch (e) {\n            // some other response - fall through and try again\n            console.log('bad response', e.message);\n          }\n        } else {\n          console.log('odd response', response);\n        }\n\n        _this2._timeout = setTimeout(function () {\n          _this2.onTimeout(clientId);\n        }, 15000);\n      });\n    }\n  }, {\n    key: \"getCurrentState\",\n    value: function getCurrentState() {\n      return this._state;\n    }\n  }, {\n    key: \"getCurrentPlay\",\n    value: function getCurrentPlay() {\n      return this._activePlay;\n    }\n  }]);\n\n  return Listener;\n}();\n\nvar FEED_STATE_KEY = 'feedfm:active';\nvar FEED_ELAPSED_TIME_KEY = 'feedfm:elapsed_time';\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction store(key, value) {\n  if (supports_html5_storage()) {\n    localStorage.setItem(key, value);\n  }\n}\n\nfunction remove(key) {\n  if (supports_html5_storage()) {\n    localStorage.removeItem(key);\n  }\n}\n\nfunction get(key) {\n  if (supports_html5_storage()) {\n    return localStorage.getItem(key);\n  } else {\n    return null;\n  }\n}\n\nfunction persistState(state) {\n  var timestamp = Date.now();\n  var asString = JSON.stringify({\n    state: state,\n    timestamp: timestamp\n  });\n  var stringTimestamp = Date.now(); // update timestamp and store in local storage\n\n  store(FEED_STATE_KEY, asString);\n  var stateTimestamp = Date.now();\n  store(FEED_ELAPSED_TIME_KEY, '0');\n  log('persisted state', {\n    timestamp: timestamp,\n    encodingTime: stringTimestamp - timestamp,\n    storageTime: stateTimestamp - stringTimestamp,\n    state: state\n  });\n}\nfunction persistElapsed(milliseconds) {\n  // save elapsed seconds in current song\n  store(FEED_ELAPSED_TIME_KEY, milliseconds.toString());\n}\nfunction retrieveStateAndElapsed(maxAge) {\n  // pull things out of state, if they're less than maxAge milliseconds old, or null\n  var encoded = get(FEED_STATE_KEY);\n\n  if (encoded) {\n    var persisted = JSON.parse(encoded);\n\n    if (persisted.timestamp + maxAge > Date.now()) {\n      var elapsed = parseFloat(get(FEED_ELAPSED_TIME_KEY), 10);\n      return [persisted.state, elapsed];\n    }\n  }\n\n  return [];\n}\nfunction clearPersistance() {\n  // nuke any stored state\n  remove(FEED_STATE_KEY);\n  remove(FEED_ELAPSED_TIME_KEY);\n}\n\nvar version=\"1.103.1\";\n\n/*\n *  Feed Media Session API\n *\n *  This manages all communication with the server and is the single point\n *  of truth for a client to manage what is actively being played. It\n *  should be created with:\n *\n *  var session = new Feed.Session(token, secret[, options]);\n *\n *  Then you attach event listeners to the session:\n *\n *  session.on('play-active', someHandler);\n *\n *  Then you can optionally set a station:\n *\n *  session.setStationId(stationId);\n *\n *  If any of the above calls are made while we're actively tuning (we've\n *  got an active song or a pending song), then any currently active song\n *  will be marked as 'completed' and a new song will be requested from\n *  the server.\n *\n *  Then you tell the session to start maintaining a queue of \n *  music to play:\n *\n *  session.tune();\n *\n *  The session will now emit the following events:\n *\n *  music-unavailable: if the current user may not listen to music\n *    This check is made every time we try to retrieve a song, and also\n *    on the 'tune()' call.  Once \n *    you get this event, you should assume nothing further will work.\n *  invalid-credentials: the token and secret passed to this function\n *    are not valid.\n *  placement: after we tune in to a placement or station,\n *    this passes on information about the placement we\n *    tuned in to.\n *  stations: after tuning to a specific placement, the server returns a\n *    list of available stations. This is that list.\n *  station-changed: emitted after a 'setStation' call, and passed the\n *    ID of the station and the station object\n *  play-active: when the session has a play ready for playback\n *  play-started: when the active play has started playback (as\n *    a result of a call to reportPlayStarted)\n *  play-completed: when the session has successfully told the server\n *    that the current play has completed, been skipped (after a \n *    call to reportPlayCompleted), or been invalidated\n *  skip-denied: when the session has been told by the server that the\n *    skip cannot be performed (after a call to requestSkip)\n *  plays-exhausted: when the server can find no more music in the\n *    current station that satisfies DMCA constraints (this will\n *    be either the first event after a 'tune' call, or after a\n *    play-completed event). The client must make another call to\n *    tune() to begin pulling in more music.\n *  prepare-sound: this holds a URL of a sound that might be played\n *    next. Clients can start loading the sound in preparation.\n *  forbidden: if an unsatisfiable request is made (such as to advance\n *   in a non-first play station)\n *\n *  Clients that use the session object should tell the session about\n *  the status of the current play as it progresses:\n *\n *  session.reportPlayStarted(): tell the server we have begun playback of the\n *    current song to the end user.\n *  session.reportPlayElapsed(seconds): tell the server how many elapsed seconds\n *    of the song have been played since it started.\n *  session.reportPlayCompleted(): tell the server that we have completed \n *    playing the current song. This will cause the session object\n *    to emit a 'play-completed' event followed by a 'play-active' when\n *    the next song is ready for playback\n *\n *  session.requestSkip(): ask the server if we can skip playback of the current\n *    song. If the skip is denied, a 'skip-denied' event will be triggered,\n *    otherwise a 'play-completed' will be triggered.\n *  session.requestInvalidate(): tell the server that we're unable to play the\n *    current song for some reason, and the server should stop playback\n *    of the song (if started) and give us a new song. The session will\n *    trigger a 'play-completed' event after this call.\n *\n *  Data held by the session can be retrieved with:\n *\n *  session.getActivePlay(): returns the currently active play, if any, or null\n *  session.isTuned(): true if the session has active plays available or is awaiting\n *    plays from the server\n *  session.hasActivePlayStarted(): returns true if the active play is playing now\n *  session.canSkip(): returns true if there is a song being played now and \n *    we believe we can skip it.\n *\n *  Other misc calls:\n *  \n *  session.likePlay(), session.unlikePlay(), session.dislikePlay(): like handling\n *  session.setFormats(formats): comma separated list of audio formats to \n *                               request, i.e.: 'mp3', 'aac', 'aac,mp3'. Defaults to\n *                               'mp3,aac'\n *\n *  The optional 'options' argument passed to the constructor can have the following\n *  attributes:\n *    baseUrl: defines the base host that responds to API calls - defaults\n *       to '//feed.fm'. Really only used with local testing.\n *    simulcast: id of simulcast to broad\n */\n\nvar Session = function Session(token, secret, options) {\n  Object.assign(this, Events); // No token/secret implies we're restoring from a saved state. It would\n  // be best if this class could suspend/restore itself, but things are \n  // so poorly encapsulated now that it isn't worth putting the suspend/restore\n  // in multiple places.\n\n  if (!token || !secret) {\n    return;\n  }\n\n  options = options || {};\n\n  if (options.baseUrl) {\n    setBaseUrl(options.baseUrl);\n  }\n\n  this.config = {\n    remoteLogging: !!options.remoteLogging,\n    // token\n    // secret\n    // placementId\n    // placement\n    // stationId\n    // stations\n    // station\n    formats: 'mp3,aac',\n    maxBitrate: 128,\n    timeOffset: 0,\n    // Represent the active 'play' or null if there is no active play. This should\n    // only be null before the first tune() call or after the server tells us there\n    // is no more music available.\n    current: null,\n\n    /* {\n         play:  play object we're currently playing\n         started: defaults to false\n         canSkip: defaults to false\n         retryCount: number of times we've tried to tell server we started this\n        }, */\n    // Details of any 'POST /play' request we're awaiting a response for. If this\n    // is null, then we're not waiting for the server to give us a play\n    pendingRequest: null,\n\n    /* {\n         url:        url being posted to\n         ajax:       form data we sent to request a play, copied\n                     here so we can retry it if it fails\n         retryCount: number of times we've retried \n       }, */\n    // Once a play has been created and then started, the server will let us\n    // create a new play. This holds a reference to the next play that will\n    // be active on completion of the current play\n    pendingPlay: null // play object we'll start upon completion of current\n    //   sound \n\n  };\n\n  if (token && secret) {\n    this.setCredentials(token, secret);\n  }\n\n  if (options.remoteLogging) {\n    log('remote logging enabled', this.config);\n\n    this._submitLogHistory();\n  }\n};\n\nSession.prototype.setCredentials = function (token, secret) {\n  this.config.token = token;\n  this.config.secret = secret;\n};\n\nSession.prototype.setStationId = function (stationId, advance, secondsOfCrossfade) {\n  // if we haven't received stations, we can't select one\n  if (!this.config.stations) {\n    return;\n  }\n\n  var stringStationId = '' + stationId;\n  var changed = '' + this.config.stationId !== stringStationId;\n\n  if (changed || advance) {\n    var station = this.config.stations.find(function (station) {\n      return '' + station.id === stringStationId;\n    });\n\n    if (station) {\n      this.config.stationId = stationId;\n      this.config.station = station;\n\n      if (changed) {\n        this.trigger('station-changed', stationId, station);\n      } // abort any pending requests or plays\n\n\n      this.config.pendingRequest = null;\n      this.config.pendingPlay = null; // stop playback of any current song, and set\n      // the status to waiting\n\n      this._assignCurrentPlay(null, true); // request the next play\n\n\n      this._requestNextPlay(0, advance, secondsOfCrossfade);\n    }\n  }\n};\n\nSession.prototype.setFormats = function (formats) {\n  this.config.formats = formats; // re-retrieve the next song, since we changed formats\n\n  if (this.isTuned()) {\n    this.tune();\n  }\n};\n\nSession.prototype.setMaxBitrate = function (maxBitrate) {\n  this.config.maxBitrate = maxBitrate;\n}; // tune\n\n\nSession.prototype.tune = function () {\n  if (!this.config.token) {\n    throw new Error('no token set with setCredentials()');\n  }\n\n  if (!this.config.secret) {\n    throw new Error('no secret set with setCredentials()');\n  } // abort any pending requests or plays\n\n\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null; // stop playback of any current song, and set\n  // the status to waiting\n\n  this._assignCurrentPlay(null, true); // pull information in about the placement, followed by\n  // a request for the next play\n\n\n  this._getDefaultPlacementInformation();\n}; // _getDefaultPlacementInformation\n\n\nSession.prototype._getDefaultPlacementInformation = function (delay) {\n  var self = this;\n\n  if (this.config.placementId && this.config.placement && this.config.placement.id === this.config.placementId) {\n    // already have placement info, so kick off request for next play\n    this._requestNextPlay();\n\n    return;\n  } // request placement info from server\n\n\n  log('requesting default placement information from server');\n\n  self._signedAjax(getBaseUrl() + '/api/v2/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      client_id: getStoredClientId()\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.session && response.session.client_id) {\n      setStoredClientId(response.session.client_id);\n    } // client id creation now tied to session, so this next call is superfluous,\n    // and only exists for testing\n\n\n    return self._getClientId().then(function () {\n      return response;\n    });\n  }).then(self._receiveDefaultPlacementInformation.bind(self)).catch(self._failedDefaultPlacementInformation.bind(self, delay));\n};\n\nSession.prototype._receiveDefaultPlacementInformation = function (placementInformation) {\n  if (placementInformation && placementInformation.success && placementInformation.placement) {\n    this.config.placement = placementInformation.placement;\n    this.config.stations = placementInformation.stations;\n    this.config.placementId = placementInformation.placement.id;\n    this.trigger('placement', this.config.placement);\n\n    if (this.config.stations.length > 0) {\n      this.config.stationId = this.config.stations[0].id;\n      this.config.station = this.config.stations[0];\n      this.trigger('station-changed', this.config.stationId, this.config.station);\n    }\n\n    this.trigger('stations', this.config.stations); // kick off request for next play\n\n    this._requestNextPlay();\n  } else {\n    // music is not available to this user for some reason.\n    this.trigger('music-unavailable');\n  }\n};\n\nSession.prototype._failedDefaultPlacementInformation = function (delay, response) {\n  var _this = this;\n\n  if (response.status === 401) {\n    try {\n      var fullResponse = JSON.parse(response.responseText);\n\n      if (fullResponse.error && fullResponse.error.code === 5) {\n        this.trigger('invalid-credentials');\n        return;\n      }\n    } catch (e) {// ignore\n    }\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('error from placement request', response);\n  } // otherwise, try again in a bit\n\n\n  delay = delay ? delay * 2 : 500;\n  setTimeout(function () {\n    _this._getDefaultPlacementInformation(delay);\n  }, delay);\n};\n\nSession.prototype.getActivePlacement = function () {\n  if (this.config.placement) {\n    return this.config.placement;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.getActivePlay = function () {\n  if (this.config.current) {\n    return this.config.current.play;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.isTuned = function () {\n  return this.config.current || this.config.pendingRequest;\n};\n\nSession.prototype.hasActivePlayStarted = function () {\n  return this.config.current && this.config.current.started;\n};\n\nSession.prototype.reportPlayStarted = function () {\n  if (!this.config.current) {\n    throw new Error('attempt to report a play started, but there is no active play');\n  }\n\n  this._startPlay(this.config.current.play);\n};\n\nSession.prototype.reportPlayElapsed = function (seconds) {\n  if (!this.config.current) {\n    throw new Error('attempt to report elapsed play time, but the play hasn\\'t started');\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/elapse', {\n    method: 'POST',\n    body: JSON.stringify({\n      seconds: seconds\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(function (e) {\n    return log('server returned error on elapse call. ignoring', e);\n  });\n};\n\nSession.prototype.reportPlayCompleted = function () {\n  var self = this;\n\n  if (this.config.current && this.config.current.started) {\n    this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/complete', {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      log('play completed returned error - ignoring', err);\n    }).finally(self._receivePlayCompleted.bind(self));\n  } else {\n    log('finish on non-active or playing song');\n    throw new Error('no active or playing song');\n  }\n};\n\nSession.prototype._receivePlayCompleted = function () {\n  if (!this.config.pendingRequest) {\n    log('song finished, and no outstanding request, so playing pendingPlay'); // if we're not waiting for an incoming request, then we must\n    // have the next play queued up, so play it:\n\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n  } else {\n    log('song finished, but we\\'re still waiting for next one to return'); // we're waiting for a request to come in, so kill the current\n    // song and announce that we're waiting\n\n    this._assignCurrentPlay(null, true);\n  }\n};\n\nSession.prototype.reportPlayStopped = function (seconds) {\n  if (this.config.current && this.config.current.started) {\n    this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/elapse', {\n      method: 'POST',\n      body: JSON.stringify({\n        seconds: seconds\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (e) {\n      return log('server returned error on elapse call. ignoring', e);\n    });\n  } // dump any future plays queued up\n\n\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null; // we're not playing anything now, baby!\n\n  this._assignCurrentPlay(null, true);\n};\n\nSession.prototype.requestSkip = function () {\n  var _this2 = this;\n\n  if (!this.hasActivePlayStarted()) {\n    throw new Error('No song playing or started');\n  }\n\n  if (!this.config.current.canSkip) {\n    setTimeout(function () {\n      _this2.trigger('skip-denied');\n    }, 1);\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + this.config.current.play.id + '/skip', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).then(this._receiveSkip.bind(this, this.config.current.play)).catch(this._failSkip.bind(this, this.config.current.play));\n};\n\nSession.prototype.requestInvalidate = function (url) {\n  if (!url) {\n    if (!this.config.current) {\n      throw new Error('No active song to invalidate!');\n    }\n\n    this._sendInvalidate(this.config.current.play);\n  } else if (this.config.current && this.config.current.play.audio_file.url === url) {\n    this._sendInvalidate(this.config.current.play);\n  } else if (this.config.pendingPlay && this.config.pendingPlay.audio_file.url === url) {\n    this._sendInvalidate(this.config.pendingPlay);\n  }\n};\n\nSession.prototype._sendInvalidate = function (play, delay) {\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + play.id + '/invalidate', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).then(this._receiveInvalidate.bind(this, play)).catch(this._failInvalidate.bind(this, delay, play));\n};\n\nSession.prototype._failInvalidate = function (delay, play, response) {\n  var self = this;\n  delay = delay ? delay * 2 : 200;\n\n  if (delay < 3000) {\n    setTimeout(function () {\n      self._sendInvalidate(play);\n    }, delay);\n  } else {\n    log('gave up trying to invalidate play', response);\n  }\n};\n\nSession.prototype._receiveInvalidate = function (play, response) {\n  var self = this;\n  log('invalidate response');\n\n  this._submitLogHistory();\n\n  setTimeout(function () {\n    log('5 second follow up after invalidate');\n\n    self._submitLogHistory();\n  }, 5000);\n\n  if (!response.success) {\n    log('failed invalidate! - technically this is impossible');\n    return;\n  }\n\n  if (!this.config.current || this.config.current.play !== play) {\n    if (play === this.config.pendingPlay) {\n      log('invalidated pending play, queueing up new pending play');\n      this.config.pendingPlay = null;\n\n      this._requestNextPlay();\n    }\n\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('invalidating to song already queued up'); // skip to play already queued up\n\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n  } else {\n    log('invalidating current song');\n\n    this._assignCurrentPlay(null, true);\n\n    if (!this.config.pendingRequest) {\n      log('queueing up new song');\n\n      this._requestNextPlay();\n    }\n  }\n};\n\nSession.prototype._failSkip = function (play) {\n  if (!this.config.current || this.config.current.play !== play) {\n    // not playing this song any more - just ignore it\n    return;\n  } // technically the skip wasn't denied - we just couldn't confirm wether\n  // it was ok, but this is the best we can return at the moment\n\n\n  this.trigger('skip-denied');\n};\n\nSession.prototype._receiveSkip = function (play, response) {\n  if (!this.config.current || this.config.current.play !== play) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed skip!');\n    this.trigger('skip-denied');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('skipping to song already queued up'); // skip to play already queued up\n\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n  } else if (this.config.pendingRequest) {\n    log('skipping to what is queued up'); // we're waiting for a request - so just wait for that to show up\n\n    this._assignCurrentPlay(null, true);\n  } else {\n    log('skipping to what is queued up'); // nothing queued up and nothing being requested - we're outta music!\n\n    this._assignCurrentPlay(null);\n  }\n};\n\nSession.prototype._startPlay = function (play) {\n  if (this.config.current.retryCount > 2) {\n    // fuck it - let the user hear the song\n    this._receiveStartPlay(play, {\n      success: true,\n      can_skip: true\n    });\n  } else {\n    log('telling server we\\'re starting the play', play); // tell the server that we're going to start this song\n\n    this._signedAjax(getBaseUrl() + '/api/v2/play/' + play.id + '/start', {\n      method: 'POST' // TODO: add timeout!\n\n    }).then(function (response) {\n      return response.json();\n    }).then(this._receiveStartPlay.bind(this, play)).catch(this._failStartPlay.bind(this, play));\n  }\n};\n\nSession.prototype._receiveStartPlay = function (play, response) {\n  if (response.success) {\n    if (this.config.current && this.config.current.play === play) {\n      this.config.current.canSkip = response.can_skip;\n      this.config.current.started = true; // since we're ok to start this song, we can start looking for the\n      // next song\n\n      this._requestNextPlay();\n\n      this.trigger('play-started', play);\n    } else {\n      log('received start play, but not waiting any more');\n    }\n  } else {\n    log('received failed start success');\n  }\n};\n\nSession.prototype._failStartPlay = function (play, response) {\n  var _this3 = this;\n\n  var self = this;\n  log('start failed', response);\n\n  this._submitLogHistory();\n\n  setTimeout(function () {\n    log('5 second follow up after start failure');\n\n    self._submitLogHistory();\n  }, 5000); // only process if we're still actually waiting for this\n\n  if (this.config.current && this.config.current.play === play) {\n    if (response && response.status === 403) {\n      try {\n        var fullResponse = JSON.parse(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 20) {\n          // we seem to have missed the response to the original start, so\n          // let's assume the start was good and the song is skippable\n          return this._receiveStartPlay(play, {\n            success: true,\n            can_skip: true\n          });\n        }\n      } catch (e) {\n        // ignore\n        log('unable to parse start play response', e.message);\n      }\n    }\n\n    log('request failed - trying again in 1 second', response);\n    this.config.current.retryCount++; // wait a second and try again\n\n    setTimeout(function () {\n      _this3._startPlay(play);\n    });\n  } else {\n    log('startPlay failed, but we don\\'t care any more');\n  }\n}; // start playing the given song\n\n\nSession.prototype._assignCurrentPlay = function (play, waitingIfEmpty) {\n  // remove any existing play\n  if (this.config.current) {\n    var currentPlay = this.config.current.play;\n    this.config.current = null;\n    this.trigger('play-completed', currentPlay);\n  }\n\n  if (play === null) {\n    // nothing to play right now\n    if (waitingIfEmpty) {\n      //this.config.status = 'waiting';\n      log('nothing to play... waiting');\n    } else {\n      //this.config.status = 'idle';\n      log('nothing to play from the current station');\n      this.trigger('plays-exhausted');\n    }\n  } else {\n    // we're starting this song, so note that\n    this.config.current = {\n      play: play,\n      canSkip: false,\n      started: false,\n      retryCount: 0\n    }; //this.config.status = 'active';\n\n    log('activated new song');\n    this.trigger('play-active', play);\n  }\n};\n\nSession.prototype._requestNextPlay = function (delay, advance, secondsOfCrossfade) {\n  var self = this;\n\n  self._getClientId().then(function (clientId) {\n    if (self.config.pendingRequest) {\n      if (!delay) {\n        log('already waiting for a request to finish');\n        return;\n      } else if (delay > 60000) {\n        log('giving up on retrieving next play'); // we already retried this - let's give up\n\n        self.config.pendingRequest = null;\n\n        if (self.config.current === null) {\n          // we're not playing anything, so we're waiting. \n          // set assign play to null again to trigger empty/idle\n          self._assignCurrentPlay(null);\n        }\n\n        return;\n      } else {\n        log('retrying pending request'); // retry the request\n\n        self.config.pendingRequest.retryCount++;\n        var _ajax = self.config.pendingRequest.ajax;\n\n        self._signedAjax(self.config.pendingRequest.url, _ajax).then(function (response) {\n          return response.json();\n        }).then(self._receiveNextPlay.bind(self, _ajax)).catch(self._failedNextPlay.bind(self, delay, _ajax));\n\n        return;\n      }\n    } else {\n      // create a new request\n      var data = {\n        formats: self.config.formats,\n        client_id: clientId,\n        max_bitrate: self.config.maxBitrate,\n        secure: true\n      };\n\n      if (self.config.placementId) {\n        data.placement_id = self.config.placementId;\n      }\n\n      if (self.config.stationId) {\n        data.station_id = self.config.stationId;\n      }\n\n      if (advance) {\n        data.at = advance;\n\n        if (secondsOfCrossfade) {\n          data.crossfade = secondsOfCrossfade;\n        }\n      }\n\n      var ajax = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      self.config.pendingRequest = {\n        url: getBaseUrl() + '/api/v2/play',\n        ajax: ajax,\n        retryCount: 0\n      }; // request new play from server\n\n      log('requesting new play from server', ajax);\n\n      self._signedAjax(getBaseUrl() + '/api/v2/play', ajax).then(function (response) {\n        return response.json();\n      }).then(self._receiveNextPlay.bind(self, ajax)).catch(self._failedNextPlay.bind(self, delay, ajax));\n    }\n  });\n}; // we received a song to play from the server\n\n\nSession.prototype._receiveNextPlay = function (ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && this.config.pendingRequest.ajax === ajax) {\n    // this isn't pending any more\n    this.config.pendingRequest = null;\n\n    if (response.success) {\n      this.trigger('prepare-sound', response.play.audio_file.url, response.play.start_at, response.play.id);\n\n      if (this.config.current) {\n        log('received play, but we\\'re already playing, so queueing up', response.play); // play this when the current song is complete\n\n        this.config.pendingPlay = response.play;\n      } else {\n        log('received play and no current song, making active now', response.play); // start playing this right now, since nothing else is playing\n\n        this._assignCurrentPlay(response.play);\n      }\n    } else if (response.error && response.error.code === 9) {\n      if (this.config.current) {\n        log('ran out of music to play, but we\\'re already playing');\n        this.config.pendingPlay = null;\n      } else {\n        log('ran out of music, and nothing playing now');\n        this.trigger('plays-exhausted');\n      }\n    } else if (response.error && response.error.code === 6) {\n      this.trigger('forbidden', response.error.message);\n    } else {\n      log('unsuccessful response', response);\n    }\n  } else {\n    log('nextPlay succeeded, but we don\\'t care');\n  }\n}; // server returned an error when we requested the next song\n\n\nSession.prototype._failedNextPlay = function (delay, ajax, response) {\n  var _this4 = this;\n\n  log('next play failed', response);\n\n  this._submitLogHistory();\n\n  setTimeout(function () {\n    log('5 second follow up after next play failure');\n\n    _this4._submitLogHistory();\n  }, 5000); // only process if we're still actually waiting for this\n\n  if (this.config.pendingRequest && this.config.pendingRequest.ajax === ajax) {\n    if (response && response.status === 403) {\n      try {\n        var fullResponse = JSON.parse(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 19) {\n          // user isn't in the US any more, so let the call fail\n          this.trigger('music-unavailable', fullResponse.error.message); // legacy:\n\n          this.trigger('not-in-us', fullResponse.error.message);\n          return;\n        }\n      } catch (e) {\n        // some other response - fall through and try again\n        log('problem parsing 403 response', e.message);\n      }\n    }\n\n    delay = Math.min(delay ? delay * 2 : 500, 2000);\n    log('request failed - trying again after ' + delay + 'ms');\n    setTimeout(function () {\n      _this4._requestNextPlay(delay);\n    }, delay);\n  } else {\n    log('nextPlay failed, but we don\\'t care');\n  }\n};\n\nSession.prototype.canSkipInStation = function () {\n  return !(this.config.station && this.config.station.can_skip === false);\n};\n/**\n * @returns {boolean} true if the user can skip the current song\n */\n\n\nSession.prototype.maybeCanSkip = function () {\n  return this.canSkip();\n};\n/**\n * @returns {boolean} true if the user can skip the current song\n */\n\n\nSession.prototype.canSkip = function () {\n  // you can probably skip unless we've explicitly disallowed it at the station or current song level\n  var can = this.canSkipInStation() && this.config.current && this.config.current.started && this.config.current.canSkip;\n  return !!can;\n};\n/**\n * @returns {boolean} true if the user can like the current song\n */\n\n\nSession.prototype.canLike = function () {\n  var response = !(this.config.station && this.config.station.can_like === false);\n  return response;\n};\n\nSession.prototype.likePlay = function (playId) {\n  if (!this.canLike()) {\n    // technically, this play could be from a different station, but we're not tracking\n    // that right now... so let's just assume it is in the current station.\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + playId + '/like', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return log('server returned error on like call. ignoring', e);\n  });\n\n  if (this.config.current && this.config.current.play.id === playId) {\n    this.config.current.play.liked = true;\n  }\n};\n\nSession.prototype.unlikePlay = function (playId) {\n  if (!this.canLike()) {\n    // technically, this play could be from a different station, but we're not tracking\n    // that right now... so let's just assume it is in the current station.\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + playId + '/like', {\n    method: 'DELETE'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return log('server returned error on unlike call. ignoring', e);\n  });\n\n  if (this.config.current && this.config.current.play.id === playId) {\n    delete this.config.current.play['liked'];\n  }\n};\n\nSession.prototype.dislikePlay = function (playId) {\n  if (!this.canLike()) {\n    // technically, this play could be from a different station, but we're not tracking\n    // that right now... so let's just assume it is in the current station.\n    return;\n  }\n\n  this._signedAjax(getBaseUrl() + '/api/v2/play/' + playId + '/dislike', {\n    method: 'POST'\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return log('server returned error on invalidate call. ignoring', e);\n  });\n\n  if (this.config.current && this.config.current.play.id === playId) {\n    this.config.current.play.liked = false;\n  }\n};\n\nvar cookieName$1 = 'cid';\n\nSession.prototype._getStoredCid = function () {\n  return tinyCookie.getCookie(cookieName$1);\n};\n\nSession.prototype._setStoredCid = function (value) {\n  tinyCookie.setCookie(cookieName$1, value, {\n    expires: 3650,\n    path: '/'\n  });\n};\n\nSession.prototype._deleteStoredCid = function () {\n  tinyCookie.removeCookie(cookieName$1);\n};\n\nSession.prototype._sign = function (request) {\n  var authorization;\n\n  if (!request) {\n    request = {};\n  } // use Basic auth for HTTPS\n\n\n  authorization = 'Basic ' + btoa(this.config.token + ':' + this.config.secret);\n\n  if (request.headers) {\n    request.headers['Authorization'] = authorization;\n  } else {\n    request.headers = {\n      Authorization: authorization\n    };\n  }\n\n  request.headers['X-Feed-SDK'] = version + ' js';\n\n  if (this.extraHeaders) {\n    for (var header in this.extraHeaders) {\n      // eslint-disable-next-line\n      if (this.extraHeaders.hasOwnProperty(header)) {\n        request.headers[header] = this.extraHeaders[header];\n      }\n    }\n  }\n\n  return request;\n};\n\nSession.prototype._signedAjax = function (url, request) {\n  var self = this;\n  return self._ajax(url, self._sign(request)).then(function (response) {\n    if (!response.ok) {\n      throw new Error('server returned error ' + response.status + ': ' + response.statusText);\n    }\n\n    return response;\n  });\n};\n\nSession.prototype._ajax = function (url, request) {\n  return fetch(url, request);\n};\n\nSession.prototype._submitLogHistory = function () {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var session = this;\n  var history = log.history;\n  log.history = [];\n\n  if (!this.config.remoteLogging) {\n    return;\n  }\n\n  return this._signedAjax(getBaseUrl() + '/api/v2/session/event', {\n    method: 'POST',\n    body: JSON.stringify({\n      event: 'playerHistory',\n      parameters: history\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function () {\n    if (count < 2) {\n      setTimeout(function () {\n        log.history = history.concat(['failed log report attempt, try #' + count], log.history);\n\n        session._submitLogHistory(count + 1);\n      }, 5000);\n    }\n  });\n};\n\nSession.prototype._submitLogHistory = function () {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var session = this;\n  var history = log.history;\n  log.history = [];\n\n  if (!this.config.remoteLogging) {\n    return;\n  }\n\n  return this._signedAjax(getBaseUrl() + '/api/v2/session/event', {\n    method: 'POST',\n    body: JSON.stringify({\n      event: 'playerHistory',\n      parameters: history\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(function () {\n    if (count < 2) {\n      setTimeout(function () {\n        log.history = history.concat(['failed log report attempt, try #' + count], log.history);\n\n        session._submitLogHistory(count + 1);\n      }, 5000);\n    }\n  });\n};\n\nSession.prototype._submitEvent = function (name, parameters) {\n  var _this5 = this;\n\n  var count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var session = this;\n  return this._getClientId().then(function (clientId) {\n    return _this5._signedAjax(getBaseUrl() + '/api/v2/session/event', {\n      method: 'POST',\n      body: JSON.stringify({\n        event: name,\n        client_id: clientId,\n        parameters: JSON.stringify(parameters)\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }).catch(function () {\n    if (count < 2) {\n      setTimeout(function () {\n        log.history = history.concat(['failed event submission, try #' + count], log.history);\n\n        session._submitLogHistory(count + 1);\n      }, 5000);\n    }\n  });\n};\n\nSession.prototype._getClientId = function () {\n  return getClientId();\n};\n\n/**\n * Test to see if browser supports blob URLs\n * \n * adapted from https://github.com/ssorallen/blob-feature-check/blob/master/blob-feature-check.js\n **/\nvar blobSupport = false;\n\nfunction fixBinary(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nvar binary = fixBinary(atob('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAAAAAA6fptVAAAACklEQVR4nGP6DwABBQECz6AuzQAAAABJRU5ErkJggg=='));\nvar png = new Blob([binary], {\n  type: 'image/png'\n});\n\ntry {\n  if (URL && URL.createObjectURL) {\n    var objectUrl = URL.createObjectURL(png);\n\n    if (/^blob:/.exec(objectUrl) !== null) {\n      var img = new Image();\n\n      img.onload = function () {\n        blobSupport = true;\n        URL.revokeObjectURL(objectUrl);\n      };\n\n      img.onerror = function () {\n        blobSupport = false;\n      };\n\n      img.src = objectUrl;\n    }\n  }\n} catch (e) {\n  /* ignore - no blob support */\n}\n\nvar hasBlobSupport = (function () {\n  return blobSupport;\n});\n\nvar DEFAULT_VOLUME = 1.0;\nvar IOS = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection\n|| navigator.userAgent.includes('Mac') && 'ontouchend' in document;\nvar brokenWebkit = IOS && /OS 13_[543210]/i.test(navigator.userAgent);\nvar SILENCE = IOS ? 'https://u9e9h7z5.map2.ssl.hwcdn.net/feedfm-audio/250-milliseconds-of-silence.mp3' : 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA'; //const SILENCE = 'https://dgase5ckewowv.cloudfront.net/feedfm-audio/1573592316-88123.m4a';\n\nvar Sound = function Sound(speaker, options, id, url) {\n  var obj = Object.assign(this, Events);\n  obj.id = id; //url = url.replace('u9e9h7z5.map2.ssl.hwcdn.net', 's3.amazonaws.com');\n\n  obj.url = url;\n  obj.speaker = speaker;\n  obj.loaded = false;\n\n  if (options) {\n    this.startPosition = +options.startPosition;\n    this.endPosition = +options.endPosition;\n    this.fadeInSeconds = +options.fadeInSeconds;\n\n    if (this.fadeInSeconds) {\n      this.fadeInStart = this.startPosition ? this.startPosition / 1000 : 0;\n      this.fadeInEnd = this.fadeInStart + this.fadeInSeconds;\n    } else {\n      this.fadeInStart = 0;\n      this.fadeInEnd = 0;\n    }\n\n    this.fadeOutSeconds = +options.fadeOutSeconds;\n\n    if (this.fadeOutSeconds) {\n      if (this.endPosition) {\n        this.fadeOutStart = this.endPosition / 1000 - this.fadeOutSeconds;\n        this.fadeOutEnd = this.endPosition / 1000;\n      } else {\n        this.fadeOutStart = 0;\n        this.fadeOutEnd = 0;\n      }\n    }\n\n    for (var _i = 0, _arr = ['play', 'pause', 'finish', 'elapse']; _i < _arr.length; _i++) {\n      var ev = _arr[_i];\n\n      if (ev in options) {\n        obj.on(ev, options[ev]);\n      }\n    }\n\n    this.gain = options.gain || 0;\n  } else {\n    this.gain = 0;\n  }\n\n  return obj;\n};\n\nfunction d(audio) {\n  return ' src = ' + audio.src + ', time = ' + audio.currentTime + ', paused = ' + audio.paused + ', duration = ' + audio.duration + ', readyState = ' + audio.readyState;\n}\n\nSound.prototype = {\n  play: function play() {\n    log('sound ' + this.id + ' play');\n    return this.speaker._playSound(this);\n  },\n  // pause playback of the current sound clip\n  pause: function pause() {\n    log('sound ' + this.id + ' pause');\n    return this.speaker._pauseSound(this);\n  },\n  // resume playback of the current sound clip\n  resume: function resume() {\n    log('sound ' + this.id + ' resume');\n    return this.speaker._playSound(this);\n  },\n  // elapsed number of milliseconds played\n  position: function position() {\n    //log(this.id + ' sound position');\n    return this.speaker._position(this);\n  },\n  // duration in milliseconds of the song\n  // (this may change until the song is full loaded)\n  duration: function duration() {\n    //log(this.id + ' sound duration');\n    return this.speaker._duration(this);\n  },\n  // stop playing the given sound clip, unload it, and disable events\n  // note that no further events will be sent from this sound\n  // (so no 'finish' event, in particular)\n  destroy: function destroy(fadeOut) {\n    log('sound ' + this.id + ' destroy' + (fadeOut ? ' (with fade)' : ''));\n\n    this.speaker._destroySound(this, fadeOut);\n  },\n  gainAdjustedVolume: function gainAdjustedVolume(volume) {\n    if (!this.gain) {\n      return volume / 100;\n    }\n\n    var adjusted = Math.max(Math.min(volume / 100 * (50 * Math.pow(10, this.gain / 20)), 100), 0) / 100; //log('gain adjustment is ' + this.gain + ', and final adjusted volume is ' + adjusted);\n\n    return adjusted;\n  }\n};\n/**\n * Create new speaker object. Add event handling to it.\n * \n * @returns Speaker\n */\n\nvar Speaker = function Speaker(options) {\n  if (options && options.maxRetries) {\n    this.maxRetries = options.maxRetries;\n  }\n\n  return Object.assign(this, Events);\n}; // exports with this version of Javacript isn't working, so...\n\n\nSpeaker.IOS = IOS;\nSpeaker.brokenWebkit = brokenWebkit;\n\nfunction createAudioContext() {\n  var AudioCtor = window.AudioContext || window.webkitAudioContext;\n  var desiredSampleRate = 44100;\n  var context = new AudioCtor(); // Check if hack is necessary. Only occurs in iOS6+ devices\n  // and only when you first boot the iPhone, or play a audio/video\n  // with a different sample rate\n\n  if (context.sampleRate !== desiredSampleRate) {\n    var buffer = context.createBuffer(1, 1, desiredSampleRate);\n    var dummy = context.createBufferSource();\n    dummy.buffer = buffer;\n    dummy.connect(context.destination);\n    dummy.start(0);\n    dummy.disconnect();\n    context.close(); // dispose old context\n\n    context = new AudioCtor();\n  } //  despite being in the moz docs, this doesn't work:\n  //  if (context.state !== 'running') {\n  //    throw new Error('Initial playback was not started in response to a user interaction!', context.state);\n  //  }\n\n\n  return context;\n}\n\nSpeaker.prototype = {\n  vol: 100,\n  // 0..100\n  outstandingSounds: {},\n  // Sound instances that have not yet been destroyed\n  audioContext: null,\n  // for mobile safari volume adjustment\n  active: null,\n  // active audio element, sound, and gain node\n  fading: null,\n  // fading audio element, sound, and gain node\n  preparing: null,\n  // preparing audio element, sound, and gain node\n  responses: null,\n  // array of response headers from preloading\n  maxRetries: 10,\n  // max number of times to retry preloading a song\n  // each of the above look like:\n  // {\n  //   audio: an HTML Audio element (created during initializeAudio() and reused)\n  //   sound: refers to Sound object whose URL has been assigned to 'audio.src' and\n  //          audio.play() has successfully returned.\n  //   gain: AudioGainNode for apple\n  //   volume: relative volume of this sound (0..1),\n  //   canplaythrough: boolean indicating if the 'canplaythrough' event has been\n  //         triggered for this URL\n  // }\n  //\n  // note that when audio.src is not SILENCE, and sound is null, we're waiting for\n  // a return from audio.play(). If the audio.src is changed, or audio.pause() is called\n  // before audio.play() returns, chrome will throw an error!\n  //\n  // When a sound is started, it is thrown into preparing.audio.src, then 'preparing' and\n  // 'active' are swapped, then active.audio.play() is called.\n  //\n  // When a sound has completed playback or been destroyed, the sound property is set\n  // to null, the audio is paused, and audio.src is set to SILENCE.\n  // If the browser supports URL.objectToURL(), we try to load audio with fetch and\n  // then pass the blob URL to the audio element.\n  preloaded: null,\n\n  /*\n  { \n    url,             // url we are trying to load manually (will not be null)\n    blobUrl: null  // blob url for URL above, or null if not loaded yet\n  },\n  */\n  // Fallback for preloading if the browser does not support URL.objectToURL()\n  prepareWhenReady: null,\n  // { url, start }\n  initializeAudio: function initializeAudio() {\n    // On mobile devices, we need to kick off playback of a sound in\n    // response to a user event. This does that.\n    if (this.active === null) {\n      log('initializing for mobile');\n\n      try {\n        throw new Error('initialize check');\n      } catch (e) {\n        log('initialize audio called from', e);\n      }\n\n      this.audioContext = createAudioContext();\n      this.active = this._createAudio(SILENCE);\n      this.fading = this._createAudio(SILENCE);\n      var pwr = this.prepareWhenReady;\n\n      if (pwr) {\n        this.preparing = this._createAudio(pwr.url);\n\n        this._prepare(pwr.url, pwr.startPosition);\n      } else {\n        this.preparing = this._createAudio(SILENCE);\n      }\n    } else {\n      log('mobile already initialized');\n    }\n  },\n  getSupportedFormats: function getSupportedFormats() {\n    if (document.createElement('audio').canPlayType('audio/aac')) {\n      return 'mp3,aac';\n    } else {\n      return 'mp3';\n    }\n  },\n  _createAudioGainNode: function _createAudioGainNode(audio) {\n    var source = this.audioContext.createMediaElementSource(audio);\n    var gainNode = this.audioContext.createGain();\n    gainNode.gain.value = DEFAULT_VOLUME;\n    source.connect(gainNode);\n    gainNode.connect(this.audioContext.destination);\n    return gainNode.gain;\n  },\n  _createAudio: function _createAudio(url) {\n    var DEFAULT_VOLUME = 1.0;\n    var audio = new Audio(url);\n    audio.crossOrigin = 'anonymous';\n    audio.loop = false;\n    audio.preload = 'auto';\n    audio.volume = DEFAULT_VOLUME;\n\n    this._addEventListeners(audio); // apple volume adjustment\n\n\n    var gain = null;\n\n    if (Speaker.IOS && !brokenWebkit) {\n      gain = this._createAudioGainNode(audio);\n    }\n\n    return {\n      audio: audio,\n      sound: null,\n      gain: gain,\n      volume: DEFAULT_VOLUME,\n      canplaythrough: false\n    };\n  },\n  _addEventListeners: function _addEventListeners(audio) {\n    audio.addEventListener('pause', this._onAudioPauseEvent.bind(this));\n    audio.addEventListener('ended', this._onAudioEndedEvent.bind(this));\n    audio.addEventListener('error', this._onAudioErroredEvent.bind(this));\n    audio.addEventListener('timeupdate', this._onAudioTimeUpdateEvent.bind(this));\n    audio.addEventListener('canplaythrough', this._onAudioCanPlay.bind(this));\n    audio.addEventListener('canplay', function (event) {\n      log('can play!', event.currentTarget.src);\n    }); //this._debugAudioObject(audio);\n  },\n  _onAudioCanPlay: function _onAudioCanPlay(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    log('can play through!', audio.src);\n\n    if (audio === this.preparing.audio) {\n      log('preparing file can play through', audio.src);\n      this.preparing.canplaythrough = true;\n      this.trigger('prepared', audio.src, true);\n    }\n  },\n  _onAudioPauseEvent: function _onAudioPauseEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio !== this.active.audio || audio.currentTime === audio.duration) {\n      return;\n    }\n\n    if (!this.active.sound) {\n      log('active audio pause, but no matching sound');\n      return;\n    }\n\n    this.active.sound.trigger('pause');\n  },\n  _onAudioEndedEvent: function _onAudioEndedEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fading.audio) {\n      revoke(audio);\n      audio.src = SILENCE;\n      this.fading.sound = null;\n      return;\n    }\n\n    if (audio !== this.active.audio) {\n      return;\n    }\n\n    if (!this.active.sound) {\n      log('active audio ended, but no matching sound', audio.src);\n      return;\n    }\n\n    log('active audio ended');\n    var sound = this.active.sound;\n    this.active.sound = null;\n    sound.trigger('finish');\n  },\n  _onAudioErroredEvent: function _onAudioErroredEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fading.audio) {\n      revoke(audio);\n      audio.src = SILENCE;\n      this.fading.sound = null;\n      return;\n    }\n\n    if (audio !== this.active.audio) {\n      return;\n    }\n\n    if (!this.active.sound) {\n      log('active audio errored, but no matching sound', audio.src);\n      return;\n    }\n\n    log('active audio errored', event.error);\n    var sound = this.active.sound;\n    this.active.sound = null;\n    sound.trigger('finish', event.error);\n  },\n  _onAudioTimeUpdateEvent: function _onAudioTimeUpdateEvent(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fading.audio && this.fading.sound) {\n      if (this.fading.sound.endPosition && audio.currentTime >= this.fading.sound.endPosition / 1000) {\n        this.fading.sound = null;\n        revoke(this.fading.audio);\n        this.fading.audio.src = SILENCE;\n      } else {\n        this._setVolume(this.fading);\n      }\n\n      return;\n    }\n\n    if (audio !== this.active.audio) {\n      return;\n    }\n\n    if (!this.active.sound || this.active.sound.awaitingPlayResponse) {\n      // got an elapse event before the play() succeeded\n      return;\n    }\n\n    if (this.active.sound.endPosition && this.active.sound.endPosition / 1000 <= audio.currentTime) {\n      // song reached end of play\n      var sound = this.active.sound;\n      this.active.sound = null;\n      revoke(this.active.audio);\n      this.active.audio.src = SILENCE;\n      sound.trigger('finish');\n    } else if (this.active.sound.fadeOutEnd && audio.currentTime >= this.active.sound.fadeOutStart) {\n      // song hit start of fade out\n      this._setVolume(this.active); // active becomes fading, and fading becomes active\n\n\n      var fading = this.fading;\n      this.fading = this.active;\n      this.active = fading;\n      this.active.sound = null; // not used any more\n      // pretend the song finished\n\n      this.fading.sound.trigger('finish');\n    } else {\n      this._setVolume(this.active);\n\n      this.active.sound.trigger('elapse');\n    }\n\n    if (this.prepareWhenReady) {\n      // we've got something we want to load. check if we've loaded \n      // enough of the current song that we can start loading next song.\n      this.prepare(this.prepareWhenReady.url, this.prepareWhenReady.startPosition);\n    }\n  },\n  _setVolume: function _setVolume(audioGroup, sound) {\n    if (!sound) {\n      sound = audioGroup.sound;\n    }\n\n    var currentTime = audioGroup.audio.currentTime;\n    var currentVolume = audioGroup.volume;\n    var calculatedVolume = sound.gainAdjustedVolume(this.vol);\n\n    if (sound.fadeInStart !== sound.fadeInEnd && currentTime < sound.fadeInStart) {\n      calculatedVolume = 0;\n      log('pre-fade-in volume is 0');\n    } else if (sound.fadeInStart !== sound.fadeInEnd && currentTime >= sound.fadeInStart && currentTime <= sound.fadeInEnd) {\n      // ramp up from 0 - 100%\n      calculatedVolume = (currentTime - sound.fadeInStart) / (sound.fadeInEnd - sound.fadeInStart) * calculatedVolume;\n      log('ramping ▲ volume', {\n        currentTime: currentTime,\n        currentVolume: currentVolume,\n        calculatedVolume: calculatedVolume,\n        sound: sound\n      });\n    } else if (sound.fadeOutStart !== sound.fadeOutEnd && currentTime > sound.fadeOutEnd) {\n      calculatedVolume = 0;\n      log('post-fade-out volume is 0');\n    } else if (sound.fadeOutStart !== sound.fadeOutEnd && currentTime >= sound.fadeOutStart && currentTime <= sound.fadeOutEnd) {\n      // ramp down from 100% to 0\n      calculatedVolume = (1 - (currentTime - sound.fadeOutStart) / (sound.fadeOutEnd - sound.fadeOutStart)) * calculatedVolume;\n      log('ramping ▼ volume', {\n        currentTime: currentTime,\n        currentVolume: currentVolume,\n        calculatedVolume: calculatedVolume,\n        sound: sound\n      });\n    }\n\n    if (currentVolume !== calculatedVolume) {\n      if (Speaker.IOS) {\n        if (!brokenWebkit) {\n          audioGroup.gain.value = calculatedVolume;\n        }\n      } else {\n        audioGroup.audio.volume = calculatedVolume;\n      }\n\n      audioGroup.volume = calculatedVolume;\n    }\n  },\n  _debugAudioObject: function _debugAudioObject(object) {\n    var events = ['abort', 'load', 'loadend', 'loadstart', 'loadeddata', 'loadedmetadata', 'canplay', 'canplaythrough', 'seeked', 'seeking', 'stalled', 'timeupdate', 'volumechange', 'waiting', 'durationchange', 'progress', 'emptied', 'ended', 'play', 'pause', 'error'];\n    var speaker = this;\n\n    for (var i = 0; i < events.length; i++) {\n      object.addEventListener(events[i], function (event) {\n        var audio = event.currentTarget;\n        var name = audio === speaker.active.audio ? 'active' : audio === speaker.preparing.audio ? 'preparing' : 'fading';\n        log(name + ': ' + event.type);\n        log('    active: ' + d(speaker.active.audio));\n        log('    preparing: ' + d(speaker.preparing.audio));\n        log('    fading: ' + d(speaker.fading.audio));\n\n        if (audio.src === SILENCE) {\n          return;\n        }\n      });\n    }\n  },\n  // Create and return new sound object. This throws the song into\n  // the preparing audio instance.\n  create: function create(url, optionsAndCallbacks) {\n    var id = uniqueId('feed-play-');\n    var sound = new Sound(this, optionsAndCallbacks, id, url);\n    log('created play ' + id + ' (' + url + ')', optionsAndCallbacks);\n    this.outstandingSounds[sound.id] = sound; // start loading sound, if we can\n    //this.prepare(url, optionsAndCallbacks.startPosition);\n\n    return sound;\n  },\n\n  /**\n   * This function checks to see if we can prepare the given audio. \n   * If it believes we can, it calls _prepare to put the audio in the\n   * prepared audio element and actually prepare it. If it doesn't \n   * believe we can, it makes a note of what we want prepared.\n   * \n   * @param {string} url \n   * @param {number} startPosition?\n   * @returns true if the song is already loaded up and ready to play\n   */\n  prepare: function prepare(url) {\n    var startPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!this.active || !this.active.audio) {\n      if (hasBlobSupport()) {\n        log('pre-loading audio', {\n          url: url\n        });\n        return this._preload(url);\n      } else {\n        log('saving url to prepare when audio is initialized', {\n          url: url,\n          startPosition: startPosition\n        });\n        this.prepareWhenReady = {\n          url: url,\n          startPosition: startPosition\n        };\n        return false;\n      }\n    }\n\n    var ranges = this.active.audio.buffered;\n    var range = ranges.length > 0 && ranges.end(ranges.length - 1);\n\n    if (range >= this.active.audio.duration) {\n      log('active song has loaded enough, so preparing', url);\n\n      if (hasBlobSupport()) {\n        return this._preload(url);\n      } else {\n        return this._prepare(url, startPosition);\n      }\n    } else if (this.active.audio.src === SILENCE) {\n      log('preparing over silence');\n\n      if (hasBlobSupport()) {\n        return this._preload(url);\n      } else {\n        return this._prepare(url, startPosition);\n      }\n    } // still loading primary audio - so hold off for now\n\n\n    log('still loading primary, so waiting to do active prepare', {\n      activeUrl: this.active.audio.src,\n      range: range\n    });\n    this.prepareWhenReady = {\n      url: url,\n      startPosition: startPosition\n    };\n    return false;\n  },\n\n  /* eslint-disable no-console */\n  logState: function logState(label) {\n    // local testing:\n    console.group('speaker: ' + (label || ''));\n\n    if (!this.active) {\n      console.group('active');\n      console.log('uninitialized');\n      console.groupEnd();\n      console.group('preparing');\n      console.log('uninitialized');\n      console.groupEnd();\n      console.group('fading');\n      console.log('uninitialized');\n      console.groupEnd();\n    } else {\n      console.group('active');\n      console.log(\"audio.src: \".concat(this.active.audio.src));\n      console.log(\"audio.paused: \".concat(this.active.audio.paused));\n      console.log(\"sound: \".concat(this.active.sound ? this.active.sound.id : 'NULL'));\n      console.log(\"volume: \".concat(this.active.volume));\n      console.groupEnd();\n      console.group('preparing');\n      console.log(\"audio.src: \".concat(this.preparing.audio.src));\n      console.log(\"audio.paused: \".concat(this.preparing.audio.paused));\n      console.log(\"sound: \".concat(this.preparing.sound ? this.preparing.sound.id : 'NULL'));\n      console.log(\"volume: \".concat(this.preparing.volume));\n      console.groupEnd();\n      console.group('fading');\n      console.log(\"audio.src: \".concat(this.fading.audio.src));\n      console.log(\"audio.paused: \".concat(this.fading.audio.paused));\n      console.log(\"sound: \".concat(this.fading.sound ? this.fading.sound.id : 'NULL'));\n      console.log(\"volume: \".concat(this.fading.volume));\n      console.groupEnd();\n    }\n\n    console.group('outstanding sounds');\n\n    for (var id in this.outstandingSounds) {\n      var play = this.outstandingSounds[id];\n      console.log(play.id + ': ' + play.url);\n    }\n\n    console.groupEnd();\n    console.groupEnd();\n  },\n\n  /** \n   * This function tries to fetch the given URL and convert it\n   * into a blob url. If the URL is already loaded up, this\n   * returns true.\n   * \n   * @param {string} url url to load into memory\n   * @returns true if the url is already loaded up\n   **/\n  _preload: function _preload(url) {\n    log('preloading!');\n    this.prepareWhenReady = null;\n\n    if (this.preloaded) {\n      if (this.preloaded.url === url) {\n        // true when already loaded up\n        var preloaded = !!this.preloaded.blobUrl;\n        log('preloading', {\n          url: url,\n          preloaded: preloaded\n        });\n        return preloaded;\n      }\n\n      if (this.preloaded.blobUrl) {\n        log('revoking previously loaded url', {\n          url: this.preloaded.url\n        }); // unload previous blob\n\n        URL.revokeObjectURL(this.preloaded.blobUrl);\n        this.preloaded = null;\n      }\n    }\n\n    this.preloaded = {\n      url: url,\n      blobUrl: null,\n      responses: []\n    };\n\n    this._fetch(url, this.preloaded.responses);\n\n    return false;\n  },\n  _fetch: function _fetch(url, responses) {\n    var _this = this;\n\n    var attempt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    log(\"preload attempt #\".concat(attempt), {\n      url: url\n    });\n    var response = {\n      start: new Date().toString()\n    };\n    responses.push(response);\n\n    var retry = function retry() {\n      if (!_this.preloaded || _this.preloaded.url !== url) {\n        log('preload abandoning retry because we have moved on', {\n          url: url\n        });\n        return;\n      }\n\n      if (attempt > _this.maxRetries) {\n        log('preload failed to fetch', {\n          url: url,\n          responses: responses\n        });\n        _this.preloaded = null;\n\n        _this.trigger('prepared', url, false, responses);\n\n        return;\n      }\n\n      setTimeout(function () {\n        return _this._fetch(url, responses, attempt + 1);\n      }, Math.min(Math.pow(10, attempt), 10000));\n    };\n\n    log('preloading', {\n      url: url,\n      responses: responses\n    }); // stress test:\n    // const extra = (Math.random() < 0.7) ? '-extrajunkj' : '';\n\n    fetch(url\n    /* + extra */\n    ).then(function (res) {\n      log('preload got response');\n      response.end = new Date().toString();\n      response.status = res.status;\n      response.text = res.statusText;\n      response.headers = _toConsumableArray(res.headers.entries()); // if res.type == 'opaque', could cause problems\n\n      if (res.type === 'opaque') {\n        log('preload opaque response, so retrying');\n        response.name = 'OpaqueResponse';\n        response.message = 'Browser returned oaque response';\n        retry();\n        return;\n      }\n\n      if (!res.ok) {\n        log('preload fetch error - retrying');\n        retry();\n        return;\n      }\n\n      res.blob().then(function (blob) {\n        log('preload got blob');\n\n        if (_this.preloaded && _this.preloaded.url === url) {\n          log('preloaded', {\n            url: url\n          });\n          var properMimeTypeBlob = new Blob([blob], {\n            type: 'audio/mpeg'\n          });\n          _this.preloaded.blobUrl = URL.createObjectURL(properMimeTypeBlob);\n\n          _this.trigger('prepared', url, true, responses);\n        } else {\n          // finished retrieving file, but nobody cares any more\n          log('preload retrieved url, but nobody cares any more');\n        }\n      }).catch(function (err) {\n        log('preload error blobbing', err, err.name, err.message);\n        response.name = err.name;\n        response.message = err.message;\n        retry();\n      });\n    }).catch(function (err) {\n      log('preload error', err, err.name, err.message); // connectivity error \n\n      response.end = new Date().toString();\n      response.name = err.name;\n      response.message = err.message;\n      retry();\n    });\n  },\n\n  /**\n  * This function puts the given URL into the prepared audio element and tells\n  * the browser to advance to the given start position.\n  * \n  * @param {*} url \n  * @param {*} startPosition \n  * @returns true if the song is already loaded up and ready to play\n  */\n  _prepare: function _prepare(url, startPosition) {\n    // empty out any pending request\n    this.prepareWhenReady = null;\n\n    if (!url) {\n      return false;\n    }\n\n    if (this.preparing && this.preparing.audio.src === url && this.preparing.canplaythrough) {\n      log('play already prepared!'); // song is already prepared!\n\n      return true;\n    }\n\n    if (this.preparing.audio.src !== url) {\n      log('preparing', url);\n\n      if (this.preparing.audio.playing) {\n        this.preparing.audio.pause();\n      }\n\n      this.preparing.canplaythrough = false;\n      revoke(this.preparing.audio);\n      this.preparing.audio.src = url;\n    }\n\n    if (startPosition && this.preparing.audio.currentTime !== startPosition) {\n      log('advancing preparing audio to', startPosition / 1000);\n      this.preparing.audio.currentTime = startPosition / 1000;\n    }\n\n    return false;\n  },\n\n  /*\n   * Kick off playback of the requested sound.\n   */\n  _playSound: function _playSound(sound) {\n    var _this2 = this;\n\n    var speaker = this;\n\n    if (!this.active || !this.active.audio) {\n      // eslint-disable-next-line\n      console.error('**** player.initializeAudio() *** not called before playback!');\n      return;\n    }\n\n    if (this.active.sound === sound) {\n      if (this.active.audio.paused) {\n        log(sound.id + ' was paused, so resuming'); // resume playback\n\n        this.active.audio.play().then(function () {\n          log('resumed playback');\n          sound.trigger('play');\n        }).catch(function (e) {\n          log('error resuming playback', e.name, e.message, e.stack, sound.id);\n          speaker.active.sound = null;\n          sound.trigger('finish');\n        });\n\n        if (this.fading.sound) {\n          this.fading.audio.play().then(function () {\n            log('resumed fading playback');\n          }).catch(function (e) {\n            log('error resuming fading playback', e.name, e.message, e.stack, sound.id);\n            speaker.fading.sound = null;\n            revoke(speaker.fading.audio);\n            speaker.fading.audio.src = SILENCE;\n          });\n        }\n      } else {\n        log(sound.id + ' is already playing');\n      }\n\n      return;\n    }\n\n    if (this.preloaded && this.preloaded.url === sound.url && this.preloaded.blobUrl) {\n      log(sound.id + ' using preloaded audio', this.preloaded);\n\n      if (this.preparing.audio.playing) {\n        this.preparing.audio.pause();\n      }\n\n      sound.responses = this.preloaded.responses;\n      revoke(this.preparing.audio);\n      this.preparing.audio.src = this.preloaded.blobUrl;\n      this.preparing.canplaythrough = true;\n      this.preloaded = null;\n    } else if (this.preparing.audio.src !== sound.url) {\n      // hopefully, by this time, any sound that was destroyed before its\n      // play() call completed has actually completed its play call. Otherwise\n      // this will trigger an exception in the play preparation.\n      this._prepare(sound.url, sound.startPosition);\n    } // swap prepared -> active\n\n\n    var active = this.active;\n    this.active = this.preparing;\n    this.preparing = active;\n    this.preparing.canplaythrough = false;\n    revoke(this.preparing.audio);\n    this.preparing.audio.src = SILENCE; // don't throw sound object in active until playback starts (below)\n\n    this.active.sound = null;\n\n    this._setVolume(this.active, sound); // notify clients that whatever was previously playing has finished\n\n\n    if (this.preparing.sound) {\n      var finishedSound = this.preparing.sound;\n      this.preparing.sound = null;\n      finishedSound.trigger('finish');\n    }\n\n    sound.awaitingPlayResponse = true;\n    this.active.sound = sound;\n    var me = this.active;\n    var attempt = 1;\n\n    var play = function play() {\n      log(sound.id + ' initiating play()', {\n        attempt: attempt\n      });\n\n      _this2.active.audio.play().then(function () {\n        delete sound.awaitingPlayResponse;\n\n        if (!speaker.outstandingSounds[sound.id]) {\n          log(sound.id + ' play() succeeded, but sound has been destroyed'); // this sound was killed before playback began - make sure to stop it\n\n          if (me.audio && me.audio.src === sound.url) {\n            log(sound.id + ' being paused and unloaded');\n            me.audio.pause();\n            revoke(me.audio);\n            me.audio.src = SILENCE;\n          }\n\n          return;\n        }\n\n        log(sound.id + ' play() succeeded'); // configure fade-out now that metadata is loaded\n\n        if (sound.fadeOutSeconds && sound.fadeOutEnd === 0) {\n          sound.fadeOutStart = me.audio.duration - sound.fadeOutSeconds;\n          sound.fadeOutEnd = me.audio.duration;\n        }\n\n        if (sound.startPosition) {\n          log('updating start position');\n          me.audio.currentTime = sound.startPosition / 1000;\n          log('updated');\n        }\n\n        var paused = me.audio.paused;\n        sound.trigger('play');\n\n        if (me.pauseAfterPlay) {\n          me.audio.pause();\n        } else if (paused) {\n          sound.trigger('pause');\n        }\n      }).catch(function (error) {\n        log('error starting playback with sound ' + sound.id, {\n          name: error.name,\n          message: error.message,\n          attempt: attempt\n        });\n\n        if (attempt < 4) {\n          attempt++;\n          setTimeout(play, 10);\n        } else {\n          sound.trigger('finish', error);\n        }\n      });\n    };\n\n    play();\n  },\n  _destroySound: function _destroySound(sound) {\n    var fadeOut = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    sound.off();\n\n    if (this.active && this.active.sound === sound) {\n      if (!fadeOut || !sound.fadeOutSeconds) {\n        log('destroy triggered for current sound (no fadeout)', sound.id);\n        this.active.audio.pause();\n        revoke(this.active.audio);\n        this.active.audio.src = SILENCE;\n      } else {\n        log('destroy triggered for current sound (with fadeout)', sound.id);\n        var audio = this.active.audio;\n        sound.fadeOutStart = audio.currentTime;\n\n        if (sound.endPosition) {\n          sound.fadeOutEnd = Math.min(audio.currentTime + sound.fadeOutSeconds, sound.endPosition / 1000);\n          sound.endPosition = Math.min(sound.fadeOutEnd * 1000, sound.endPosition);\n        } else {\n          sound.fadeOutEnd = audio.currentTime + sound.fadeOutSeconds;\n          sound.endPosition = sound.fadeOutEnd * 1000;\n        } // song hit start of fade out\n\n\n        this._setVolume(this.active); // active becomes fading, and fading becomes active\n\n\n        var fading = this.fading;\n        this.fading = this.active;\n        this.active = fading;\n        this.active.sound = null; // not used any more \n      }\n    } else {\n      log('destroy triggered for inactive sound', sound.id); // if (this.active && (this.active.audio.sound === sound)) {\n      //   We're destroying the active sound, but it hasn't completed its play()\n      //   yet (indicated by this.active.sound === sound), so we can't pause it\n      //   here. When the play does complete, it will notice it isn't in the \n      //   outstandingSounds map and it will pause itself\n      // }\n    }\n\n    delete this.outstandingSounds[sound.id];\n  },\n  flush: function flush() {\n    // destroy all outstanding sound objects\n    for (var id in this.outstandingSounds) {\n      this.outstandingSounds[id].destroy();\n    }\n  },\n  _pauseSound: function _pauseSound(sound) {\n    if (this.active && sound === this.active.sound) {\n      if (sound.awaitingPlayResponse) {\n        // wait for the play() call to complete before pausing, otherwise\n        // we'll get an exception\n        this.active.pauseAfterPlay = true;\n      } else {\n        this.active.audio.pause();\n      }\n    }\n\n    if (this.fading && this.fading.audio) {\n      this.fading.audio.pause();\n    }\n  },\n  _position: function _position(sound) {\n    if (this.active && sound === this.active.sound) {\n      return Math.floor(this.active.audio.currentTime * 1000);\n    } else {\n      return 0;\n    }\n  },\n  _duration: function _duration(sound) {\n    if (sound === this.active.sound) {\n      var durationRounded = isNaN(this.active.audio.duration) ? 0 : Math.round(this.active.audio.duration);\n      return durationRounded * 1000;\n    } else {\n      return 0;\n    }\n  },\n  // set the volume (0-100)\n  setVolume: function setVolume(value) {\n    if (typeof value !== 'undefined') {\n      this.vol = value;\n\n      if (this.active && this.active.sound) {\n        this._setVolume(this.active);\n      }\n\n      this.trigger('volume', value);\n    }\n\n    return this.vol;\n  },\n  getVolume: function getVolume() {\n    return this.vol;\n  }\n};\n\nfunction revoke(audio) {\n  if (audio.src.slice(0, 4) === 'blob') {\n    log('revoking', {\n      url: audio.src\n    });\n    URL.revokeObjectURL(audio.src);\n  }\n} // add events to speaker class\n\n\nObject.assign(Speaker.prototype, Events);\n\n/*\n *  Feed Media Player\n *\n *  This class requests and plays audio files from the feed servers. It\n *  makes use of the Session class to communicate with the server. There\n *  should technically only ever be one instance of this class in a page.\n *  This class does no UI - that should be handled by Feed.PlayerView \n *  or similar.\n *\n *  Create this with:\n *    player = new Feed.Player(token, secret[, options])\n *\n *  options can be:\n *    debug: false,         // when true, display console logging statements\n *    remoteLogging: false  // when true, failed play starts or errors will cause the\n *                          // last 500 log entries from the player to be sent to\n *                          // feed.fm to assist with debugging.\n *    trimming: true,       // when true, song start/end trims will be honored\n *    crossfadeIn: false,   // when true, songs do not fade in - they start at full volume\n *    normalizeVolume: true, // automatically adjust volume of songs in station to be at same approx loudness\n *    secondsOfCrossfade: 0 // number of seconds to crossfade songs during song transitions (note: this might be\n *                          // overidden by the server)\n *    simulcast: 'uuid'     // id to announce music playback on, for simulcast listeners\n *    maxRetries: 6         // max number of times to retry retrieving a song before giving up\n *    resumable: true       // when true, playback can be resumed after a page refresh with Feed.resumable();\n *\n *  In response to a user-interaction event, and before you begin any\n *  music playback, be sure to call:\n *\n *    player.initializeAudio();\n *\n *  That will ensure the library has permission from the browser to play\n *  audio.\n * \n *  To retrieve a list of available stations, register for the 'stations' event,\n *  and then call `player.tune()`:\n * \n *    player.on('stations', function(stations) {\n *       console.log('available stations', stations);\n *    });\n *    player.tune();\n * \n *  or use the promise returned from `player.tune()`:\n *\n *    let stations = await player.tune();\n *\n *  Then control playback with:\n *\n *    play() - start playing the current placement/station or resume the current song\n *    pause() - pause playback of the current song, if any\n *    like() - tell the server we like this song\n *    unlike() - tell the server to remove the 'like' for this song\n *    dislike() - tell the server we dislike this song, and skip to the next one\n *    skip() - request to skip the current song\n *    setStationId(id [, fade]) - switch to a different station. Optionally set 'fade' to true to\n *         crossfade playback to the new station. This has a side effect of triggering\n *         a 'station-changed' event.\n *    setStationId(id, advanceTo) - switch to station with id `id`, and begin playback of that\n *         station at `advanceTo` seconds from the start of the station. This only works for first play\n *         or single play stations, and will trigger an error for other stations.\n *    setVolume(xxx) - adjust music volume (0-100)\n *    getVolume() - retrieve music volume (0-100)\n *\n *  player has a current state that can be queried with 'getCurrentState()':\n *    uninitialized - player is still trying to initialize\n *    unavailable - no music is available\n *    idle - ready for playback, not playing anything\n *    playing - if session.hasActivePlayStarted() and we're not paused\n *    paused -  if session.hasActivePlayStarted() and we're paused\n * \n *  events emitted by the player:\n *    station-changed - the current station from which music is pulled has changed.\n *                      this is triggered in response to a \n *    stations - this is triggered after a call to `tune()`, and passes the event handler an\n *               array of all stations available for playback. Alterntively, the\n *               `getStations()` method returns a promise that resolves to the same\n *               value.\n *    music-unavailable - user isn't located in the US and can't play music\n *    play-started - this play has begun playback. The event handler is passed a \n *                   'play' object with song metadata. If the event was triggered\n *                   via a `Feed.resumable().tune()` call, then a second argument\n *                   of `true` will be passed to the event handler.\n *    play-paused - the currently playing song has been paused. The event handler\n *                    is passed a 'play' object with song metadata. if the event\n *                   was triggered via a `Feed.resumable().tune()` call, then a\n *                   second argument of `true` will be passed to the event handler.\n *    play-stopped - player.stop() has been called\n *    skip-denied - the given song could not be skipped due to DMCA rules\n *    skip-failed - the request to skip a song was denied\n *    forbidden - an unsatisfiable request for music was made (currently only\n *       triggered when trying to start playback in the middle of a non-first\n *       play station with the `advanceTo` argument to `setStationId`)\n *\n *  Some misc methods:\n *\n *    setMuted(muted)\n *    canLike() - returns true if the current song may be liked/unliked/disliked\n *    canSkip() - returns true if the current song may be skipped (some stations have\n *        skip frequency limits or disable skipping entirely)\n *\n */\n\nfunction supports_html5_storage$1() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null && (window.localStorage['feed-test'] = true);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Player = function Player(token, secret, options) {\n  var _this = this;\n\n  if (!secret) {\n    // restore from saved state\n    this._restore(token);\n  } else {\n    options = options || {};\n    options.maxRetries = options.maxRetries || 10;\n    this.options = options;\n    this.state = {\n      paused: true,\n      // activePlay\n      simulcast: options.simulcast\n    };\n\n    if (options.debug) {\n      log.enable();\n    } // this._station = current station\n    // this._stations = list of available stations\n    // this._placement = current placement\n\n\n    this.trimming = options.trimming === false ? false : true;\n    this.normalizeVolume = 'normalizeVolume' in options ? options.normalizeVolume : true;\n    this.resumable = 'resumable' in options ? options.resumable : true;\n    this.secondsOfCrossfade = options.secondsOfCrossfade || 0;\n    this.crossfadeIn = !!options.crossfadeIn;\n    this.serverAssignedCrossfade = false;\n    this._stationsPromise = new Promise(function (resolve, reject) {\n      _this._stationsResolve = resolve;\n      _this._stationsReject = reject;\n    });\n    var speaker = this.speaker = new Speaker({\n      maxRetries: options.maxRetries\n    });\n    var session = this.session = new Session(token, secret, options);\n\n    if (options.brokenWebkitFormats && Speaker.brokenWebkit) {\n      var reqFormatList = options.brokenWebkitFormats.split(','),\n          suppFormatList = speaker.getSupportedFormats().split(','),\n          reqAndSuppFormatList = intersection(reqFormatList, suppFormatList),\n          reqAndSuppFormats = reqAndSuppFormatList.join(',');\n      log('input format list is', reqFormatList, suppFormatList);\n      log('final support list is', reqAndSuppFormats);\n\n      if (reqAndSuppFormatList.length === 0) {\n        reqAndSuppFormats = speaker.getSupportedFormats();\n      }\n\n      session.setFormats(reqAndSuppFormats);\n    } else if (options.formats) {\n      var _reqFormatList = options.formats.split(','),\n          _suppFormatList = speaker.getSupportedFormats().split(','),\n          _reqAndSuppFormatList = intersection(_reqFormatList, _suppFormatList),\n          _reqAndSuppFormats = _reqAndSuppFormatList.join(',');\n\n      if (_reqAndSuppFormatList.length === 0) {\n        _reqAndSuppFormats = speaker.getSupportedFormats();\n      }\n\n      log('input format list is', _reqFormatList, _suppFormatList);\n      log('final support list is', _reqAndSuppFormats);\n      session.setFormats(_reqAndSuppFormats);\n    } else {\n      session.setFormats(speaker.getSupportedFormats());\n    }\n  }\n\n  Object.assign(this, Events);\n  this.session.on('play-active', this._onPlayActive, this);\n  this.session.on('play-started', this._onPlayStarted, this);\n  this.session.on('play-completed', this._onPlayCompleted, this);\n  this.session.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.session.on('prepare-sound', this._onPrepareSound, this);\n  this.session.on('placement', this._onPlacement, this);\n  this.session.on('stations', this._onStations, this);\n  this.session.on('station-changed', this._onStationChanged, this);\n  var player = this;\n\n  var _loop = function _loop() {\n    var event = _arr[_i];\n\n    _this.session.on(event, function () {\n      player.trigger.apply(player, [event].concat(Array.prototype.slice.call(arguments, 0)));\n    });\n  };\n\n  for (var _i = 0, _arr = ['music-unavailable', 'not-in-us', 'invalid-credentials', 'skip-denied', 'play-active', 'forbidden']; _i < _arr.length; _i++) {\n    _loop();\n  }\n\n  this.setMuted(this.isMuted());\n};\n\nPlayer.prototype._persist = function () {\n  var playerState = shallowCopy(this.state);\n\n  if (playerState.activePlay) {\n    // remove the 'sound' object\n    playerState.activePlay = shallowCopy(playerState.activePlay);\n    delete playerState.activePlay.sound;\n  }\n\n  var persisted = {\n    state: playerState,\n    options: this.options,\n    trimming: this.trimming,\n    normalizeVolume: this.normalizeVolume,\n    secondsOfCrossfade: this.secondsOfCrossfade,\n    serverAssignedCrossfade: this.serverAssignedCrossfade,\n    crossfadeIn: this.crossfadeIn,\n    sessionConfig: this.session.config\n  };\n  return persisted;\n};\n\nPlayer.prototype._restore = function (_ref) {\n  var _this2 = this;\n\n  var persisted = _ref.persisted,\n      elapsed = _ref.elapsed;\n\n  if (persisted.options.debug) {\n    log.enable();\n  }\n\n  log('restoring!'); // session will be initialized with no current play\n\n  var sessionConfig = persisted.sessionConfig;\n  var sessionCurrent = sessionConfig.current;\n  sessionConfig.current = null;\n  sessionConfig.pendingRequest = null;\n  sessionConfig.pendingPlay = null;\n  this.session = new Session();\n  this.session.config = sessionConfig;\n  this.options = persisted.options;\n  this.speaker = new Speaker({\n    maxRetries: this.options.maxRetries\n  }); // start off in paused state\n\n  this.state = {\n    paused: true,\n    simulcast: this.options.simulcast\n  };\n  this.trimming = persisted.trimming;\n  this.normalizeVolume = persisted.normalizeVolume;\n  this.resumable = true;\n  this.secondsOfCrossfade = persisted.secondsOfCrossfade;\n  this.serverAssignedCrossfade = persisted.serverAssignedCrossfade;\n  this.crossfadeIn = persisted.crossfadeIn;\n  this._stationsPromise = new Promise(function (resolve, reject) {\n    _this2._stationsResolve = resolve;\n    _this2._stationsReject = reject;\n  }); // at this point, we're in a state similar to a newly initialized player,\n  // but the session object has placement/station info\n  // swap out the default tune\n\n  this.tune = function () {\n    var _this3 = this;\n\n    // on the next tick, throw out events to simulate a normal tune() call\n    return Promise.resolve(true).then(function () {\n      _this3._station = persisted.sessionConfig.station;\n      _this3._stations = persisted.sessionConfig.stations;\n      _this3._placement = persisted.sessionConfig.placement;\n\n      _this3._stationsResolve(persisted._stations);\n\n      _this3.trigger('placement', _this3._placement);\n\n      _this3.trigger('station-changed', _this3._station);\n\n      _this3.trigger('stations', _this3._stations); // stick the previously active song into the session\n\n\n      _this3.session.config.current = sessionCurrent;\n      _this3.session.config.current.started = false;\n      var play = _this3.session.config.current.play; // get the player to create a sound object with the audio advanced to the\n      // old elapsed position\n\n      play.start_at = elapsed / 1000;\n\n      _this3.session.trigger('play-active', play);\n\n      _this3.session.config.current.started = true; // pretend the song was started\n\n      _this3.state.paused = false;\n\n      _this3.session.trigger('play-started', play, true); // announce that the song is paused\n\n\n      _this3.state.paused = true;\n\n      _this3.trigger('play-paused', play, true); // now we're in the same spot we'd be if we played and paused.\n\n    }).then(function () {\n      return _this3._stationsPromise;\n    });\n  };\n};\n\nPlayer.prototype.initializeAudio = function () {\n  log('INTIALIZE AUDIO');\n  this.speaker.initializeAudio();\n};\n\nPlayer.prototype._onPlacement = function (placement) {\n  this._placement = placement;\n\n  if (placement.options && placement.options.crossfade_seconds) {\n    this.secondsOfCrossfade = placement.options.crossfade_seconds;\n    this.serverAssignedCrossfade = true;\n  }\n\n  this.trigger('placement', placement);\n};\n\nPlayer.prototype._onStations = function (stations) {\n  this._stations = stations;\n\n  this._stationsResolve(stations);\n\n  this.trigger('stations', stations);\n};\n\nPlayer.prototype._onStationChanged = function (stationId, station) {\n  this._station = station;\n\n  if (this.serverAssignedCrossfade && station.options && 'crossfade_seconds' in station.options) {\n    // apply station level crossfade, if available\n    this.secondsOfCrossfade = station.options.crossfade_seconds;\n  } else if (this.serverAssignedCrossfade && this._placement.options && 'crossfade_seconds' in this._placement.options) {\n    // revert to placement level crossfade, if available\n    this.secondsOfCrossfade = this._placement.options.crossfade_seconds;\n  }\n\n  this.trigger('station-changed', stationId, station);\n};\n\nPlayer.prototype.setStationId = function (stationId, fadeOutOrAdvance) {\n  var advance;\n  var fadeOut = false;\n\n  if (fadeOutOrAdvance === true) {\n    fadeOut = fadeOutOrAdvance;\n    log('SET STATION ID (WITH FADE)', stationId);\n  } else if (fadeOutOrAdvance) {\n    advance = fadeOutOrAdvance;\n    log('SET STATION ID (WITH ADVANCE)', stationId, advance);\n  } else {\n    log('SET STATION ID', stationId);\n  }\n\n  if (fadeOut && this.state.activePlay) {\n    // when we destroy the sound, have it fade out\n    this.state.activePlay.fadeOnDestroy = true;\n  }\n\n  this.session.setStationId(stationId, advance, this.crossfadeIn);\n};\n\nPlayer.prototype._onPlayActive = function (play) {\n  // create a new sound object\n  var options = {\n    play: this._onSoundPlay.bind(this, play.id),\n    pause: this._onSoundPause.bind(this, play.id),\n    finish: this._onSoundFinish.bind(this, play.id),\n    elapse: this._onSoundElapse.bind(this, play.id)\n  };\n\n  if (this.normalizeVolume) {\n    options.gain = (play.audio_file.replaygain_track_gain || 0) + (play.station.pre_gain || 0);\n  }\n\n  if (play.start_at) {\n    // when offsetting into a station, ignore the trim and honor the start_at\n    options.startPosition = play.start_at * 1000;\n  } else {\n    if (this.trimming && play.audio_file.extra && play.audio_file.extra.trim_start) {\n      options.startPosition = play.audio_file.extra.trim_start * 1000;\n    }\n  }\n\n  if (this.trimming && play.audio_file.extra && play.audio_file.extra.trim_end && play.audio_file.duration_in_seconds) {\n    options.endPosition = (play.audio_file.duration_in_seconds - play.audio_file.extra.trim_end) * 1000;\n  }\n\n  if (this.secondsOfCrossfade) {\n    if (this.crossfadeIn) {\n      options.fadeInSeconds = this.secondsOfCrossfade;\n    }\n\n    options.fadeOutSeconds = this.secondsOfCrossfade;\n  }\n\n  var sound = this.speaker.create(play.audio_file.url, options);\n  this.state.activePlay = {\n    id: play.id,\n    sound: sound,\n    startReportedToServer: false,\n    // whether we got a 'play-started' event from session\n    soundCompleted: false,\n    // whether the sound object told us it finished playback\n    playStarted: false,\n    // whether playback started on the sound object yet\n    fadeOnDestroy: false,\n    // when true, apply a fade out when destroying the sound\n    previousPosition: 0 // last time we got an 'elapse' callback\n\n  }; // if we're not paused, then start it\n\n  if (!this.state.paused) {\n    var s = this.state.activePlay.sound;\n    s.play();\n  }\n};\n\nPlayer.prototype._onSoundPlay = function (playId) {\n  // sound started playing\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound play, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.paused = false;\n  var playerWasResumed = this.state.activePlay.playStarted;\n  this.state.activePlay.playStarted = true; // on the first play, tell the server we're good to go\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // save the state so we can restore\n    if (this.resumable) {\n      persistState(this._persist());\n    }\n\n    return this.session.reportPlayStarted();\n  } else if (playerWasResumed) {\n    // subsequent plays are considered 'resumed' events\n    this.trigger('play-resumed', this.session.getActivePlay());\n  }\n};\n\nPlayer.prototype.getActivePlay = function () {\n  return this.session.getActivePlay();\n};\n\nPlayer.prototype.hasActivePlayStarted = function () {\n  return this.session.hasActivePlayStarted();\n};\n\nPlayer.prototype.getActivePlacement = function () {\n  return this.session.getActivePlacement();\n};\n\nPlayer.prototype._onSoundPause = function (playId) {\n  // sound paused playback\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound pause, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.paused = true;\n  this.trigger('play-paused', this.session.getActivePlay());\n};\n\nPlayer.prototype._onSoundFinish = function (playId, withError) {\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound finish, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound;\n  this.state.activePlay.soundCompleted = true;\n\n  if (withError) {\n    this.session._submitEvent('playback-error', {\n      url: sound.url,\n      responses: sound.responses,\n      error: withError,\n      play_id: playId\n    });\n\n    this.state.activePlay.soundCompletedWithError = true;\n\n    if (withError.name === 'NotAllowedError') {\n      // eslint-disable-next-line no-console\n      console.error('Feed.fm: first call to \"initializeAudio()\" or \"play()\" must be made in user-initiated event handler');\n      this.stop();\n      return;\n    }\n  }\n\n  if (!this.state.activePlay.playStarted) {\n    // never reported this as started...  mark it as invalidated so\n    // we can advance.\n    this.trigger('invalidated', playId);\n    this.session.requestInvalidate();\n    return;\n  }\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // if the song failed before we recieved start response, wait\n    // until word from the server that we started before we say\n    // that we completed the song\n    return;\n  }\n\n  if (withError) {\n    log('song completed with error - marking as invalid', withError);\n    this.trigger('invalidated', playId);\n    this.session.requestInvalidate();\n  } else {\n    this.session.reportPlayCompleted();\n  }\n};\n\nPlayer.prototype._onSoundElapse = function (playId) {\n  if (!this.state.activePlay || this.state.activePlay.id !== playId) {\n    log('received sound elapse, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound,\n      position = sound.position(),\n      interval = 30 * 1000,\n      // ping server every 30 seconds\n  previousCount = Math.floor(this.state.activePlay.previousPosition / interval),\n      currentCount = Math.floor(position / interval);\n\n  if (this.resumable) {\n    persistElapsed(position);\n  }\n\n  this.state.activePlay.previousPosition = position;\n\n  if (currentCount !== previousCount) {\n    this.session.reportPlayElapsed(Math.floor(position / 1000));\n  }\n};\n\nPlayer.prototype._onPlayStarted = function (play) {\n  var _this4 = this;\n\n  var session = this.session;\n\n  if (!this.state.activePlay || this.state.activePlay.id !== play.id) {\n    log('received play started, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.startReportedToServer = true;\n\n  if (this.state.activePlay.soundCompleted) {\n    // the audio completed playback before the session announced the play started\n    log('sound completed before we finished reporting start', this.state.activePlay); // In the normal case we'd just quit here, but since the audio completed playback\n    // already, we've got to make sure a 'session.reportPlayCompleted()' gets kicked\n    // off to record the completion of this song.\n    // Defer the reporting so other 'play-started' handlers can complete as normal\n    // before a 'play-completed' gets triggered\n\n    if (this.state.activePlay.soundCompletedWithError) {\n      setTimeout(function () {\n        _this4.trigger('invalidated', play.id);\n\n        session.requestInvalidate();\n      }, 1);\n    } else {\n      setTimeout(function () {\n        return session.reportPlayCompleted();\n      }, 1);\n    }\n  }\n\n  this.updateSimulcast();\n  this.trigger('play-started', play);\n};\n\nPlayer.prototype._onPlayCompleted = function (play) {\n  if (!this.state.activePlay || this.state.activePlay.id !== play.id) {\n    log('received play completed, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.sound.destroy(this.state.activePlay.fadeOnDestroy);\n  var started = this.state.activePlay.playStarted;\n  delete this.state.activePlay;\n\n  if (started) {\n    this.trigger('play-completed', play);\n  } // skip to complete the current song.\n  //this.state.paused = false;\n\n};\n\nPlayer.prototype._onPlaysExhausted = function () {\n  if (this.state.paused) {\n    return;\n  }\n\n  this.state.paused = false;\n  this.updateSimulcast();\n  this.trigger('plays-exhausted');\n};\n\nPlayer.prototype._onPrepareSound = function (url, startPosition, playId) {\n  var _this5 = this;\n\n  log('preparing sound', url, startPosition);\n  this.speaker.prepare(url, startPosition * 1000);\n  this.speaker.once('prepared', function (preparedUrl, success, headers) {\n    if (url !== preparedUrl) {\n      return;\n    }\n\n    if (headers && headers.length > 1) {\n      _this5.session._submitEvent('preload-error', {\n        url: url,\n        play_id: playId,\n        responses: headers\n      });\n    }\n\n    var activePlay = _this5.session.getActivePlay();\n\n    if (!success && (!activePlay || activePlay.id !== playId)) {\n      _this5.session.requestInvalidate(url);\n    }\n  });\n};\n\nPlayer.prototype.isPaused = function () {\n  return this.session.isTuned() && this.state.paused;\n};\n\nPlayer.prototype.tune = function () {\n  log('TUNE');\n\n  if (!this.session.isTuned()) {\n    this.session.tune();\n  }\n\n  return this._stationsPromise;\n};\n/**\n * This call triggers the SDK to load the next song into memory and\n * returns a promise that resolves when the next song is fully loaded\n * and ready for immediate playback via play().\n * \n * Additionally, this method triggers a 'prepared' event on the player\n * object when the next song is fully loaded and ready for immediate\n * playback.\n * \n * Note: a song cannot be fully loaded into memory until initializeAudio()\n * has been called. The promise returned by this method will not resolve\n * unless initializeAudio() is successfully called before or after this\n * method.\n * \n * @returns Promise that resolves when a song is in memory and ready for immediate playback\n */\n\n\nPlayer.prototype.prepare = function () {\n  log('PREPARE');\n  this.speaker.initializeAudio();\n  return this._prepare();\n};\n\nPlayer.prototype._prepare = function () {\n  var _this6 = this;\n\n  var ap = this.state.activePlay;\n\n  if (ap) {\n    var url = ap.sound.url;\n    var prepared = this.speaker.prepare(url, ap.sound.startPosition);\n\n    if (prepared) {\n      return Promise.resolve(true).then(function () {\n        log('already prepared');\n\n        _this6.trigger('prepared');\n      });\n    } else {\n      return new Promise(function (resolve) {\n        log('waiting for un/prepared event');\n\n        _this6.speaker.once('prepared', function (preparedUrl, success, headers) {\n          if (headers && headers.length > 1) {\n            _this6.session._submitEvent('preload-error', {\n              url: preparedUrl,\n              play_id: ap.id,\n              responses: headers\n            });\n          }\n\n          if (preparedUrl !== url) {\n            return;\n          }\n\n          if (success) {\n            _this6.trigger('prepared');\n\n            resolve(true);\n          } else {\n            // invalidate the play, and request a new one\n            _this6.session.requestInvalidate();\n\n            _this6.session.once('play-active', function () {\n              _this6._prepare().then(function (val) {\n                return resolve(val);\n              });\n            });\n          }\n        });\n      });\n    }\n  } else {\n    return new Promise(function (resolve) {\n      _this6.session.once('play-active', function ()\n      /* play */\n      {\n        _this6._prepare().then(function (val) {\n          return resolve(val);\n        });\n      });\n\n      if (!_this6.session.isTuned()) {\n        log('tuning');\n\n        _this6.session.tune();\n      }\n    });\n  }\n};\n\nPlayer.prototype.play = function () {\n  log('PLAY');\n  var session = this.session;\n  var state = this.state;\n  this.speaker.initializeAudio();\n\n  if (!session.isTuned()) {\n    // not currently playing music\n    state.paused = false;\n    return session.tune();\n  }\n\n  if (session.getActivePlay() && state.activePlay && state.paused) {\n    // resume playback of song\n    if (state.activePlay.playStarted) {\n      state.activePlay.sound.resume();\n    } else {\n      state.activePlay.sound.play();\n    }\n  } // 'start' event from sound will definitely be asynchronous, so prevent repeated calls\n\n\n  state.paused = false;\n  this.updateSimulcast();\n};\n\nPlayer.prototype.pause = function () {\n  log('PAUSE');\n\n  if (!this.session.hasActivePlayStarted() || !this.state.activePlay || this.state.paused) {\n    return;\n  } // pause current song\n\n\n  this.state.activePlay.sound.pause(); // 'pause' event from sound might be asynchronous, so prevent repeated calls\n\n  this.state.paused = true;\n  this.updateSimulcast();\n};\n/**\n * Some regions disallow 'like'ing of songs (e.g. Canada). Check this after\n * changing the active station or when a new song starts to know if the current\n * song may be liked/disliked/unliked.\n * \n * @returns {boolean} true if we can 'like' songs in the currently active station\n */\n\n\nPlayer.prototype.canLike = function () {\n  return this.session.canLike();\n};\n\nPlayer.prototype.like = function () {\n  log('LIKE');\n\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  if (!this.session.canLike()) {\n    return;\n  }\n\n  this.session.likePlay(this.state.activePlay.id);\n  this.trigger('play-liked');\n};\n\nPlayer.prototype.unlike = function () {\n  log('UNLIKE');\n\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  if (!this.session.canLike()) {\n    return;\n  }\n\n  this.session.unlikePlay(this.state.activePlay.id);\n  this.trigger('play-unliked');\n};\n\nPlayer.prototype.dislike = function () {\n  log('DISLIKE');\n\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  if (!this.session.canLike()) {\n    return;\n  }\n\n  this.session.dislikePlay(this.state.activePlay.id);\n  this.trigger('play-disliked'); // start playback if we're paused and try to advance to next song\n\n  this.state.paused = false;\n  this.skip();\n};\n\nPlayer.prototype.skip = function () {\n  log('SKIP');\n\n  if (!this.session.hasActivePlayStarted()) {\n    // can't skip non-playing song\n    return;\n  } // cannot skip in station with skipping disabled\n\n\n  if (!this.session.canSkipInStation()) {\n    return;\n  }\n\n  this.state.paused = false;\n  this.session.requestSkip();\n};\n\nPlayer.prototype.stop = function () {\n  log('STOP');\n  clearPersistance();\n  this.state.paused = true;\n  var activePlay = this.state.activePlay;\n\n  if (activePlay && activePlay.sound) {\n    log('stopping active play', activePlay);\n\n    if (activePlay.startReportedToServer) {\n      // report where we played to\n      var position = activePlay.sound.position();\n      this.session.reportPlayStopped(Math.floor(position / 1000));\n    } // stop any playback\n\n\n    activePlay.sound.pause();\n    activePlay.sound.destroy();\n  } else {\n    log('no active play');\n  }\n\n  delete this.state.activePlay; // flush out any prepared sounds\n\n  this.speaker.flush();\n  this.trigger('play-stopped');\n  this.updateSimulcast();\n};\n\nPlayer.prototype.destroy = function () {\n  this.session = null;\n\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    this.state.activePlay.sound.destroy();\n  }\n};\n\nPlayer.prototype.getCurrentState = function () {\n  if (!this.session.hasActivePlayStarted()) {\n    // nothing started, so we're idle\n    return 'idle';\n  } else {\n    if (this.state.paused) {\n      return 'paused';\n    } else {\n      return 'playing';\n    }\n  }\n};\n\nPlayer.prototype.getPosition = function () {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.position();\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.getDuration = function () {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.duration();\n  } else {\n    return 0;\n  }\n};\n/**\n * Return true if the user may skip the current song.\n * \n * @returns {boolean}\n */\n\n\nPlayer.prototype.canSkip = function () {\n  return this.session.canSkip();\n};\n/**\n * Technically, you might not be able to skip a song at the time it starts, but\n * eventually enough time might pass that you can skip the song. Hence, we\n * had 'maybeCanSkip'. However, nobody is repeatedly checking for skippability\n * while playing a song, so this method is deprecated.\n */\n\n\nPlayer.prototype.maybeCanSkip = function () {\n  return this.canSkip();\n};\n\nvar mutedKey = 'muted';\n\nPlayer.prototype.isMuted = function () {\n  if (supports_html5_storage$1()) {\n    if (mutedKey in localStorage) {\n      return localStorage[mutedKey] === 'true';\n    }\n  }\n\n  return false;\n};\n\nPlayer.prototype.setMuted = function (isMuted) {\n  if (isMuted) {\n    this.speaker.setVolume(0);\n\n    if (supports_html5_storage$1()) {\n      localStorage[mutedKey] = true;\n    }\n\n    this.trigger('muted');\n  } else {\n    this.speaker.setVolume(100);\n\n    if (supports_html5_storage$1()) {\n      localStorage[mutedKey] = false;\n    }\n\n    this.trigger('unmuted');\n  }\n};\n\nPlayer.prototype.getVolume = function () {\n  return this.speaker.getVolume();\n};\n\nPlayer.prototype.setVolume = function (vol) {\n  this.speaker.setVolume(vol);\n};\n\nPlayer.prototype.getStations = function () {\n  return this._stationsPromise;\n};\n\nPlayer.prototype.updateSimulcast = function () {\n  var _this7 = this;\n\n  if (!this.state.simulcast) {\n    return;\n  }\n\n  var state = this.getCurrentState();\n  getClientId().then(function (clientId) {\n    _this7.session._signedAjax(getBaseUrl() + \"/api/v2/simulcast/\".concat(_this7.state.simulcast, \"/in-progress\"), {\n      method: 'POST',\n      body: JSON.stringify({\n        state: state,\n        client_id: clientId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  });\n};\n\nfunction shallowCopy(obj) {\n  if (obj === null) {\n    return null;\n  }\n\n  return Object.assign({}, obj);\n}\n\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function (callback, thisArg) {\n    thisArg = thisArg || window;\n\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\nvar PlayerView = function PlayerView(id, player) {\n  var _this = this;\n\n  this.alertId = null;\n  this.durationId = null;\n  this.startedPlayback = false;\n  this.$el = id instanceof Element ? id : document.getElementById(id);\n  this.player = player;\n  this.player.on('placement', this._onPlacement, this);\n  this.player.on('play-started', this._onPlayStarted, this);\n  this.player.on('play-paused', this._onPlayPaused, this);\n  this.player.on('play-resumed', this._onPlayResumed, this);\n  this.player.on('play-completed', this._onPlayCompleted, this);\n  this.player.on('play-stopped', this._onPlayStopped, this);\n  this.player.on('play-liked', this._onPlayLiked, this);\n  this.player.on('play-unliked', this._onPlayUnliked, this);\n  this.player.on('play-disliked', this._onPlayDisliked, this);\n  this.player.on('station-changed', this._onStationChanged, this);\n  this.player.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.player.on('skip-denied', this._onSkipDenied, this);\n  this.player.on('suspend', this._onSuspend, this);\n\n  this._enableButtonsBasedOnState();\n\n  this.displayText = this.originalDisplayText = this.$el.querySelector('.status').innerHTML;\n  this.renderStatus();\n  this.$el.querySelectorAll('.status').forEach(function (status) {\n    status.addEventListener('click', _this._onStatusClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.play-button, .start-button, .resume-button').forEach(function (button) {\n    button.addEventListener('click', _this._onPlayButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.pause-button').forEach(function (pause) {\n    pause.addEventListener('click', _this._onPauseButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.skip-button').forEach(function (skip) {\n    skip.addEventListener('click', _this._onSkipButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.like-button').forEach(function (like) {\n    like.addEventListener('click', _this._onLikeButtonClick.bind(_this));\n  });\n  this.$el.querySelectorAll('.dislike-button').forEach(function (dislike) {\n    dislike.addEventListener('click', _this._onDislikeButtonClick.bind(_this));\n  });\n};\n\nPlayerView.prototype._onStatusClick = function () {\n  var state = this.player.getCurrentState();\n\n  if (state === 'playing') {\n    this._onPauseButtonClick();\n  } else {\n    this._onPlayButtonClick();\n  }\n};\n\nPlayerView.prototype._onPlayButtonClick = function () {\n  this.player.initializeAudio();\n  this.player.play();\n};\n\nPlayerView.prototype._onPauseButtonClick = function () {\n  this.player.pause();\n};\n\nPlayerView.prototype._onSkipButtonClick = function () {\n  this.player.skip();\n};\n\nPlayerView.prototype._onLikeButtonClick = function (event) {\n  log('like button clicked!', event.target, this);\n\n  if (event.target.classList.contains('liked')) {\n    this.player.unlike();\n  } else {\n    this.player.like();\n  }\n};\n\nPlayerView.prototype._onDislikeButtonClick = function () {\n  this.player.dislike();\n};\n\nPlayerView.prototype.$ = function (arg) {\n  return this.$el.find(arg);\n};\n\nPlayerView.prototype._onPlacement = function (placement) {\n  if (!this.originalDisplayText) {\n    this.originalDisplayText = this.formatPlacement(placement);\n    this.renderStatus(this.originalDisplayText);\n  }\n};\n\nPlayerView.prototype.formatPlacement = function () {\n  return 'Tune in!';\n};\n\nPlayerView.prototype._onPlayStarted = function (play) {\n  this.startedPlayback = true;\n  this.renderStatus(this.formatPlay(play));\n\n  this._enableButtonsBasedOnState();\n\n  this._setLikeStatus(play.liked);\n\n  this._enablePositionTracker();\n};\n\nPlayerView.prototype._onStationChanged = function () {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enablePositionTracker = function () {\n  var playerView = this;\n\n  if (!this.durationId) {\n    this.durationId = window.setInterval(function () {\n      playerView.renderPosition(playerView.player.getPosition(), playerView.player.getDuration());\n    }, 500);\n  }\n};\n\nPlayerView.prototype._setLikeStatus = function (liked) {\n  var likes = this.$el.querySelectorAll('.like-button');\n  var dislikes = this.$el.querySelectorAll('.dislike-button');\n\n  if (liked === true) {\n    // highlight the like button\n    likes.forEach(function (element) {\n      element.classList.add('liked');\n    });\n    dislikes.forEach(function (element) {\n      element.classList.remove('disliked');\n    });\n  } else if (liked === false) {\n    // highlight the dislike button\n    likes.forEach(function (element) {\n      element.classList.remove('liked');\n    });\n    dislikes.forEach(function (element) {\n      element.classList.add('disliked');\n    });\n  } else {\n    // nobody gets highlighted\n    likes.forEach(function (element) {\n      element.classList.remove('liked');\n    });\n    dislikes.forEach(function (element) {\n      element.classList.remove('disliked');\n    });\n  }\n};\n\nPlayerView.prototype._disablePositionTracker = function () {\n  if (this.durationId) {\n    window.clearInterval(this.durationId);\n    this.durationId = null;\n  }\n};\n\nPlayerView.prototype._onPlayResumed = function () {\n  this._enablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayPaused = function () {\n  this._disablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayCompleted = function () {\n  this.renderPosition(0, 0);\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayStopped = function () {\n  this.renderStatus(this.originalDisplayText);\n  this.renderPosition(0, 0);\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlaysExhausted = function () {\n  this.renderStatus(this.originalDisplayText);\n  this.renderAlert('There is no more music to play in this station!');\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayLiked = function () {\n  this._setLikeStatus(true);\n};\n\nPlayerView.prototype._onPlayDisliked = function () {\n  this._setLikeStatus(false);\n};\n\nPlayerView.prototype._onPlayUnliked = function () {\n  this._setLikeStatus();\n};\n\nPlayerView.prototype._onSkipDenied = function () {\n  this.renderAlert('Sorry you\\'ve temporarily run out of skips!');\n};\n\nPlayerView.prototype.formatPlay = function (play) {\n  return '<span class=\\'track\\'>' + play.audio_file.track.title + '</span> by <span class=\\'artist\\'>' + play.audio_file.artist.name + '</span> on <span class=\\'release\\'>' + play.audio_file.release.title + '</span>';\n};\n\nPlayerView.prototype.renderStatus = function (displayText) {\n  var _this2 = this;\n\n  if (displayText !== undefined) {\n    this.displayText = displayText;\n  }\n\n  if (!this.alertId) {\n    this.$el.querySelectorAll('.status').forEach(function (status) {\n      status.innerHTML = _this2.displayText;\n      status.classList.remove('alert');\n    });\n  }\n};\n\nPlayerView.prototype.renderPosition = function (position, duration) {\n  this.$el.querySelectorAll('.elapsed').forEach(function (elapsed) {\n    elapsed.innerHTML = formatTime(position);\n  });\n  this.$el.querySelectorAll('.duration').forEach(function (dur) {\n    dur.innerHTML = formatTime(duration);\n  });\n\n  if (duration === 0) {\n    this.$el.querySelectorAll('.progress').forEach(function (progress) {\n      progress.style.width = '0';\n    });\n  } else {\n    var elapsed = Math.round((position + 1000) / duration * 100);\n    elapsed = elapsed > 100 ? 100 : elapsed;\n    this.$el.querySelectorAll('.progress').forEach(function (progress) {\n      progress.style.width = elapsed + '%';\n    });\n  }\n};\n\nfunction formatTime(millis) {\n  var asSeconds = Math.floor(millis / 1000),\n      secondsPart = asSeconds % 60,\n      minutesPart = Math.floor(asSeconds / 60);\n\n  if (secondsPart < 10) {\n    secondsPart = '0' + secondsPart;\n  }\n\n  return minutesPart + ':' + secondsPart;\n}\n\nPlayerView.prototype.renderAlert = function (alertText) {\n  if (this.alertId) {\n    window.clearTimeout(this.alertId);\n  }\n\n  this.$el.querySelectorAll('.status').forEach(function (status) {\n    status.innerHTML = alertText;\n    status.classList.add('alert');\n  });\n  var playerView = this;\n  this.alertId = window.setTimeout(function () {\n    playerView.alertId = null;\n    playerView.renderStatus();\n  }, 3000);\n};\n\nPlayerView.prototype._onSuspend = function () {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enableButtonsBasedOnState = function () {\n  var state = this.player.getCurrentState(),\n      toEnable,\n      toDisable;\n\n  switch (state) {\n    case 'playing':\n      toEnable = ['.pause-button'];\n      toDisable = ['.play-button', '.start-button', '.resume-button'];\n\n      if (this.player.canLike()) {\n        toEnable.push('.dislike-button', '.like-button');\n      } else {\n        toDisable.push('.dislike-button', '.like-button');\n      }\n\n      if (this.player.canSkip()) {\n        toEnable.push('.skip-button');\n      } else {\n        toDisable.push('.skip-button');\n      }\n\n      break;\n\n    case 'paused':\n      toEnable = ['.play-button', '.resume-button'];\n      toDisable = ['.pause-button', '.start-button'];\n\n      if (this.player.canLike()) {\n        toEnable.push('.dislike-button', '.like-button');\n      } else {\n        toDisable.push('.dislike-button', '.like-button');\n      }\n\n      if (this.player.canSkip()) {\n        toEnable.push('.skip-button');\n      } else {\n        toDisable.push('.skip-button');\n      }\n\n      break;\n\n    /* case 'idle': */\n\n    default:\n      toEnable = ['.play-button', '.start-button'];\n      toDisable = ['.resume-button', '.pause-button', '.like-button', '.dislike-button', '.skip-button'];\n      break;\n  }\n\n  var _iterator = _createForOfIteratorHelper(toDisable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      this.$el.querySelectorAll(item).forEach(function (element) {\n        element.classList.remove('button-enabled');\n        element.classList.add('button-disabled');\n        element.disabled = true;\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(toEnable),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _item = _step2.value;\n      this.$el.querySelectorAll(_item).forEach(function (element) {\n        element.classList.remove('button-disabled');\n        element.classList.add('button-enabled');\n        element.disabled = false;\n      });\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var classes = this.$el.classList;\n  classes.remove('state-playing');\n  classes.remove('state-paused');\n  classes.remove('state-idle');\n  classes.add('state-' + state);\n};\n\nvar METADATA_TIMEOUT = 10000;\nvar ADVANCE_TIMEOUT = 8000;\n/**\n * This class connects to a specific simulcast stream and\n * sends out events to indicate when new songs are starting\n * or when music has stopped playing. This class exposes \n * 'connect' and 'disconnect' methods to turn on the audio or stop\n * the audio.\n * \n *   initializeAudio\n *   connect\n *   disconnect\n *   getVolume\n *   setVolume\n * \n * The player has a state, returned from getCurrentState():\n * \n *   'idle'       - class hasn't attempted to connect to the stream, or we've\n *                  disconnected from a stream.\n *   'connecting' - we're conneting to the stream (this is set when a\n *                  call to 'connect()' is made)\n *   'connected'  - we have connected to the stream and are playing music (or silence)\n *   'music-unavailable' - no music is available for this client for this stream\n * \n * The audio volume can be adjusted with setVolume() and retrieved with\n * getVolume().\n * \n * The player triggers the following events:\n *    play-started - indicates a new song has begun playback, or we've\n *        dropped in on an already playing song. The 'play' that represents\n *        the song is passed as an argument. The 'play' value may be null, \n *        which indicates silence is playing right now.\n *    music-unavailable - indicates the listener may not listen to music\n *    state-changed - indicates the state of the player changed\n * \n * Upon a call to 'connect', the client can expect either a 'play-started'\n * event or a 'music-unavailable' event.\n */\n\nvar SimulcastPlayer = /*#__PURE__*/function () {\n  // var _uuid;     // uuid of stream\n  // var _speaker;  // Speaker instance\n  // var _streamUrl; // stream we're connecting to\n  // var _activePlay; // currently playing song, or null\n  // var _activeSound; // if we're playing, this holds the sound\n  // var _metadataTimeout; // timeout for retrieving updated metadata\n  // var _tryingToPlay = false; // true if we want to play/hear music\n  // var _retries; // number of times we've retried playing music\n  function SimulcastPlayer(uuid) {\n    _classCallCheck(this, SimulcastPlayer);\n\n    Object.assign(this, Events);\n    this._speaker = new Speaker();\n    this._uuid = uuid;\n    this._state = 'idle';\n    this._activePlay = null;\n    this._activeSound = null;\n    this._metadataTimeout = null;\n    this._tryingToPlay = false;\n    this._retries = 0;\n  }\n\n  _createClass(SimulcastPlayer, [{\n    key: \"initializeAudio\",\n    value: function initializeAudio() {\n      log('INTIALIZE AUDIO');\n\n      this._speaker.initializeAudio();\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      log(\"CONNECT to \".concat(this._uuid));\n\n      if (this._tryingToPlay) {\n        log(\"ignoring pointless connect to \".concat(this._uuid));\n        return;\n      }\n\n      if (this._state !== 'idle') {\n        log('ignoring connect() since we\\'re already connected');\n        return;\n      }\n\n      this._tryingToPlay = true; // initialize speaker,\n\n      this._speaker.initializeAudio();\n\n      this._setState('connecting'); // this should ask the API server for a URL, really\n\n\n      var baseApiUrl = new URL(getBaseUrl());\n      this._streamUrl = 'https://cast.' + baseApiUrl.hostname + '/' + this._uuid;\n\n      this._requestStream();\n    }\n  }, {\n    key: \"_onSoundPlay\",\n    value: function _onSoundPlay() {\n      var _this = this;\n\n      // we've just connected to the stream.\n      log('sound play!'); // reset retry count\n\n      this._retries = 0; // starting point to watch for stalls\n\n      this._lastElapsedAt = Date.now();\n\n      if (this._state === 'connecting') {\n        this._setState('connected'); // get details about the play\n\n\n        fetch(this._streamUrl + '/play?elapsed=' + this._elapsed).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            _this._activePlay = res.play;\n\n            _this.trigger('play-started', _this._activePlay);\n\n            _this._scheduleMetadataTimeout();\n          } else {\n            // try again in 3 seconds\n            _this._scheduleMetadataTimeout(3000);\n          }\n        }).catch(function () {\n          // try again in 2 seconds\n          _this._scheduleMetadataTimeout(2000);\n        });\n      } else if (!this._metadataTimeout) {\n        this._scheduleMetadataTimeout();\n      }\n    }\n  }, {\n    key: \"_scheduleMetadataTimeout\",\n    value: function _scheduleMetadataTimeout() {\n      var _this2 = this;\n\n      var ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : METADATA_TIMEOUT;\n\n      this._cancelMetadataTimeout();\n\n      this._metadataTimeout = setTimeout(function () {\n        _this2._onMetadataTimeout();\n      }, ms);\n    }\n  }, {\n    key: \"_cancelMetadataTimeout\",\n    value: function _cancelMetadataTimeout() {\n      if (this._metadataTimeout) {\n        clearTimeout(this._metadataTimeout);\n      }\n\n      this._metadataTimeout = null;\n    }\n  }, {\n    key: \"_onSoundElapse\",\n    value: function _onSoundElapse() {\n      if (this._activeSound) {\n        var oldElapsed = this._elapsed;\n\n        var newlyElapsed = this._elapsed = this._activeSound.position();\n\n        if (newlyElapsed - oldElapsed > 0) {\n          this._lastElapsedAt = Date.now();\n        }\n      }\n    }\n  }, {\n    key: \"_requestStream\",\n    value: function _requestStream() {\n      log('requesting stream');\n\n      if (!this._tryingToPlay) {\n        return;\n      }\n\n      if (this._activeSound) {\n        this._activeSound.destroy();\n\n        this._activeSound = null;\n      } // don't query for metadata while we are trying to stream again\n\n\n      this._cancelMetadataTimeout();\n\n      this._activePlay = null; // keep retrying until we reconnect (but increase space between retries)\n\n      this._activeSound = this._speaker.create(this._streamUrl, {\n        play: this._onSoundPlay.bind(this),\n        finish: this._onSoundFinish.bind(this),\n        elapse: this._onSoundElapse.bind(this)\n      });\n\n      this._activeSound.play();\n\n      this._elapsed = 0;\n      this._lastElapsedAt = Date.now();\n    }\n  }, {\n    key: \"_onMetadataTimeout\",\n    value: function _onMetadataTimeout() {\n      var _this3 = this;\n\n      this._cancelMetadataTimeout(); // check for update of current song\n\n\n      fetch(this._streamUrl + '/play?elapsed=' + this._elapsed).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          if (res.play === null && _this3._activePlay !== null || res.play !== null && _this3._activePlay === null || res.play !== null && _this3._activePlay !== null && res.play.audio_file.id !== _this3._activePlay.audio_file.id) {\n            _this3._activePlay = res.play;\n            log('current play updated', _this3._activePlay);\n\n            _this3.trigger('play-started', _this3._activePlay);\n          }\n        }\n\n        _this3._scheduleMetadataTimeout();\n\n        var elapsed = Date.now() - _this3._lastElapsedAt;\n\n        if (elapsed > ADVANCE_TIMEOUT) {\n          log(\"stream has not advanced for \".concat(elapsed, \" ms, so reconnecting\"), _this3.toObject()); // reconnect if we've been down for a while\n\n          _this3._requestStream();\n        }\n      }).catch(function () {\n        var elapsed = Date.now() - _this3._lastElapsedAt;\n\n        if (elapsed > ADVANCE_TIMEOUT) {\n          log(\"stream has not advanced for \".concat(elapsed, \" ms, so reconnecting\"), _this3.toObject()); // reconnect if we've been down for a while\n\n          _this3._requestStream();\n        } else {\n          _this3._scheduleMetadataTimeout();\n        }\n      });\n    }\n  }, {\n    key: \"_onSoundFinish\",\n    value: function _onSoundFinish(error) {\n      var _this4 = this;\n\n      log('sound finished', this.toObject());\n\n      if (this._state === 'connecting' && error) {\n        // we weren't granted access to stream\n        this._tryingToPlay = false;\n\n        this._setState('music-unavailable');\n\n        this.trigger('music-unavailable');\n      } else {\n        log('reconnecting after stream ended', error); // we must have lost the stream during playback. try\n        // reconnecting. \n\n        if (this._activeSound) {\n          this._activeSound.destroy();\n\n          this._activeSound = null;\n        } // don't query for metadata while we are trying to stream again\n\n\n        this._cancelMetadataTimeout();\n\n        this._activePlay = null; // keep retrying until we reconnect (but increase space between retries)\n\n        this._retries += 1;\n        setTimeout(function () {\n          if (_this4._tryingToPlay) {\n            log('retrying connection after stream ended');\n\n            _this4._requestStream();\n          }\n        }, Math.pow(2, this._retries));\n      } // help us narrow down streaming issues\n\n\n      this._logEvents();\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      log('DISCONNECT', this.toObject());\n\n      if (!this._tryingToPlay) {\n        return;\n      }\n\n      this._tryingToPlay = false;\n      this._activePlay = null;\n      this._elapsed = 0;\n\n      this._cancelMetadataTimeout(); // stop and destroy our sound object\n\n\n      if (this._activeSound) {\n        this._activeSound.destroy();\n\n        this._activeSound = null;\n      }\n\n      this._setState('idle');\n\n      this._logEvents();\n    }\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this._speaker.getVolume();\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(vol) {\n      this._speaker.setVolume(vol);\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(newState) {\n      if (this._state !== newState) {\n        log(\"state transition \".concat(this._state, \" -> \").concat(newState));\n        this._state = newState;\n        this.trigger('state-changed', this._state);\n      }\n    }\n  }, {\n    key: \"getCurrentState\",\n    value: function getCurrentState() {\n      return this._state;\n    }\n  }, {\n    key: \"getCurrentPlay\",\n    value: function getCurrentPlay() {\n      return this._activePlay;\n    }\n  }, {\n    key: \"_logEvents\",\n    value: function _logEvents() {\n      var history = log.reset();\n      return fetch(getBaseUrl() + '/api/v2/session/event', {\n        method: 'POST',\n        body: JSON.stringify({\n          event: 'playerHistory',\n          parameters: history\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Feed-SDK': version + ' js'\n        }\n      });\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      return {\n        state: this._state,\n        activePlay: this._activePlay,\n        uuid: this._uuid,\n        metadataTimeoutIsNull: this._metadataTimeout === null,\n        tryingToPlay: this._tryingToPlay,\n        elapsed: this._elapsed,\n        retries: this._retries\n      };\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toString());\n    }\n  }]);\n\n  return SimulcastPlayer;\n}();\n\n/**\n * This method checks local storage to see if a Player instance was playing\n * music within the given number of milliseconds. If not, null is returned.\n * If so, a new Player instance is created and returned, but the `tune()`\n * method is swapped out so that, after calling `tune()` the player will \n * transition into a `paused` state. When `play()` is called, the player\n * will begin playback from the last position of the song the player\n * was previously playing.\n **/\n\nfunction resumable() {\n  var maxMilliseconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;\n  var state = retrieveStateAndElapsed(maxMilliseconds);\n\n  if (state.length === 2) {\n    var _state = _slicedToArray(state, 2),\n        persisted = _state[0],\n        elapsed = _state[1];\n\n    var player = new Player({\n      persisted: persisted,\n      elapsed: elapsed\n    });\n    return player;\n  }\n\n  return null;\n}\n\nvar index = {\n  Speaker: Speaker,\n  Session: Session,\n  Player: Player,\n  Listener: Listener,\n  PlayerView: PlayerView,\n  SimulcastPlayer: SimulcastPlayer,\n  log: log,\n  version: version,\n  resetClientId: deleteClientId,\n  getClientId: getClientId,\n  setBaseUrl: setBaseUrl,\n  resumable: resumable\n};\n\nmodule.exports = index;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}