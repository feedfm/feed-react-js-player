{"ast":null,"code":"var _jsxFileName = \"/Users/jarow/Documents/feedtest/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const status = useScript(\"https://feed.fm/js/feed-media-audio-player.1.99.2.min.js\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"player-view-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-button\",\n      children: \"play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pause-button\",\n      children: \"pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"skip-button\",\n      children: \"skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"KnhrVUMAU9xeWQjRlzV8Su+Ts6Q=\", false, function () {\n  return [useScript];\n});\n\n_c = App;\n\nfunction useScript(src) {\n  _s2();\n\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? \"loading\" : \"idle\");\n  useEffect(() => {\n    // Allow falsy src value if waiting on other data needed for\n    // constructing the script URL passed to this hook.\n    if (!src) {\n      setStatus(\"idle\");\n      return;\n    } // Fetch existing script element by src\n    // It may have been added by another intance of this hook\n\n\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n\n    if (!script) {\n      // Create script\n      var customsript = \"var player = new Feed.Player('demo', 'demo'); var playerView = new Feed.PlayerView('player-view-div', player); player.tune();\";\n      script = document.createElement(\"script\");\n      script.src = src + customscript;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\"); // Add script to document body\n\n      document.body.appendChild(script); // Store status in attribute on script\n      // This can be read by other instances of this hook\n\n      const setAttributeFromEvent = event => {\n        script.setAttribute(\"data-status\", event.type === \"load\" ? \"ready\" : \"error\");\n      };\n\n      script.addEventListener(\"load\", setAttributeFromEvent);\n      script.addEventListener(\"error\", setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.getAttribute(\"data-status\"));\n    } // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n\n\n    const setStateFromEvent = event => {\n      setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n    }; // Add event listeners\n\n\n    script.addEventListener(\"load\", setStateFromEvent);\n    script.addEventListener(\"error\", setStateFromEvent); // Remove event listeners on cleanup\n\n    return () => {\n      if (script) {\n        script.removeEventListener(\"load\", setStateFromEvent);\n        script.removeEventListener(\"error\", setStateFromEvent);\n      }\n    };\n  }, [src] // Only re-run effect if script src changes\n  );\n  return status;\n}\n\n_s2(useScript, \"+f9IL1HePzIreJ9B7ooGFgOjwwU=\");\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","status","useScript","src","setStatus","script","document","querySelector","customsript","createElement","customscript","async","setAttribute","body","appendChild","setAttributeFromEvent","event","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener"],"sources":["/Users/jarow/Documents/feedtest/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const status = useScript(\n    \"https://feed.fm/js/feed-media-audio-player.1.99.2.min.js\"\n  );\n  \n  return (\n      <div id=\"player-view-div\">\n        <div className='status'></div>\n        <button className=\"play-button\">play</button>\n        <button className=\"pause-button\">pause</button>\n        <button className=\"skip-button\">skip</button>\n      </div>\n  );\n}\nfunction useScript(src) {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? \"loading\" : \"idle\");\n  \n  useEffect(\n    () => {\n      // Allow falsy src value if waiting on other data needed for\n      // constructing the script URL passed to this hook.\n      if (!src) {\n        setStatus(\"idle\");\n        return;\n      }\n      // Fetch existing script element by src\n      // It may have been added by another intance of this hook\n      let script = document.querySelector(`script[src=\"${src}\"]`);\n      if (!script) {\n        // Create script\n\n        var customsript = \"var player = new Feed.Player('demo', 'demo'); var playerView = new Feed.PlayerView('player-view-div', player); player.tune();\"\n\n        script = document.createElement(\"script\");\n        script.src = src + customscript;\n        script.async = true;\n        script.setAttribute(\"data-status\", \"loading\");\n        // Add script to document body\n        document.body.appendChild(script);\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event) => {\n          script.setAttribute(\n            \"data-status\",\n            event.type === \"load\" ? \"ready\" : \"error\"\n          );\n        };\n        script.addEventListener(\"load\", setAttributeFromEvent);\n        script.addEventListener(\"error\", setAttributeFromEvent);\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute(\"data-status\"));\n      }\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event) => {\n        setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n      };\n      // Add event listeners\n      script.addEventListener(\"load\", setStateFromEvent);\n      script.addEventListener(\"error\", setStateFromEvent);\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener(\"load\", setStateFromEvent);\n          script.removeEventListener(\"error\", setStateFromEvent);\n        }\n      };\n    },\n    [src] // Only re-run effect if script src changes\n  );\n  return status;\n}\n\nexport default App;\n"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,MAAM,GAAGC,SAAS,CACtB,0DADsB,CAAxB;EAIA,oBACI;IAAK,EAAE,EAAC,iBAAR;IAAA,wBACE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,SAAS,EAAC,aAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,SAAS,EAAC,cAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,SAAS,EAAC,aAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQD;;GAbQF,G;UACQE,S;;;KADRF,G;;AAcT,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;EAAA;;EACtB;EACA,MAAM,CAACF,MAAD,EAASG,SAAT,IAAsBN,QAAQ,CAACK,GAAG,GAAG,SAAH,GAAe,MAAnB,CAApC;EAEAJ,SAAS,CACP,MAAM;IACJ;IACA;IACA,IAAI,CAACI,GAAL,EAAU;MACRC,SAAS,CAAC,MAAD,CAAT;MACA;IACD,CANG,CAOJ;IACA;;;IACA,IAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAwB,eAAcJ,GAAI,IAA1C,CAAb;;IACA,IAAI,CAACE,MAAL,EAAa;MACX;MAEA,IAAIG,WAAW,GAAG,+HAAlB;MAEAH,MAAM,GAAGC,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAT;MACAJ,MAAM,CAACF,GAAP,GAAaA,GAAG,GAAGO,YAAnB;MACAL,MAAM,CAACM,KAAP,GAAe,IAAf;MACAN,MAAM,CAACO,YAAP,CAAoB,aAApB,EAAmC,SAAnC,EARW,CASX;;MACAN,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,MAA1B,EAVW,CAWX;MACA;;MACA,MAAMU,qBAAqB,GAAIC,KAAD,IAAW;QACvCX,MAAM,CAACO,YAAP,CACE,aADF,EAEEI,KAAK,CAACC,IAAN,KAAe,MAAf,GAAwB,OAAxB,GAAkC,OAFpC;MAID,CALD;;MAMAZ,MAAM,CAACa,gBAAP,CAAwB,MAAxB,EAAgCH,qBAAhC;MACAV,MAAM,CAACa,gBAAP,CAAwB,OAAxB,EAAiCH,qBAAjC;IACD,CArBD,MAqBO;MACL;MACAX,SAAS,CAACC,MAAM,CAACc,YAAP,CAAoB,aAApB,CAAD,CAAT;IACD,CAlCG,CAmCJ;IACA;IACA;;;IACA,MAAMC,iBAAiB,GAAIJ,KAAD,IAAW;MACnCZ,SAAS,CAACY,KAAK,CAACC,IAAN,KAAe,MAAf,GAAwB,OAAxB,GAAkC,OAAnC,CAAT;IACD,CAFD,CAtCI,CAyCJ;;;IACAZ,MAAM,CAACa,gBAAP,CAAwB,MAAxB,EAAgCE,iBAAhC;IACAf,MAAM,CAACa,gBAAP,CAAwB,OAAxB,EAAiCE,iBAAjC,EA3CI,CA4CJ;;IACA,OAAO,MAAM;MACX,IAAIf,MAAJ,EAAY;QACVA,MAAM,CAACgB,mBAAP,CAA2B,MAA3B,EAAmCD,iBAAnC;QACAf,MAAM,CAACgB,mBAAP,CAA2B,OAA3B,EAAoCD,iBAApC;MACD;IACF,CALD;EAMD,CApDM,EAqDP,CAACjB,GAAD,CArDO,CAqDD;EArDC,CAAT;EAuDA,OAAOF,MAAP;AACD;;IA5DQC,S;;AA8DT,eAAeF,GAAf"},"metadata":{},"sourceType":"module"}